{
  "v": "8.0.1",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "connectActionType": null,
    "fitContent": false,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 367709,
      "p": {
        "name": "base",
        "displayName": "底板（_base）",
        "tag": "_base",
        "position": {
          "x": -290.414,
          "y": -158.68318
        },
        "width": 1024,
        "height": 600
      },
      "s": {
        "shape": "rect",
        "shape.background": "rgb(247,246,251)",
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "2d.movable": false,
        "label.opacity": 0,
        "interactive": true,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "2d.selectable": false
      }
    },
    {
      "c": "ht.UGrid",
      "i": 367710,
      "p": {
        "name": "grid",
        "displayName": "网格组合（grid3）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "grid3",
        "dataBindings": {
          "a": {
            "datas": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "rowIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "columnIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "removeOthers": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.auto.fill": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.gap": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "valueGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "itemsGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sun Jul 21 2024 11:16:06 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址",
              "description": "显示组件地址，无需填写。通常仅当公共属性组件源值为对象类型时，组件源属性中原先存放的地址字符串会转存到当前属性上。"
            },
            {
              "attr": "grid.row.count",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "description": "网格行数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#zm9H2\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>\n",
              "group": "功能",
              "name": "grid.row.count"
            },
            {
              "attr": "grid.column.count",
              "valueType": "PositiveNumber",
              "defaultValue": 4,
              "description": "网格列数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Jrj9b\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "grid.column.count"
            },
            {
              "attr": "rowIndex",
              "valueType": "Number",
              "description": "指定某行显示，其余行隐藏。\n结合显示指定列（﻿columnIndex﻿）对列\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jv54g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "rowIndex"
            },
            {
              "attr": "columnIndex",
              "valueType": "Number",
              "description": "指定某列显示，其余列隐藏。\n结合显示指定行（﻿rowIndex﻿）对行\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#LVpTU\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "columnIndex"
            },
            {
              "attr": "removeOthers",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否移除指显示以外的项。\n<br>与显示指定行（﻿rowIndex﻿）、显示\n<br>指定列（﻿columnIndex﻿）配合使用。\n<br>当指定某个行列的项后，是否移除\n<br>网格内的所有其他项。默认不勾选。",
              "extraInfo": "★",
              "name": "removeOthers"
            },
            {
              "attr": "grid.auto.fill",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "增大行或列时，多出的格子\n<br>是否自动（按照最后一个组件复制）进行填充。",
              "name": "grid.auto.fill"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "description": "用户数据。\n<br>用于存放任意用户自定义数据。",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "grid.column.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从左到右每列宽度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rEL9I\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "group": "外观",
              "name": "grid.column.percents"
            },
            {
              "attr": "grid.row.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从上到下每行高度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jqIG0\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "name": "grid.row.percents"
            },
            {
              "attr": "grid.border",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                0,
                0
              ],
              "description": "网格内组件与四边的间距。\n<br>数组长度为4，分别对应上、右、下、左。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#le90g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "grid.border"
            },
            {
              "attr": "grid.gap",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "所有行与列之间的统一间距。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#d77xF\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "extraInfo": "★",
              "name": "grid.gap"
            },
            {
              "attr": "node.margin.h",
              "valueType": "Number",
              "defaultValue": 15,
              "description": "任意列左右边距。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#byn7m\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.h"
            },
            {
              "attr": "node.margin.v",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "任意行上下边距。参考\n<br>列左右边距（﻿node.margin.h﻿）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#OUN5D\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.v"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "网格组件边框宽度。\n<br>注意，边框为默认颜色、和宽度（3px）时，\n<br>运行时边框不可见。其他颜色和粗细设置，\n<br>运行时可见。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rDd5W\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "borderWidth"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.20)",
              "description": "网格组件边框颜色。",
              "extraInfo": "★",
              "name": "borderColor"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "网格组件背景颜色。",
              "extraInfo": "★",
              "name": "background"
            },
            {
              "attr": "enable",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启网格组件的下拉级联功能。\n<br>勾选后数量设置（﻿sizeSet﻿）设置才会起作用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#YgvpK\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "group": "下拉级联 *",
              "extraInfo": "*",
              "name": "enable"
            },
            {
              "attr": "datas",
              "valueType": "ObjectArray",
              "description": "用于传入数据集。通常是接口查询\n<br>返回解析提取的数据，为固定字段构成的对象数组。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#F1kMs\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": [],
              "extraInfo": "*",
              "name": "datas"
            },
            {
              "attr": "sizeSet",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "下拉框数量和字段设置，\n需先勾选功能启用（﻿enable﻿）。设置会同步触发下拉框\n以及名称为“字段_X”属性的动态增减。属性用于配置下\n拉框的数据字段，X为从0开始的索引，与组件从左到右\n依次对应。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Es7mE\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "sizeSet"
            },
            {
              "attr": "valueGet",
              "valueType": "Object",
              "description": "当前选择字段值。下拉框字段和当前值的键值对。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#ESuIC\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "valueGet"
            },
            {
              "attr": "itemsGet",
              "valueType": "Object",
              "description": "满足条件的数据列表。下拉框对应\n<br>的字段和当前值作为条件，数据内容（﻿datas﻿）满足\n条件的所有数据项列表。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#isFy6\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "itemsGet"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "级联功能启用时，下拉选择\n或数据内容（datas）变化时触发当前事件。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Y0SaL\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "onChange"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols\\develop\\uiotos\\arranged\\controls\\forms_icon\\网格.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __grid(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "fitSize": true,
          "scrollable": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "rect",
              "background": {
                "func": "attr@background",
                "value": null
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(55,125,255)"
              },
              "borderWidthAbsolute": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "A772B03C-090B-48D4-AE17-7E3F439EC6C9"
        },
        "host": {
          "__i": 367709
        },
        "position": {
          "x": -290.414,
          "y": -158.68318
        },
        "width": 994.97572,
        "height": 556.38828
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "grid.gap": 0,
        "grid.row.count": 2,
        "grid.borderRadius": 10,
        "interactive": true,
        "grid.border": 0,
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "topbottom",
        "grid.column.percents": [],
        "grid.row.percents": []
      },
      "a": {
        "grid.row.count": 2,
        "grid.column.count": 1,
        "grid.border": 0,
        "symbol": "symbols/develop/uiotos/arranged/controls/forms/07-其他/网格.json",
        "node.margin.h": 0,
        "node.margin.v": 3,
        "borderWidth": 0,
        "rowIndex": -1,
        "grid.row.percents": [],
        "grid.column.percents": []
      }
    },
    {
      "c": "ht.UGrid",
      "i": 367711,
      "p": {
        "name": "grid",
        "displayName": "网格组合（grid2）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367710
        },
        "tag": "grid2",
        "dataBindings": {
          "a": {
            "datas": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "rowIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "columnIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "removeOthers": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.auto.fill": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.gap": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "valueGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "itemsGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sun Jul 21 2024 11:16:06 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址",
              "description": "显示组件地址，无需填写。通常仅当公共属性组件源值为对象类型时，组件源属性中原先存放的地址字符串会转存到当前属性上。"
            },
            {
              "attr": "grid.row.count",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "description": "网格行数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#zm9H2\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>\n",
              "group": "功能",
              "name": "grid.row.count"
            },
            {
              "attr": "grid.column.count",
              "valueType": "PositiveNumber",
              "defaultValue": 4,
              "description": "网格列数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Jrj9b\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "grid.column.count"
            },
            {
              "attr": "rowIndex",
              "valueType": "Number",
              "description": "指定某行显示，其余行隐藏。\n结合显示指定列（﻿columnIndex﻿）对列\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jv54g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "rowIndex"
            },
            {
              "attr": "columnIndex",
              "valueType": "Number",
              "description": "指定某列显示，其余列隐藏。\n结合显示指定行（﻿rowIndex﻿）对行\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#LVpTU\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "columnIndex"
            },
            {
              "attr": "removeOthers",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否移除指显示以外的项。\n<br>与显示指定行（﻿rowIndex﻿）、显示\n<br>指定列（﻿columnIndex﻿）配合使用。\n<br>当指定某个行列的项后，是否移除\n<br>网格内的所有其他项。默认不勾选。",
              "extraInfo": "★",
              "name": "removeOthers"
            },
            {
              "attr": "grid.auto.fill",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "增大行或列时，多出的格子\n<br>是否自动（按照最后一个组件复制）进行填充。",
              "name": "grid.auto.fill"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "description": "用户数据。\n<br>用于存放任意用户自定义数据。",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "grid.column.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从左到右每列宽度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rEL9I\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "group": "外观",
              "name": "grid.column.percents"
            },
            {
              "attr": "grid.row.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从上到下每行高度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jqIG0\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "name": "grid.row.percents"
            },
            {
              "attr": "grid.border",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                0,
                0
              ],
              "description": "网格内组件与四边的间距。\n<br>数组长度为4，分别对应上、右、下、左。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#le90g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "grid.border"
            },
            {
              "attr": "grid.gap",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "所有行与列之间的统一间距。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#d77xF\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "extraInfo": "★",
              "name": "grid.gap"
            },
            {
              "attr": "node.margin.h",
              "valueType": "Number",
              "defaultValue": 15,
              "description": "任意列左右边距。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#byn7m\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.h"
            },
            {
              "attr": "node.margin.v",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "任意行上下边距。参考\n<br>列左右边距（﻿node.margin.h﻿）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#OUN5D\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.v"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "网格组件边框宽度。\n<br>注意，边框为默认颜色、和宽度（3px）时，\n<br>运行时边框不可见。其他颜色和粗细设置，\n<br>运行时可见。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rDd5W\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "borderWidth"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.20)",
              "description": "网格组件边框颜色。",
              "extraInfo": "★",
              "name": "borderColor"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "网格组件背景颜色。",
              "extraInfo": "★",
              "name": "background"
            },
            {
              "attr": "enable",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启网格组件的下拉级联功能。\n<br>勾选后数量设置（﻿sizeSet﻿）设置才会起作用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#YgvpK\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "group": "下拉级联 *",
              "extraInfo": "*",
              "name": "enable"
            },
            {
              "attr": "datas",
              "valueType": "ObjectArray",
              "description": "用于传入数据集。通常是接口查询\n<br>返回解析提取的数据，为固定字段构成的对象数组。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#F1kMs\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": [],
              "extraInfo": "*",
              "name": "datas"
            },
            {
              "attr": "sizeSet",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "下拉框数量和字段设置，\n需先勾选功能启用（﻿enable﻿）。设置会同步触发下拉框\n以及名称为“字段_X”属性的动态增减。属性用于配置下\n拉框的数据字段，X为从0开始的索引，与组件从左到右\n依次对应。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Es7mE\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "sizeSet"
            },
            {
              "attr": "valueGet",
              "valueType": "Object",
              "description": "当前选择字段值。下拉框字段和当前值的键值对。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#ESuIC\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "valueGet"
            },
            {
              "attr": "itemsGet",
              "valueType": "Object",
              "description": "满足条件的数据列表。下拉框对应\n<br>的字段和当前值作为条件，数据内容（﻿datas﻿）满足\n条件的所有数据项列表。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#isFy6\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "itemsGet"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "级联功能启用时，下拉选择\n或数据内容（datas）变化时触发当前事件。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Y0SaL\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "onChange"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols\\develop\\uiotos\\arranged\\controls\\forms_icon\\网格.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __grid(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "fitSize": true,
          "scrollable": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "rect",
              "background": {
                "func": "attr@background",
                "value": null
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(55,125,255)"
              },
              "borderWidthAbsolute": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "A772B03C-090B-48D4-AE17-7E3F439EC6C9"
        },
        "host": {
          "__i": 367710
        },
        "position": {
          "x": -290.414,
          "y": -297.78025
        },
        "width": 994.97572,
        "height": 272.19414
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "grid.gap": 0,
        "grid.column.count": 3,
        "grid.borderRadius": 10,
        "interactive": true,
        "grid.border": 0,
        "grid.column.percents": [
          0.249,
          0,
          0.249
        ],
        "attach.padding.top": -3,
        "attach.padding.bottom": -3,
        "2d.movable": false
      },
      "a": {
        "grid.row.count": 1,
        "grid.column.count": 3,
        "grid.border": 0,
        "symbol": "symbols/develop/uiotos/arranged/controls/forms/07-其他/网格.json",
        "node.margin.h": 3,
        "grid.column.percents": [
          0.249,
          0,
          0.249
        ],
        "borderWidth": 0,
        "origin_width": 929.02294,
        "origin_height": 280.14338,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367712,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367711
        },
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片1.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367711
        },
        "position": {
          "x": -663.26838,
          "y": -297.78025
        },
        "width": 243.26695,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 249.26695,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片1.json",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367713,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv2）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367711
        },
        "tag": "gv2",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片2.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "模板",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:display",
              "name": ".页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popDirection",
              "name": ".提示方向",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBackground",
              "name": ".提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popPadding",
              "name": ".提示边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popWidth",
              "name": ".提示区宽度",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popHeight",
              "name": ".提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderColor",
              "name": ".提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderWidth",
              "name": ".提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderRadius",
              "name": ".提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popTriggerEvent",
              "name": ".提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "圆角阴影矩形>0>title1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367711
        },
        "position": {
          "x": -290.414,
          "y": -297.78025
        },
        "width": 490.44181,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.column.index": 1,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0
      },
      "a": {
        "origin_width": 249.26695,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片2.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>title1>a:text": "模板",
        "圆角阴影矩形>0>title1>a:display": "",
        "圆角阴影矩形>0>title1>a:popDirection": "right",
        "圆角阴影矩形>0>title1>a:popBackground": "white",
        "圆角阴影矩形>0>title1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "圆角阴影矩形>0>title1>a:popWidth": 400,
        "圆角阴影矩形>0>title1>a:popHeight": 300,
        "圆角阴影矩形>0>title1>a:popBorderColor": "rgb(51,51,51)",
        "圆角阴影矩形>0>title1>a:popBorderWidth": 0,
        "圆角阴影矩形>0>title1>a:popBorderRadius": 0,
        "圆角阴影矩形>0>title1>a:popTriggerEvent": "hover",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367714,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv3）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367711
        },
        "tag": "gv3",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片3.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "模板",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:display",
              "name": ".页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popDirection",
              "name": ".提示方向",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBackground",
              "name": ".提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popPadding",
              "name": ".提示边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popWidth",
              "name": ".提示区宽度",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popHeight",
              "name": ".提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderColor",
              "name": ".提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderWidth",
              "name": ".提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderRadius",
              "name": ".提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popTriggerEvent",
              "name": ".提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "圆角阴影矩形>0>title1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367711
        },
        "position": {
          "x": 82.44038,
          "y": -297.78025
        },
        "width": 243.26695,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.column.index": 2,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 249.26695,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片3.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>title1>a:text": "模板",
        "圆角阴影矩形>0>title1>a:display": "",
        "圆角阴影矩形>0>title1>a:popDirection": "right",
        "圆角阴影矩形>0>title1>a:popBackground": "white",
        "圆角阴影矩形>0>title1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "圆角阴影矩形>0>title1>a:popWidth": 400,
        "圆角阴影矩形>0>title1>a:popHeight": 300,
        "圆角阴影矩形>0>title1>a:popBorderColor": "rgb(51,51,51)",
        "圆角阴影矩形>0>title1>a:popBorderWidth": 0,
        "圆角阴影矩形>0>title1>a:popBorderRadius": 0,
        "圆角阴影矩形>0>title1>a:popTriggerEvent": "hover",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UGrid",
      "i": 367715,
      "p": {
        "name": "grid",
        "displayName": "网格组合（grid1）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367710
        },
        "tag": "grid1",
        "dataBindings": {
          "a": {
            "datas": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "rowIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "columnIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "removeOthers": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.auto.fill": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.gap": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "valueGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "itemsGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sun Jul 21 2024 11:16:06 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址",
              "description": "显示组件地址，无需填写。通常仅当公共属性组件源值为对象类型时，组件源属性中原先存放的地址字符串会转存到当前属性上。"
            },
            {
              "attr": "grid.row.count",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "description": "网格行数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#zm9H2\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>\n",
              "group": "功能",
              "name": "grid.row.count"
            },
            {
              "attr": "grid.column.count",
              "valueType": "PositiveNumber",
              "defaultValue": 4,
              "description": "网格列数。\n<br>可以动态增加或减少，其中增加时，\n<br>结合自动填充（grid.auto.fill）属性\n<br>判断是否按照最后组件复制填充。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Jrj9b\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "grid.column.count"
            },
            {
              "attr": "rowIndex",
              "valueType": "Number",
              "description": "指定某行显示，其余行隐藏。\n结合显示指定列（﻿columnIndex﻿）对列\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jv54g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "rowIndex"
            },
            {
              "attr": "columnIndex",
              "valueType": "Number",
              "description": "指定某列显示，其余列隐藏。\n结合显示指定行（﻿rowIndex﻿）对行\n的指定一起使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#LVpTU\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "defaultValue": -1,
              "extraInfo": "★",
              "name": "columnIndex"
            },
            {
              "attr": "removeOthers",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否移除指显示以外的项。\n<br>与显示指定行（﻿rowIndex﻿）、显示\n<br>指定列（﻿columnIndex﻿）配合使用。\n<br>当指定某个行列的项后，是否移除\n<br>网格内的所有其他项。默认不勾选。",
              "extraInfo": "★",
              "name": "removeOthers"
            },
            {
              "attr": "grid.auto.fill",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "增大行或列时，多出的格子\n<br>是否自动（按照最后一个组件复制）进行填充。",
              "name": "grid.auto.fill"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "description": "用户数据。\n<br>用于存放任意用户自定义数据。",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "grid.column.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从左到右每列宽度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rEL9I\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "group": "外观",
              "name": "grid.column.percents"
            },
            {
              "attr": "grid.row.percents",
              "valueType": "NumberArray",
              "description": "组件网格布局中，从上到下每行高度比例。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jqIG0\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "name": "grid.row.percents"
            },
            {
              "attr": "grid.border",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                0,
                0
              ],
              "description": "网格内组件与四边的间距。\n<br>数组长度为4，分别对应上、右、下、左。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#le90g\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "grid.border"
            },
            {
              "attr": "grid.gap",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "所有行与列之间的统一间距。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#d77xF\" style=\"color:rgb(96,172,252)\" target=\"_blank\">参见文档</a>",
              "extraInfo": "★",
              "name": "grid.gap"
            },
            {
              "attr": "node.margin.h",
              "valueType": "Number",
              "defaultValue": 15,
              "description": "任意列左右边距。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#byn7m\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.h"
            },
            {
              "attr": "node.margin.v",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "任意行上下边距。参考\n<br>列左右边距（﻿node.margin.h﻿）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#OUN5D\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "node.margin.v"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "网格组件边框宽度。\n<br>注意，边框为默认颜色、和宽度（3px）时，\n<br>运行时边框不可见。其他颜色和粗细设置，\n<br>运行时可见。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#rDd5W\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "borderWidth"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.20)",
              "description": "网格组件边框颜色。",
              "extraInfo": "★",
              "name": "borderColor"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "网格组件背景颜色。",
              "extraInfo": "★",
              "name": "background"
            },
            {
              "attr": "enable",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启网格组件的下拉级联功能。\n<br>勾选后数量设置（﻿sizeSet﻿）设置才会起作用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#YgvpK\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "group": "下拉级联 *",
              "extraInfo": "*",
              "name": "enable"
            },
            {
              "attr": "datas",
              "valueType": "ObjectArray",
              "description": "用于传入数据集。通常是接口查询\n<br>返回解析提取的数据，为固定字段构成的对象数组。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#F1kMs\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": [],
              "extraInfo": "*",
              "name": "datas"
            },
            {
              "attr": "sizeSet",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "下拉框数量和字段设置，\n需先勾选功能启用（﻿enable﻿）。设置会同步触发下拉框\n以及名称为“字段_X”属性的动态增减。属性用于配置下\n拉框的数据字段，X为从0开始的索引，与组件从左到右\n依次对应。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Es7mE\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "sizeSet"
            },
            {
              "attr": "valueGet",
              "valueType": "Object",
              "description": "当前选择字段值。下拉框字段和当前值的键值对。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#ESuIC\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "valueGet"
            },
            {
              "attr": "itemsGet",
              "valueType": "Object",
              "description": "满足条件的数据列表。下拉框对应\n<br>的字段和当前值作为条件，数据内容（﻿datas﻿）满足\n条件的所有数据项列表。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#isFy6\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "itemsGet"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "级联功能启用时，下拉选择\n或数据内容（datas）变化时触发当前事件。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Y0SaL\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "onChange"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols\\develop\\uiotos\\arranged\\controls\\forms_icon\\网格.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __grid(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "fitSize": true,
          "scrollable": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "rect",
              "background": {
                "func": "attr@background",
                "value": null
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(55,125,255)"
              },
              "borderWidthAbsolute": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "A772B03C-090B-48D4-AE17-7E3F439EC6C9"
        },
        "host": {
          "__i": 367710
        },
        "position": {
          "x": -290.414,
          "y": -19.58611
        },
        "width": 994.97572,
        "height": 272.19414
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "grid.gap": 0,
        "grid.column.count": 4,
        "grid.borderRadius": 10,
        "interactive": true,
        "grid.border": 0,
        "attach.row.index": 1,
        "attach.padding.top": -3,
        "attach.padding.bottom": -3,
        "2d.movable": false
      },
      "a": {
        "grid.row.count": 1,
        "grid.column.count": 4,
        "grid.border": 0,
        "symbol": "symbols/develop/uiotos/arranged/controls/forms/07-其他/网格.json",
        "node.margin.h": 3,
        "borderWidth": 0,
        "origin_width": 100,
        "origin_height": 280.14338,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367716,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv4）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367715
        },
        "tag": "gv4",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片4.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367715
        },
        "position": {
          "x": -663.52989,
          "y": -19.58611
        },
        "width": 242.74393,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 248.74393,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片4.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367717,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv5）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367715
        },
        "tag": "gv5",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片5.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "模板",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:display",
              "name": ".页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popDirection",
              "name": ".提示方向",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBackground",
              "name": ".提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popPadding",
              "name": ".提示边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popWidth",
              "name": ".提示区宽度",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popHeight",
              "name": ".提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderColor",
              "name": ".提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderWidth",
              "name": ".提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderRadius",
              "name": ".提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popTriggerEvent",
              "name": ".提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "圆角阴影矩形>0>title1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367715
        },
        "position": {
          "x": -414.78596,
          "y": -19.58611
        },
        "width": 242.74393,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.column.index": 1,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 248.74393,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片5.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>title1>a:text": "模板",
        "圆角阴影矩形>0>title1>a:display": "",
        "圆角阴影矩形>0>title1>a:popDirection": "right",
        "圆角阴影矩形>0>title1>a:popBackground": "white",
        "圆角阴影矩形>0>title1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "圆角阴影矩形>0>title1>a:popWidth": 400,
        "圆角阴影矩形>0>title1>a:popHeight": 300,
        "圆角阴影矩形>0>title1>a:popBorderColor": "rgb(51,51,51)",
        "圆角阴影矩形>0>title1>a:popBorderWidth": 0,
        "圆角阴影矩形>0>title1>a:popBorderRadius": 0,
        "圆角阴影矩形>0>title1>a:popTriggerEvent": "hover",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367718,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv6）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367715
        },
        "tag": "gv6",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片6.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "模板",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:display",
              "name": ".页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popDirection",
              "name": ".提示方向",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBackground",
              "name": ".提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popPadding",
              "name": ".提示边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popWidth",
              "name": ".提示区宽度",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popHeight",
              "name": ".提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderColor",
              "name": ".提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderWidth",
              "name": ".提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderRadius",
              "name": ".提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popTriggerEvent",
              "name": ".提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "圆角阴影矩形>0>title1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367715
        },
        "position": {
          "x": -166.04203,
          "y": -19.58611
        },
        "width": 242.74393,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.column.index": 2,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 248.74393,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片6.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>title1>a:text": "模板",
        "圆角阴影矩形>0>title1>a:display": "",
        "圆角阴影矩形>0>title1>a:popDirection": "right",
        "圆角阴影矩形>0>title1>a:popBackground": "white",
        "圆角阴影矩形>0>title1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "圆角阴影矩形>0>title1>a:popWidth": 400,
        "圆角阴影矩形>0>title1>a:popHeight": 300,
        "圆角阴影矩形>0>title1>a:popBorderColor": "rgb(51,51,51)",
        "圆角阴影矩形>0>title1>a:popBorderWidth": 0,
        "圆角阴影矩形>0>title1>a:popBorderRadius": 0,
        "圆角阴影矩形>0>title1>a:popTriggerEvent": "hover",
        "innerBackground": "rgb(255,255,255)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 367719,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv7）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 367715
        },
        "tag": "gv7",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "圆角阴影矩形>0>阴影边框1>a:radius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "圆角阴影矩形>0>title1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "圆角阴影矩形>0>阴影边框1>a:radius",
              "name": ".radius",
              "valueType": "PositiveNumber",
              "defaultValue": 10,
              "group": "圆角阴影矩形>0>阴影边框1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:display",
              "name": ".页面路径",
              "valueType": "URL",
              "defaultValue": "./卡片7.json",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>gv1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "InnerLayoutMode",
              "defaultValue": "fullScreen",
              "description": "",
              "group": "圆角阴影矩形>0>gv1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "模板",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:display",
              "name": ".页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popDirection",
              "name": ".提示方向",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBackground",
              "name": ".提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popPadding",
              "name": ".提示边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popWidth",
              "name": ".提示区宽度",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popHeight",
              "name": ".提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderColor",
              "name": ".提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderWidth",
              "name": ".提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popBorderRadius",
              "name": ".提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "圆角阴影矩形>0>title1"
            },
            {
              "attr": "圆角阴影矩形>0>title1>a:popTriggerEvent",
              "name": ".提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "圆角阴影矩形>0>title1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 367715
        },
        "position": {
          "x": 82.70189,
          "y": -19.58611
        },
        "width": 242.74393,
        "height": 272.19414
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "attach.column.index": 3,
        "attach.padding.left": -3,
        "attach.padding.right": -3,
        "label.opacity": 0,
        "2d.selectable": false
      },
      "a": {
        "origin_width": 248.74393,
        "origin_height": 272.19414,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "display": "./04-仪表盘卡片_带公共模板/圆角阴影矩形.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>gv1>a:display": "./04-仪表盘卡片_带公共模板/卡片7.json",
        "圆角阴影矩形>0>阴影边框1>a:radius": 10,
        "圆角阴影矩形>0>gv1>a:innerLayoutMode": "fullScreen",
        "圆角阴影矩形>0>title1>a:text": "模板",
        "圆角阴影矩形>0>title1>a:display": "",
        "圆角阴影矩形>0>title1>a:popDirection": "right",
        "圆角阴影矩形>0>title1>a:popBackground": "white",
        "圆角阴影矩形>0>title1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "圆角阴影矩形>0>title1>a:popWidth": 400,
        "圆角阴影矩形>0>title1>a:popHeight": 300,
        "圆角阴影矩形>0>title1>a:popBorderColor": "rgb(51,51,51)",
        "圆角阴影矩形>0>title1>a:popBorderWidth": 0,
        "圆角阴影矩形>0>title1>a:popBorderRadius": 0,
        "圆角阴影矩形>0>title1>a:popTriggerEvent": "hover",
        "innerBackground": "rgb(255,255,255)"
      }
    }
  ],
  "modified": "Mon Aug 26 2024 17:35:53 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -821.91163,
    "y": -458.68318,
    "width": 1043.49763,
    "height": 600
  }
}