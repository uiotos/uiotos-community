{
  "v": "8.0.1",
  "p": {
    "background": "#20252e",
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "connectActionType": null,
    "fitContent": false,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 653407,
      "p": {
        "name": "阴影边框",
        "displayName": "阴影边框（阴影边框1）",
        "toolTip": "矩形区域的阴影边框",
        "tag": "阴影边框1",
        "dataBindings": {
          "a": {
            "radius": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "image": "symbols/develop/uiotos/common/阴影边框.json",
        "position": {
          "x": 778.03274,
          "y": 452.51792
        },
        "width": 200.05968,
        "height": 147.53587
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "label.opacity": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "fullscreen.gap": 0,
        "2d.movable": false,
        "fullscreen": "fill"
      },
      "a": {
        "background": "rgb(255,255,255)",
        "radius": 10
      }
    },
    {
      "c": "ht.UNode",
      "i": 653408,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "FFA96CB4-F272-4AB8-AA49-03F9B825A29D"
        },
        "host": {
          "__i": 653407
        },
        "position": {
          "x": 778.73553,
          "y": 464.55382
        },
        "width": 163.98678,
        "height": 97.16474
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "layout.h": "leftright",
        "layout.v": "topbottom",
        "label.opacity": 0,
        "2d.movable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "shadowEnabled": false,
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>"
      }
    },
    {
      "c": "ht.Node",
      "i": 653409,
      "p": {
        "name": "title",
        "displayName": "标签文字（title1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "title1",
        "dataBindings": {
          "a": {
            "text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Aug 24 2024 15:29:54 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "borderLeft",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否显示左边框。",
              "group": "功能",
              "name": "borderLeft"
            },
            {
              "attr": "borderTop",
              "valueType": "Boolean",
              "description": "是否显示上边框。",
              "name": "borderTop"
            },
            {
              "attr": "borderRight",
              "valueType": "Boolean",
              "description": "是否显示右边框。",
              "name": "borderRight"
            },
            {
              "attr": "borderDown",
              "valueType": "Boolean",
              "description": "是否显示下边框。",
              "name": "borderDown"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "description": "阴影边框。\n<br>数组类型，比如0、0、8，作为边框\n<br>阴影显示的三个参数，可以分别调整。",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "description": "阴影边框色。",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "阴影边框是否可见。",
              "extraInfo": "*",
              "name": "shadowEnabled"
            },
            {
              "attr": "text",
              "valueType": "String",
              "defaultValue": "文字",
              "description": "标签文字。\n<br>可以为空，当勾选四周任何一边时，则为线条，折线、\n<br>框线，可用于显示在非绘图组件上层。比如文本框、\n<br>容器等组件，始终会遮盖绘图组件包括矩形、连线。",
              "name": "text"
            },
            {
              "attr": "hAlign",
              "valueType": "HAlignType",
              "defaultValue": "left",
              "description": "文字水平对齐方式。",
              "name": "hAlign"
            },
            {
              "attr": "vAlign",
              "valueType": "VAlignType",
              "defaultValue": "middle",
              "description": "文字垂直对齐方式。",
              "name": "vAlign"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "description": "文字字体。",
              "defaultValue": "14px sans-serif, Arial",
              "name": "font"
            },
            {
              "attr": "labelColor",
              "valueType": "Color",
              "defaultValue": "rgb(124,145,155)",
              "description": "文字颜色。",
              "name": "labelColor"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "defaultValue": null,
              "description": "背景颜色。",
              "name": "background"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgb(124,145,155)",
              "description": "边框线颜色。",
              "name": "borderColor"
            },
            {
              "attr": "borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 3,
              "description": "边框线宽度。",
              "name": "borderWidth"
            },
            {
              "attr": "borderRadius",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                0,
                0
              ],
              "description": "边框圆角半径。",
              "name": "borderRadius"
            },
            {
              "attr": "padding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                5
              ],
              "description": "四周间距。\n<br>数组类型，上、右、下、左，表示文字与\n<br>四周边框的距离。",
              "name": "padding"
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/标签.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __label_ui(data,gv,cache);}",
          "width": 50,
          "height": 20,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "B1792749-7FE8-42A7-AA7F-215B8A3260B9"
        },
        "host": {
          "__i": 653407
        },
        "position": {
          "x": 733.19481,
          "y": 408.17662
        },
        "width": 60,
        "height": 17.34766
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "label.opacity": 0,
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/forms/03-文字显示/标签.json",
        "text": "模板",
        "labelColor": "rgb(55,125,255)",
        "borderColor": "rgb(51,153,255)"
      }
    }
  ],
  "modified": "Mon Aug 26 2024 17:47:38 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": 616.0029,
    "y": 378.74999,
    "width": 262.05968,
    "height": 147.53587
  }
}