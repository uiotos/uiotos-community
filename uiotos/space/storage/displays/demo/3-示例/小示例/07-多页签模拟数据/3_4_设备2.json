{
  "v": "8.0.1",
  "p": {
    "background": "#20252e",
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "connectActionType": null,
    "fitContent": false,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Shape",
      "i": 71283,
      "p": {
        "name": "Shape",
        "displayName": "Shape（Shape1）",
        "tag": "Shape1",
        "position": {
          "x": 963.6369,
          "y": 558.3448
        },
        "width": 445.88753,
        "height": 590.25532,
        "segments": null,
        "points": {
          "__a": [
            {
              "x": 740.69314,
              "y": 263.21714
            },
            {
              "x": 770.89586,
              "y": 263.21714
            },
            {
              "x": 1122.16065,
              "y": 263.21714
            },
            {
              "x": 1186.58066,
              "y": 332.13456
            },
            {
              "x": 1186.58066,
              "y": 853.47246
            },
            {
              "x": 762.45159,
              "y": 853.47246
            },
            {
              "x": 740.69314,
              "y": 829.70768
            },
            {
              "x": 740.69314,
              "y": 568.67357
            },
            {
              "x": 748.78043,
              "y": 558.76084
            },
            {
              "x": 748.78043,
              "y": 525.51478
            },
            {
              "x": 740.69314,
              "y": 518.90443
            }
          ]
        }
      },
      "s": {
        "type": "shape",
        "opacity": 1,
        "shape.background": "rgba(6,13,36,0.80)",
        "shape.border.color": "#979797",
        "shape.dash.pattern": [
          16,
          16
        ],
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "label.opacity": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "2d.selectable": false
      }
    },
    {
      "c": "ht.Text",
      "i": 71284,
      "p": {
        "displayName": "Text（Text1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "Text1",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 918.49061,
          "y": 303.00014
        },
        "scale": {
          "x": 3,
          "y": 3
        },
        "width": 116.12035,
        "height": 18.43106
      },
      "s": {
        "text": "设备#2",
        "type": "text",
        "text.align": "center",
        "text.color": "rgb(108,230,190)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "top"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Text",
      "i": 71285,
      "p": {
        "displayName": "Text（Text2）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "Text2",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 868.37512,
          "y": 415.02593
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 91.32452,
        "height": 14.53494
      },
      "s": {
        "text": "型号: HT-1503s",
        "type": "text",
        "text.color": "rgb(51,153,255)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Text",
      "i": 71286,
      "p": {
        "displayName": "Text（Text3）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "Text3",
        "dataBindings": {
          "s": {
            "text": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 968.12624,
          "y": 473.29115
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 27.24526,
        "height": 11.23827
      },
      "s": {
        "text": 35.2,
        "type": "text",
        "text.color": "rgb(108,230,190)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "text": 35.5,
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Text",
      "i": 71287,
      "p": {
        "displayName": "Text（Text4）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "Text4",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 1013.17398,
          "y": 475.29115
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 30.68402,
        "height": 22.47653
      },
      "s": {
        "text": "℃",
        "type": "text",
        "text.color": "rgb(124,145,155)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Text",
      "i": 71288,
      "p": {
        "displayName": "Text（Text5）",
        "toolTip": "已被布局，不允许拖动",
        "tag": "Text5",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 868.37512,
          "y": 470.81865
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 91.32452,
        "height": 14.53494
      },
      "s": {
        "text": "当前温度:",
        "type": "text",
        "text.color": "rgb(51,153,255)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 71289,
      "p": {
        "displayName": "Text（Text6）",
        "toolTip": "已被布局，不允许拖动",
        "tag": "Text6",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 868.37512,
          "y": 572.246
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 91.32452,
        "height": 14.53494
      },
      "s": {
        "text": "剩余空间:",
        "type": "text",
        "text.color": "rgb(51,153,255)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "bottom"
      }
    },
    {
      "c": "ht.Text",
      "i": 71290,
      "p": {
        "displayName": "Text（Text7）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "Text7",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 868.37512,
          "y": 360.23321
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 91.32452,
        "height": 14.53494
      },
      "s": {
        "text": "存储服务器(1U)",
        "type": "text",
        "text.color": "rgb(51,153,255)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Text",
      "i": 71291,
      "p": {
        "displayName": "Text（Text8）",
        "toolTip": "已被布局，不允许拖动",
        "tag": "Text8",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 1082.21545,
          "y": 572.246
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 91.32452,
        "height": 14.53494
      },
      "s": {
        "text": "剩余:1.2T",
        "type": "text",
        "text.color": "rgb(108,230,190)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "bottom"
      }
    },
    {
      "c": "ht.Text",
      "i": 71292,
      "p": {
        "displayName": "Text（Text9）",
        "toolTip": "已被布局，不允许拖动",
        "tag": "Text9",
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 856.60602,
          "y": 791.90223
        },
        "scale": {
          "x": 1.5,
          "y": 1.5
        },
        "width": 65.38863,
        "height": 22.47653
      },
      "s": {
        "text": "已用:3.7T",
        "type": "text",
        "text.color": "rgb(51,153,255)",
        "opacity": 1,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "bottom"
      }
    },
    {
      "c": "ht.Node",
      "i": 71293,
      "p": {
        "name": "pie",
        "displayName": "饼图（pie1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "pie1",
        "dataBindings": {
          "a": {
            "sizeSet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "names": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "colors": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "borderColors": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "values": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        console.error(111111,rawData)\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "radius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "roseType": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_pie_border_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_pie_border_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_pie_border_2": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri Jun 07 2024 11:09:23 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/controls/charts/饼图.json",
              "description": "组件地址字符串",
              "name": "symbol"
            },
            {
              "valueType": "PositiveNumber",
              "group": "数据",
              "attr": "sizeSet",
              "defaultValue": 3,
              "description": "设置当前饼状图中扇区的数量。支持动态增加或减少，\n相应的_pie_border_[索引]也会动态增加或减少，其中索引\n从0开始，最大值为sizeSet设定的值减去1。",
              "name": "sizeSet"
            },
            {
              "attr": "_pie_border_2",
              "valueType": "LineType",
              "defaultValue": "real",
              "description": "饼状图的边框线类型，实线（默认）或虚线。",
              "name": "_pie_border_2",
              "dynamicCreate": true
            },
            {
              "attr": "_pie_border_1",
              "valueType": "LineType",
              "defaultValue": "real",
              "description": "饼状图的边框线类型，实线（默认）或虚线。",
              "name": "_pie_border_1",
              "dynamicCreate": true
            },
            {
              "attr": "_pie_border_0",
              "valueType": "LineType",
              "defaultValue": "real",
              "description": "饼状图的边框线类型，实线（默认）或虚线。",
              "name": "_pie_border_0",
              "dynamicCreate": true
            },
            {
              "attr": "names",
              "valueType": "StringArray",
              "description": "多个扇区分别对应的名称。",
              "name": "names"
            },
            {
              "attr": "widths",
              "valueType": "NumberArray",
              "description": "各个扇区的边框线宽度。",
              "name": "widths"
            },
            {
              "attr": "values",
              "valueType": "NumberArray",
              "defaultValue": [],
              "description": "各个扇区分别对应的数值，数组形式，比如[19,34,12,50]。",
              "name": "values"
            },
            {
              "attr": "radius",
              "valueType": "NumberArray",
              "description": "各扇区半径",
              "name": "radius"
            },
            {
              "attr": "center",
              "valueType": "NumberArray",
              "description": "各扇区圆心",
              "name": "center"
            },
            {
              "attr": "startAngle",
              "valueType": "PositiveNumber",
              "description": "起始角度",
              "name": "startAngle"
            },
            {
              "attr": "endAngle",
              "valueType": "PositiveNumber",
              "description": "结束角度",
              "name": "endAngle"
            },
            {
              "attr": "minAngle",
              "valueType": "PositiveNumber",
              "description": "最小扇区角度",
              "name": "minAngle"
            },
            {
              "attr": "hoverOffset",
              "valueType": "PositiveNumber",
              "description": "高亮扇区偏移距离",
              "name": "hoverOffset"
            },
            {
              "attr": "colors",
              "valueType": "ColorArray",
              "description": "数组中相应索引的颜色，对应相应索引扇区的背景颜色。",
              "group": "外观",
              "name": "colors"
            },
            {
              "attr": "borderColors",
              "valueType": "ColorArray",
              "description": "数组中相应索引的颜色，对应相应索引扇区的边框颜色。注意，不是背景色。",
              "name": "borderColors"
            },
            {
              "attr": "roseType",
              "valueType": "Boolean",
              "description": "设置为南丁格尔图",
              "defaultValue": true,
              "name": "roseType"
            },
            {
              "attr": "minRoseRadius",
              "valueType": "PositiveNumber",
              "description": "南丁格尔图最小半径",
              "name": "minRoseRadius"
            },
            {
              "attr": "seriesName",
              "valueType": "String",
              "description": "系列名",
              "name": "seriesName"
            },
            {
              "attr": "avoidLabelOverlap",
              "valueType": "Boolean",
              "description": "标签防重叠",
              "name": "avoidLabelOverlap"
            },
            {
              "attr": "tooltip.show",
              "valueType": "Boolean",
              "description": "是否显示鼠标提示",
              "group": "鼠标提示",
              "name": "tooltip.show"
            },
            {
              "attr": "tooltip.formatter",
              "valueType": "String",
              "name": "格式"
            },
            {
              "attr": "tooltipFormat",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "label",
                  "datas",
                  "info",
                  "node",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(label, datas, info, node, view) {/*\r\n参数说明：\r\nlabel：提示标题文字，默认为x轴当前值\r\ndatas：按照曲线索引顺序，指定x轴值对应在y轴各曲线的当前值\r\ninfo/node/view：原始显示信息的对象、图元对象、视图对象\r\n返回格式为：\r\n[label,data0,data1,data2]。\r\n示例：\r\n['提示：' + label,datas[0] + '%',datas[1] + '℃',datas[2] + 'mmp']\r\n\r\n注意，返回数组的第一个为label标题文字，剩下的依次是按照索引的曲线值。\r\n*/\r\nreturn [label,...datas]}",
              "description": "该属性暂不起作用！属于曲线图表的提示属性，仅用于当前饼状图的参考。\n\n参数说明：\nlabel：提示标题文字，默认为x轴当前值\ndatas：按照曲线索引顺序，指定x轴值对应在y轴各曲线的当前值\ninfo/node/view：原始显示信息的对象、图元对象、视图对象\n返回格式为：\n[label,data0,data1,data2]。\n\n| 注意，返回数组的第一个为label标题文字，剩下的依次是按照索引的曲线值。",
              "name": "tooltipFormat"
            },
            {
              "attr": "label.normal.show",
              "valueType": "Boolean",
              "name": "是否显示",
              "group": "文本-全局-正常态",
              "defaultValue": false
            },
            {
              "attr": "label.normal.position",
              "valueType": "String",
              "extraInfo": {
                "enum": {
                  "values": [
                    "center",
                    "inside"
                  ]
                }
              },
              "description": "位置",
              "defaultValue": "inside",
              "name": "label.normal.position"
            },
            {
              "attr": "label.normal.formatter",
              "valueType": "String",
              "description": "格式",
              "name": "label.normal.formatter"
            },
            {
              "attr": "label.normal.color",
              "valueType": "Color",
              "description": "颜色",
              "name": "label.normal.color"
            },
            {
              "attr": "label.normal.font",
              "valueType": "Font",
              "description": "字体",
              "name": "label.normal.font"
            },
            {
              "attr": "label.emphasis.show",
              "valueType": "Boolean",
              "name": "是否显示",
              "group": "文本-全局-高亮态"
            },
            {
              "attr": "label.emphasis.position",
              "valueType": "String",
              "extraInfo": {
                "enum": {
                  "values": [
                    "center",
                    "inside"
                  ]
                }
              },
              "description": "位置",
              "defaultValue": "inside",
              "name": "label.emphasis.position"
            },
            {
              "attr": "label.emphasis.formatter",
              "valueType": "String",
              "description": "格式",
              "name": "label.emphasis.formatter"
            },
            {
              "attr": "label.emphasis.color",
              "valueType": "Color",
              "description": "颜色",
              "name": "label.emphasis.color"
            },
            {
              "attr": "label.emphasis.font",
              "valueType": "Font",
              "description": "字体",
              "name": "label.emphasis.font"
            },
            {
              "attr": "labelLine.normal.show",
              "valueType": "Boolean",
              "group": "引导线-全局-正常态",
              "description": "是否显示",
              "name": "labelLine.normal.show"
            },
            {
              "attr": "labelLine.normal.length",
              "valueType": "PositiveNumber",
              "description": "第一段长度",
              "name": "labelLine.normal.length"
            },
            {
              "attr": "labelLine.normal.length2",
              "valueType": "PositiveNumber",
              "description": "第二段长度",
              "name": "labelLine.normal.length2"
            },
            {
              "attr": "labelLine.normal.formatter",
              "valueType": "String",
              "description": "格式",
              "name": "labelLine.normal.formatter"
            },
            {
              "attr": "labelLine.normal.width",
              "valueType": "PositiveNumber",
              "description": "线宽度",
              "name": "labelLine.normal.width"
            },
            {
              "attr": "labelLine.normal.type",
              "valueType": "测点",
              "extraInfo": {
                "enum": {
                  "values": [
                    "dashed",
                    "solid"
                  ]
                }
              },
              "description": "线类型",
              "name": "labelLine.normal.type"
            },
            {
              "attr": "labelLine.normal.font",
              "valueType": "Font",
              "description": "字体",
              "name": "labelLine.normal.font"
            },
            {
              "attr": "labelLine.normal.lineColor",
              "valueType": "Color",
              "description": "线颜色",
              "name": "labelLine.normal.lineColor"
            },
            {
              "attr": "labelLine.normal.textColor",
              "valueType": "Color",
              "description": "文本颜色",
              "name": "labelLine.normal.textColor"
            },
            {
              "attr": "labelLine.emphasis.show",
              "valueType": "Boolean",
              "group": "引导线-全局-高亮态",
              "description": "是否显示",
              "name": "labelLine.emphasis.show"
            },
            {
              "attr": "labelLine.emphasis.length",
              "valueType": "PositiveNumber",
              "description": "第一段长度",
              "name": "labelLine.emphasis.length"
            },
            {
              "attr": "labelLine.emphasis.length2",
              "valueType": "PositiveNumber",
              "description": "第二段长度",
              "name": "labelLine.emphasis.length2"
            },
            {
              "attr": "labelLine.emphasis.formatter",
              "valueType": "String",
              "description": "格式",
              "name": "labelLine.emphasis.formatter"
            },
            {
              "attr": "labelLine.emphasis.width",
              "valueType": "PositiveNumber",
              "description": "线宽度",
              "name": "labelLine.emphasis.width"
            },
            {
              "attr": "labelLine.emphasis.type",
              "valueType": "String",
              "extraInfo": {
                "enum": {
                  "values": [
                    "dashed",
                    "solid"
                  ]
                }
              },
              "description": "线类型",
              "name": "labelLine.emphasis.type"
            },
            {
              "attr": "labelLine.emphasis.font",
              "valueType": "Font",
              "description": "字体",
              "name": "labelLine.emphasis.font"
            },
            {
              "attr": "labelLine.emphasis.lineColor",
              "valueType": "Color",
              "description": "线颜色",
              "name": "labelLine.emphasis.lineColor"
            },
            {
              "attr": "labelLine.emphasis.textColor",
              "valueType": "Color",
              "description": "文本颜色",
              "name": "labelLine.emphasis.textColor"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/charts_icon/饼图.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __pie(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "boundExtend": 10,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/demo/canvas/chart/pie.json",
              "displayName": "pie（pie1）",
              "rect": [
                0,
                0,
                100,
                100
              ],
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.pieInteractor.onUp.apply(this, arguments);\n}",
              "onMove": "__ht__function(event, data, view, point, width, height) {\nht.vector.pieInteractor.onMove.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.pieInteractor.onLeave.apply(this, arguments);\n}",
              "dataSource": {
                "func": "attr@dataSource",
                "value": [
                  {
                    "name": "pie",
                    "value": 1
                  }
                ]
              },
              "radius": {
                "func": "attr@radius",
                "value": [
                  0,
                  0.85
                ]
              },
              "center": {
                "func": "attr@center",
                "value": [
                  0.5,
                  0.5
                ]
              },
              "color": {
                "func": "attr@colors",
                "value": [
                  "rgb(51, 153, 255)",
                  "rgb(96, 172, 252)",
                  "rgb(49, 210, 235)",
                  "rgb(93, 217, 174)",
                  "rgb(125, 195, 125)",
                  "rgb(255, 235, 195)",
                  "rgb(226, 250, 87)",
                  "rgb(255, 184, 77)",
                  "rgb(255, 125, 125)",
                  "rgb(241, 125, 164)",
                  "rgb(204, 104, 166)",
                  "rgb(135, 144, 204)",
                  "rgb(145, 115, 205)",
                  "rgb(124, 145, 155)",
                  "rgb(48, 242, 120)",
                  "rgb(0, 199, 7)",
                  "rgb(242, 83, 75)",
                  "rgb(212, 0, 0)",
                  "rgb(240, 225, 19)",
                  "rgb(61, 61, 61)"
                ]
              },
              "startAngle": {
                "func": "attr@startAngle",
                "value": 0
              },
              "endAngle": {
                "func": "attr@endAngle",
                "value": 360
              },
              "minAngle": {
                "func": "attr@minAngle",
                "value": 0
              },
              "gapAngle": {
                "func": "attr@gapAngle",
                "value": 0
              },
              "hoverOffset": {
                "func": "attr@hoverOffset",
                "value": 4
              },
              "minRoseRadius": {
                "func": "attr@minRoseRadius",
                "value": 0
              },
              "roseType": {
                "func": "attr@roseType",
                "value": "false"
              },
              "avoidLabelOverlap": {
                "func": "attr@avoidLabelOverlap",
                "value": false
              },
              "tooltip.show": {
                "func": "attr@tooltip.show",
                "value": {
                  "show": true,
                  "formatter": ""
                }
              },
              "label.normal.show": {
                "func": "attr@label.normal.show",
                "value": true
              },
              "label.normal.position": {
                "func": "attr@label.normal.position",
                "value": "center"
              },
              "label.normal.color": {
                "func": "attr@label.normal.color",
                "value": null
              },
              "label.normal.font": {
                "func": "attr@label.normal.font",
                "value": "12px serif"
              },
              "label.emphasis.show": {
                "func": "attr@label.emphasis.show",
                "value": true
              },
              "label.emphasis.position": {
                "func": "attr@label.emphasis.position",
                "value": "center"
              },
              "label.emphasis.color": {
                "func": "attr@label.emphasis.color",
                "value": null
              },
              "label.emphasis.font": {
                "func": "attr@label.emphasis.font",
                "value": "13px serif"
              },
              "labelLine.normal.show": {
                "func": "attr@labelLine.normal.show",
                "value": true
              },
              "labelLine.normal.length": {
                "func": "attr@labelLine.normal.length",
                "value": 15
              },
              "labelLine.normal.length2": {
                "func": "attr@labelLine.normal.length2",
                "value": 10
              },
              "labelLine.normal.width": {
                "func": "attr@labelLine.normal.width",
                "value": 1
              },
              "labelLine.normal.type": {
                "func": "attr@labelLine.normal.type",
                "value": "dashed"
              },
              "labelLine.normal.font": {
                "func": "attr@labelLine.normal.font",
                "value": "12px serif"
              },
              "labelLine.normal.lineColor": {
                "func": "attr@labelLine.normal.lineColor",
                "value": null
              },
              "labelLine.normal.textColor": {
                "func": "attr@labelLine.normal.textColor",
                "value": null
              },
              "labelLine.emphasis.show": {
                "func": "attr@labelLine.emphasis.show",
                "value": true
              },
              "labelLine.emphasis.length": {
                "func": "attr@labelLine.emphasis.length",
                "value": 15
              },
              "labelLine.emphasis.length2": {
                "func": "attr@labelLine.emphasis.length2",
                "value": 10
              },
              "labelLine.emphasis.width": {
                "func": "attr@labelLine.emphasis.width",
                "value": 2
              },
              "labelLine.emphasis.type": {
                "func": "attr@labelLine.emphasis.type",
                "value": "dashed"
              },
              "labelLine.emphasis.font": {
                "func": "attr@labelLine.emphasis.font",
                "value": "13px serif"
              },
              "labelLine.emphasis.lineColor": {
                "func": "attr@labelLine.emphasis.lineColor",
                "value": null
              },
              "labelLine.emphasis.textColor": {
                "func": "attr@labelLine.emphasis.textColor",
                "value": null
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "8EE5855E-9B1E-42E6-8D0B-9E5E16CDDE33"
        },
        "host": {
          "__i": 71283
        },
        "position": {
          "x": 962.916,
          "y": 690.69645
        },
        "width": 259.51027,
        "height": 168.69676
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "layout.h": "leftright",
        "layout.v": "bottom",
        "values": 38.3
      },
      "a": {
        "oldDynamicAttrs": [
          {
            "attr": "_pie_border_0",
            "valueType": "LineType",
            "defaultValue": "real",
            "description": "饼状图的边框线类型，实线（默认）或虚线。",
            "dynamicCreate": true
          },
          {
            "attr": "_pie_border_1",
            "valueType": "LineType",
            "defaultValue": "real",
            "description": "饼状图的边框线类型，实线（默认）或虚线。",
            "dynamicCreate": true
          },
          {
            "attr": "_pie_border_2",
            "valueType": "LineType",
            "defaultValue": "real",
            "description": "饼状图的边框线类型，实线（默认）或虚线。",
            "dynamicCreate": true
          }
        ],
        "symbol": "symbols/develop/uiotos/base/pie.json",
        "names": [
          "数据0",
          "数据1",
          "数据2"
        ],
        "widths": [
          1,
          1,
          1
        ],
        "colors": [
          "#A449B3",
          "#DB5401",
          "#2B8E12"
        ],
        "borderColors": [
          "#A449B3",
          "#DB5401",
          "#2B8E12"
        ],
        "dataSource": [
          {
            "name": "数据0",
            "value": 53,
            "itemStyle": {
              "borderWidth": 1,
              "borderColor": "#A449B3"
            }
          },
          {
            "name": "数据1",
            "value": 77,
            "itemStyle": {
              "borderWidth": 1,
              "borderColor": "#DB5401"
            }
          },
          {
            "name": "数据2",
            "value": 99,
            "itemStyle": {
              "borderWidth": 1,
              "borderColor": "#2B8E12"
            }
          }
        ],
        "values": 38.3,
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Node",
      "i": 71294,
      "p": {
        "name": "n",
        "displayName": "n（n1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动",
        "tag": "n1",
        "host": {
          "__i": 71283
        },
        "rotation": 4.71239,
        "position": {
          "x": 963.6369,
          "y": 515.98602
        },
        "width": 0.51554,
        "height": 327.9713
      },
      "s": {
        "shape": "rect",
        "shape.background": "rgba(247,247,247,0)",
        "shape.border.color": "#979797",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "shape.gradient": "spread.vertical",
        "shape.gradient.color": "rgb(55,125,255)",
        "fullscreen.gap": 0,
        "label.opacity": 0,
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "center"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>已被布局，不允许拖动"
      }
    },
    {
      "c": "ht.Node",
      "i": 71295,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "4_1_周期随机数>0>input2>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Wed Jul 24 2024 21:32:02 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "4_1_周期随机数>0>input2>a:value",
              "name": ".值内容",
              "valueType": "Object",
              "defaultValue": 39.7,
              "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。",
              "group": "4_1_周期随机数>0>input2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 500,
          "height": 300,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "3764E186-4387-4EE4-A99F-3DD63DC01D2D"
        },
        "position": {
          "x": 1296.95116,
          "y": 473.81182
        },
        "anchor": {
          "x": 0.5615,
          "y": 0.55749
        },
        "width": 103.20017,
        "height": 36.38647
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform"
      },
      "a": {
        "display": "./4_1_周期随机数.json",
        "__loadingStatus": false,
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "a:4_1_周期随机数>0>input2>a:value"
        ],
        "bindControlsTag": [
          "Text3"
        ],
        "bindControlsAttr": [
          "s:text"
        ],
        "bindControlsVal": [
          null
        ],
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "useInnerEventsAll": true,
        "shadowEnabled": false,
        "paramBindEvent": [],
        "bindEvents": [
          "*",
          "paramsGenerator"
        ],
        "_hideWhenRun": true,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(255,255,255)",
        "_bindEvents_0": "*",
        "_bindEvents_0-list": [
          "*",
          "paramsGenerator"
        ],
        "4_1_周期随机数>0>input2>a:value": 35.2
      }
    },
    {
      "c": "ht.Edge",
      "i": 71296,
      "p": {
        "name": "edge",
        "displayName": "0（edge2）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：文字@Text3</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：a:4_1_周期随机数&gt;0&gt;input2&gt;值内容@gv1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 71295
        },
        "tag": "edge2",
        "source": {
          "__i": 71295
        },
        "target": {
          "__i": 71286
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.flex": 50,
        "edge.corner.radius": 30,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：文字@Text3</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：a:4_1_周期随机数&gt;0&gt;input2&gt;值内容@gv1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 71297,
      "p": {
        "name": "tip",
        "displayName": "疑问提示（tip1）",
        "toolTip": "将包含组件和连线操作功能的页面\n<br>整体封装到独立的页面中，作为一个0代码\n<br>开发的带特定功能、业务逻辑、可复用的组件，\n<br>用于周期生成指定范围内的随机数。",
        "tag": "tip1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "clicked": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "bindControlsVal": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri Aug 23 2024 17:43:38 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "openUrl",
              "valueType": "String",
              "description": "链接地址。运行模式下\n<br>点击，会在浏览器新页签打开地址。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#fwbjd\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "group": "功能",
              "name": "openUrl"
            },
            {
              "attr": "toolTip",
              "valueType": "Boolean",
              "description": "运行时提示是否可见。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#t0jA8\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": true,
              "name": "toolTip"
            },
            {
              "attr": "disabled",
              "valueType": "Boolean",
              "description": "禁用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#nmCQm\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "disabled"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                -1
              ],
              "description": "",
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "description": "",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "name": "点击事件",
              "extraInfo": {
                "arguments": [
                  "data",
                  "param"
                ]
              },
              "description": "当点击时触发。"
            },
            {
              "attr": "param",
              "valueType": "Function",
              "name": "数据参数",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv"
                ],
                "classify": "*"
              },
              "defaultValue": "__ht__function(data, gv) {return null;}",
              "description": "自定义传入参数。\n<br>用来点击事件clicked触发时传入。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#ta2kN\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>"
            },
            {
              "attr": "path",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/editroToolBar/edit.json",
              "name": "图标路径",
              "description": "图标/图片地址，可以是绘制的，也能为空。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#sPqOO\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "group": "外观"
            },
            {
              "attr": "default-background",
              "valueType": "Color",
              "defaultValue": "rgb(55,125,255)",
              "name": "默认颜色",
              "description": "默认背景色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#R3jS0\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>"
            },
            {
              "attr": "hover-background",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "name": "悬停颜色",
              "description": "悬停颜色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Q4Hru\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>"
            },
            {
              "attr": "click-background",
              "valueType": "Color",
              "defaultValue": "#60ACFC",
              "name": "按下颜色",
              "description": "按下颜色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Nselr\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "group": "连线",
              "description": "",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/图片按钮.json",
          "onDown": "__ht__function(event, data, view, point, width, height) {\n!data.ca('disabled') && data.ca('icon-background',data.ca('click-background'))\n}",
          "onUp": "__ht__function(event, data, view, point, width, height) {\nif(!data.ca('disabled')){\r\n    data.ca('icon-background',data.ca('hover-background'));\r\n    let cb = new Function('return ' + data.ca('clicked'))(),\r\n        cb2 = new Function('return ' + data.ca('onClick'))();//240523，兼容onClick命名\r\n    typeof(setBindTabviewIndex) != 'undefined' && setBindTabviewIndex(data,data.ca('bindTabview'));\r\n    let paramCb = new Function('return ' + data.ca('param'))();\r\n    let param = paramCb ? paramCb(data,view) : null;\r\n    if(typeof(i) != 'undefined' && typeof(i.updateBindControls) != 'undefined'){\r\n        //240304，需要改成i.formEventBubblingUpper，否则执行操作可能会出问题！比如tab页签索引切换，切换不了！\r\n        // i.updateBindControls(data,param,[],false,'~','clicked');//params是response的位置，所以得是对象类型\\\r\n        //触发事件连线操作\r\n        i.formEventBubblingUpper(\r\n            data,\r\n            data._gv,\r\n            data._cache,\r\n            'clicked',\r\n            null,\r\n            false\r\n        );\r\n    }\r\n    //230819，支持传入url，点击浏览器新窗口打开。\r\n    let urltmp = data.ca('openUrl');\r\n    if(urltmp && urltmp.indexOf('http') == -1) urltmp = 'http://' + urltmp;\r\n    urltmp && window.open(urltmp,'_blank');\r\n    \r\n    if(cb2) return cb2(data,param);\r\n    else return cb && cb(data,param)\r\n}\n}",
          "onEnter": "__ht__function(event, data, view, point, width, height) {\nif(data.ca('disabled')){\r\n    view.getView().style.cursor = 'not-allowed'\r\n}else{\r\n    data.ca('icon-background',data.ca('hover-background'))\r\n    data.iv();\r\n    view.getView().style.cursor = 'pointer'\r\n}\n}",
          "onLeave": "__ht__function(event, data, view, point, width, height) {\ndata.ca('icon-background',data.ca('default-background'))\r\nview.getView().style.cursor = 'default'\n}",
          "renderHTML": "__ht__function(data, gv, cache) {return __iconClick(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "image",
              "color": null,
              "name": {
                "func": "__ht__function(data, view) {\nfunction func(data,view){\r\n    if((typeof(runningMode) != 'undefined' && !runningMode()) || view.getView().style.cursor != 'pointer'){//最好不用 == 'default'，因为存在代码初始赋值\r\n        data.ca('icon-background',data.ca('default-background'))\r\n    }\r\n    var typeArr = ['light','light','regular','light'] //枚举下拉选择\r\n    var typetmp = typeArr[data.ca('iconType')] //类型选择\r\n    var path = data.ca('path')                 //图标路径\r\n    if(path != undefined && path.trim() !== ''){\r\n        if(path.indexOf('.') == -1){           //传入图标文件名称时\r\n            path = 'symbols/demo/uiotos/icons/' + typetmp + '/' + path + '.json'\r\n        }else if(path.indexOf(typetmp) == -1){ //图标类型发生变化时\r\n            typeArr.forEach((curType,index)=>{\r\n                if(curType != typetmp){        //路径中先前的类型名称换成新的\r\n                    path = path.replace(curType,typetmp)               \r\n                }\r\n            })\r\n        }\r\n    }\r\n    data.ca('path',path)                      //回写过去\r\n    return path\r\n}\r\n\r\n//整体复制的话需要带上这句，因为属性func外层已经是函数体\r\nreturn func(data,view)\n}",
                "value": "symbols/demo/uiotos/icons/light/square-full.json"
              },
              "displayName": "democrat（democrat1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "59336C20-C947-45A9-89D4-73CD17DC3F6F"
        },
        "position": {
          "x": 1357.14283,
          "y": 471.71985
        },
        "width": 16,
        "height": 16
      },
      "s": {
        "label.opacity": 0,
        "2d.editable": false,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "pixelPerfect": false
      },
      "a": {
        "path": "symbols/demo/uiotos/icons/light/question-circle.json",
        "hover-background": "rgb(51,153,255)",
        "iconType": 1,
        "default-background": "rgb(124,145,155)",
        "icon-background": "rgb(124,145,155)",
        "_hideWhenRun": true,
        "toolTip": true,
        "symbol": "symbols/develop/uiotos/base/iconClick.json"
      }
    }
  ],
  "modified": "Sun Aug 25 2024 18:06:38 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": 740.69313,
    "y": 263.21714,
    "width": 624.4497,
    "height": 590.25532
  }
}