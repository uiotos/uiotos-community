{
  "v": "7.7.2",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": false
  },
  "a": {
    "rotateAsClock": false,
    "gridAngle": 1.5708,
    "connectActionType": null,
    "fitContent": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 163047,
      "p": {
        "name": "autoBase",
        "displayName": "自动底板（autoBase1）",
        "tag": "autoBase1",
        "image": null,
        "position": {
          "x": 97.20872,
          "y": -8.82273
        },
        "width": 104,
        "height": 104
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "2d.movable": false,
        "interactive": true,
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left"
      }
    },
    {
      "c": "ht.Node",
      "i": 163048,
      "p": {
        "name": "bus",
        "displayName": "事件总线（bus1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>配套接收树表格操作发送\n<br>的查看、编辑、删除。\n<br>注意，这里要内嵌中将地\n<br>址白名单和主题topic白名\n<br>单都要清理掉，不用默认\n<br>的*（即全部），否则即\n<br>便上层form绑定覆盖新的\n<br>白名单，也不会替换掉，\n<br>只是监听追加，所有事件\n<br>都会进来！</span>",
        "tag": "bus1",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "triggerSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "callerRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "waitingRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPostMessage": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_2": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_3": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_4": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicsExtraInfo": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            },
            "_bindEvents_5": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_6": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_7": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "bindControlsVal": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 14:24:05 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image"
            },
            {
              "attr": "addressLocal",
              "valueType": "String",
              "description": "收发器自身地址，默认为当前收发器的全局标签（topicSend发送主题属性也如此）。",
              "group": "功能（关键）"
            },
            {
              "attr": "mode",
              "valueType": "EventBusMode",
              "defaultValue": "both",
              "description": "三种模式选择，包括\n接收器、发送器、收发器\n"
            },
            {
              "attr": "callRecv.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "收发器背景颜色"
            },
            {
              "attr": "call.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "description": "发送器背景颜色"
            },
            {
              "attr": "recv.icon-background",
              "valueType": "Color",
              "defaultValue": "#FF7C7C",
              "description": "发送器背景颜色"
            },
            {
              "attr": "addrsRemote",
              "valueType": "StringArray",
              "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
              "group": "send",
              "defaultValue": [
                "*"
              ]
            },
            {
              "attr": "topicSend",
              "valueType": "String",
              "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。"
            },
            {
              "attr": "contentSend",
              "valueType": "Object",
              "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。"
            },
            {
              "attr": "triggerSend",
              "valueType": "Boolean",
              "description": "执行发送",
              "defaultValue": false
            },
            {
              "attr": "triggerInit",
              "valueType": "Boolean",
              "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送"
            },
            {
              "attr": "addrsWhiteList",
              "valueType": "StringArray",
              "group": "recv",
              "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
              "defaultValue": [
                "*"
              ]
            },
            {
              "attr": "topicsWhiteList",
              "valueType": "StringArray",
              "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
              "defaultValue": [
                "*"
              ]
            },
            {
              "attr": "topicsExtraInfo",
              "valueType": "ObjectArray",
              "description": "主题列表各自对应的描述信息。"
            },
            {
              "attr": "callerRemote",
              "valueType": "Object",
              "description": "当前消息来源，即发送者，对象格式"
            },
            {
              "attr": "topicRecv",
              "valueType": "String",
              "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。"
            },
            {
              "attr": "contentRecv",
              "valueType": "Object",
              "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。"
            },
            {
              "attr": "waitingRecv",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "启动监听，等待接收外部发送器\n的数据"
            },
            {
              "attr": "messagPostGet",
              "valueType": "Object",
              "description": "接收到原生的postMessage消息，\n不能传递图元对象，有别于收发器方式。"
            },
            {
              "attr": "waitingMsgPost",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "启动监听等待接收原生postMessage\n消息，不能传递图元对象，有别于收发器方式。"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "onEvent",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "defaultValue": "__ht__function(data, gv, cache, param) {}",
              "description": "收到总线事件消息。"
            },
            {
              "attr": "onPostMessage",
              "valueType": "Function",
              "description": "收到跨网页iframe事件消息。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "_bindEvents_5",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[5]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_6",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[6]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_7",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[7]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "visible": {
            "func": "attr@visible",
            "value": true
          },
          "comps": [
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
              "visible": false,
              "prefix": "recv",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
              "visible": false,
              "prefix": "call",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0,
                37.47666,
                64.0735,
                66.39302
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rotation": 5.69426,
              "rect": [
                56.75093,
                4.67922,
                58.13316,
                65.5949
              ]
            }
          ],
          "uuid": "50093178-4B6E-4F01-9D37-E99680B684D7"
        },
        "host": {
          "__i": 163047
        },
        "position": {
          "x": 97.20872,
          "y": -8.82273
        },
        "width": 100,
        "height": 100
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "2d.movable": false,
        "label.offset.x": -10,
        "layout.h": "scale",
        "layout.v": "scale",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(226,250,87)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(226,250,87)",
        "note.opacity": 0,
        "note.align": "left",
        "note": "[bus1] 组件事件总线（bus1）索引为0的连线，关联自身\n属性contentRecv操作目标组件rowId的属性inputs，连线\n有非负整数解析赋值0，将被作为数组索引，要求操作属 \n性和关联属性至少有一个当前是数组值，目前分别为 [..\n..（内容过多无法展示）                            "
      },
      "a": {
        "addressLocal": "bus1@displays/develop/uiotos/aiotos/apps/统一管理平台/运维服务/维保管理/维保计划/维保计划.json",
        "topicSend": "bus1@displays/develop/uiotos/aiotos/apps/统一管理平台/运维服务/维保管理/维保计划/维保计划.json",
        "waitingRecv": true,
        "triggerSend": false,
        "call.visible": false,
        "recv.visible": true,
        "callRecv.visible": false,
        "mode": "recv",
        "topicsWhiteList": [],
        "paramControlTag": [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "paramControlAttr": [
          "contentRecv",
          "contentRecv",
          "contentRecv",
          "contentRecv",
          null,
          "topicsWhiteList",
          "topicRecv",
          "topicsExtraInfo"
        ],
        "bindControlsTag": [
          "rowId",
          "rowObj",
          "currentClicked",
          "dlg1",
          "dlg1",
          "func4",
          "func4",
          "func6"
        ],
        "bindControlsAttr": [
          "inputs",
          "inputs",
          "inputs",
          "textArea>0>textArea-ui1>a:value",
          "show",
          "_rawArray",
          "inputs",
          "inputs"
        ],
        "bindControlsVal": [
          0,
          1,
          2,
          null,
          null,
          null,
          null,
          null
        ],
        "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_2",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[2]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_3",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[3]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_4",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[4]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_5",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[5]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_6",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[6]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_7",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[7]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "contentRecv": "scrollTopEnded",
        "addrTarget": null,
        " ": "scroll1@displays/develop/uiotos/editor/favoritePages.json",
        "userData": [],
        "bindEvents": [
          "*",
          "onEvent"
        ],
        "topicRecv": "onScrollEnded",
        "addrsWhiteList": [],
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>配套接收树表格操作发送\n<br>的查看、编辑、删除。\n<br>注意，这里要内嵌中将地\n<br>址白名单和主题topic白名\n<br>单都要清理掉，不用默认\n<br>的*（即全部），否则即\n<br>便上层form绑定覆盖新的\n<br>白名单，也不会替换掉，\n<br>只是监听追加，所有事件\n<br>都会进来！</span>",
        "_bindEvents_0-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_1-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_2-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_3-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_4-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_5-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_6-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_7-list": [
          "*",
          "onEvent"
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 163049,
      "p": {
        "name": "edge",
        "displayName": "0",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@rowId</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge4",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163056
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 33
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@rowId</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163050,
      "p": {
        "name": "edge",
        "displayName": "1",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@rowObj</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge5'",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163057
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@rowObj</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163051,
      "p": {
        "name": "edge",
        "displayName": "2",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@currentClicked</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：2</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge6'",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163058
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(0,199,7)",
        "edge.type": "v.h",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(0,199,7)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 2,
        "label.position": 33
      },
      "a": {
        "index": 2,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@currentClicked</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：2</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163052,
      "p": {
        "name": "edge",
        "displayName": "3",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：3 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">3。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge5",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163059
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(212,0,0)",
        "edge.width": 1,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(212,0,0)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 3
      },
      "a": {
        "index": 3,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：3 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：contentRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：scrollTopEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">3。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163053,
      "p": {
        "name": "edge",
        "displayName": "4",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：4 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">4。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge6",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163059
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(81,91,61)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(81,91,61)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 4
      },
      "a": {
        "index": 4,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：4 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">4。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163054,
      "p": {
        "name": "edge",
        "displayName": "5",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：5 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：_rawArray@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicsWhiteList@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">5。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge8",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163060
        }
      },
      "s": {
        "label": "",
        "edge.color": "#908859",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#908859",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 5
      },
      "a": {
        "index": 5,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：5 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：_rawArray@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicsWhiteList@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">5。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 163055,
      "p": {
        "name": "edge",
        "displayName": "6",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：6 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：onScrollEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">6。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge7",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 163060
        }
      },
      "s": {
        "label": "",
        "edge.color": "#542376",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#542376",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 6
      },
      "a": {
        "index": 6,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：6 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicRecv@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：onScrollEnded</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">6。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 170567,
      "p": {
        "name": "edge",
        "displayName": "7",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：7 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func6</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicsExtraInfo@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">7。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163048
        },
        "tag": "edge9",
        "source": {
          "__i": 163048
        },
        "target": {
          "__i": 169756
        }
      },
      "s": {
        "label": "",
        "edge.color": "#B8B1AB",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#B8B1AB",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 7,
        "label.position": 17,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true
      },
      "a": {
        "index": 7,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：7 | 总共8条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func6</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：topicsExtraInfo@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">7。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 163056,
      "p": {
        "name": "func",
        "displayName": "工具函数（rowId）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "tag": "rowId",
        "dataBindings": {
          "a": {
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "__noAutoBind__",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "__noAutoBind__",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Dec 09 2023 23:03:39 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "5A06FF34-DF50-4144-AC78-40462DA2D514"
        },
        "host": {
          "__i": 163047
        },
        "position": {
          "x": -136.70872,
          "y": -125.61166
        },
        "width": 45,
        "height": 40
      },
      "s": {
        "label.position": 3,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "行记录ID",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "2d.movable": false,
        "layout.h": "scale",
        "layout.v": "scale",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "noteTips": "行记录ID",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "inputsArrToObj": true,
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_2",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[2]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_2",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[2]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          }
        ],
        "paramControlTag": [],
        "paramControlAttr": [],
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "_bindEvents_1-list": [
          "*",
          "onOutput"
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "inputs": {},
        "output": "scrollTopEnded",
        "exec": false,
        "inputKeys": [],
        "inputValues": []
      }
    },
    {
      "c": "ht.Node",
      "i": 163057,
      "p": {
        "name": "func",
        "displayName": "工具函数（rowObj）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "tag": "rowObj",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Dec 09 2023 23:03:39 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "5A06FF34-DF50-4144-AC78-40462DA2D514"
        },
        "host": {
          "__i": 163047
        },
        "position": {
          "x": -136.70872,
          "y": -8.82273
        },
        "width": 45,
        "height": 40
      },
      "s": {
        "label.position": 3,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "行数据键值对",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "2d.movable": false,
        "layout.h": "scale",
        "layout.v": "scale",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "noteTips": "行数据键值对",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "inputsArrToObj": true,
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          }
        ],
        "paramControlTag": [],
        "paramControlAttr": [],
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "inputs": {},
        "output": "scrollTopEnded",
        "exec": false,
        "inputKeys": [],
        "inputValues": []
      }
    },
    {
      "c": "ht.Node",
      "i": 163058,
      "p": {
        "name": "func",
        "displayName": "工具函数（currentClicked）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "tag": "currentClicked",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "__noAutoBind__",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Dec 09 2023 23:03:39 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "5A06FF34-DF50-4144-AC78-40462DA2D514"
        },
        "host": {
          "__i": 163047
        },
        "position": {
          "x": -136.70872,
          "y": 115.61166
        },
        "width": 45,
        "height": 40
      },
      "s": {
        "label.position": 3,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "行点击数据",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "2d.movable": false,
        "layout.h": "scale",
        "layout.v": "scale",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
        "noteTips": "行点击数据",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "inputsArrToObj": true,
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          }
        ],
        "paramControlTag": [],
        "paramControlAttr": [],
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "inputs": {},
        "output": "scrollTopEnded",
        "exec": false,
        "inputKeys": [],
        "inputValues": []
      }
    },
    {
      "c": "ht.Node",
      "i": 163059,
      "p": {
        "name": "dlg",
        "displayName": "对话框（dlg1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>",
        "tag": "dlg1",
        "dataBindings": {
          "a": {
            "show": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPageBinded": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOk": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onCancel": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFinally": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "debugOccupied": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "image": {
          "modified": "Thu Nov 16 2023 16:29:40 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "titleText",
              "valueType": "String",
              "defaultValue": "对话框"
            },
            {
              "attr": "titleColor",
              "valueType": "Color"
            },
            {
              "attr": "titleFont",
              "valueType": "Font",
              "defaultValue": "12px sans-serif, Arial"
            },
            {
              "attr": "footerBackground",
              "valueType": "Color"
            },
            {
              "attr": "backgroundImage",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/common/borderRectange.json"
            },
            {
              "attr": "backgroundColor",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框整体背景色。\n<br>包括对话框默认的标题头和底部。注意，该颜色在内容背景色（innerBackground）\n<br>的下层，因此会被遮盖掉，要显示的话首先需要设置内容背景色透明度为0或清掉。"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框内容页背景色。\n<br>不包括对话框默认的标题头和底部。注意，如果要设置对话框统一背景色，\n<br>或者设置透明、半透明，需要先将该属性设置透明度为0或者删除设定值，\n<br>随后设置对话框背景色属性（backgoundColor）。"
            },
            {
              "attr": "maskBackground",
              "valueType": "Color",
              "defaultValue": "rgba(0,0,0,0.30)",
              "description": "遮盖层背景色。\n<br>模态对话框弹出时，通常出现在页面上半透明阴影的遮盖颜色。注意，如果需要\n<br>设置对话框全透明，除了对话框整体背景色（backgroundColor）和内容区域背景\n<br>色（innerBackground）颜色为透明或清理掉，也需要将当前的遮盖曾颜色设置为\n<br>透明或者清理掉。"
            },
            {
              "attr": "modal",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 10
            },
            {
              "attr": "boxShadow",
              "valueType": "String",
              "defaultValue": "0px 8px 22px rgba(0,0,0,0.1)"
            },
            {
              "attr": "padding",
              "valueType": "PositiveNumber",
              "defaultValue": 0
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "embedded",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "勾选后，对话框弹窗显示位置不再是屏幕居中，\n而是按照布局设置动态确定的位置上显示。注意，\n拖放将对话框拖放到页面区域（底板矩形）外，\n并且设置了自动布局，那么运行时会自动靠边对其\n显示，避免编辑时覆盖页面内容区域。"
            },
            {
              "attr": "show",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "hide",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "displaySaving",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0."
            },
            {
              "attr": "reloadWhenOpen",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "该属性不要默认勾选，会导致编辑器属性弹窗初始化内容被清空"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              }
            },
            {
              "attr": "onPageBinded",
              "valueType": "Object"
            },
            {
              "attr": "headerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35
            },
            {
              "attr": "footerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 60,
              "group": "footer&header"
            },
            {
              "attr": "headerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "footerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "closeButtonOnly",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonGap",
              "valueType": "PositiveNumber",
              "defaultValue": 20
            },
            {
              "attr": "oneButton",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "cancelDefault",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonsText",
              "valueType": "StringArray",
              "defaultValue": [
                "取消",
                "确定"
              ],
              "description": "取消和确定按钮文字。\n<br>数组类型，其中索引0为“取消”功能\n<br>按钮对应的显示文字，索引1为“确定”\n<br>功能按钮对应的显示文字。可以按照\n<br>实际情况给两个功能得按钮赋予其他\n<br>显示文字。\n<br>其中，取消时，对话框不对外触发连\n<br>线操作；确定时，对话框执行对外连\n<br>线操作。\n<br>注意，“确定”对应onOk事件，“取消”\n<br>对应onCancel事件，因此如果想要取\n<br>消点击时触发下一步连线执行，可以\n<br>通过关联onCancel事件。点击确定时，\n<br>对外可省去对onOk事件的关联，”取\n<br>消”对onCancel事件的关联则不能省。"
            },
            {
              "attr": "bt0-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt0-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(55,125,255)",
                "rgb(55,125,255)"
              ]
            },
            {
              "attr": "bt0-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "bt1-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt1-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "footerButtonSize",
              "valueType": "NumberArray",
              "defaultValue": [
                75,
                35
              ]
            },
            {
              "attr": "titleFont",
              "valueType": "Font"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              }
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "纯表单数据。\n<br>限定iotos.formValue类型的绑定，不包括form/formReset。"
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "textArea>0>datas"
            }
          ],
          "snapshotURL": "icon.base.dialog-ui",
          "renderHTML": "__ht__function(data, gv, cache) {return __dialog_ui(data,gv,cache);}",
          "width": 600,
          "height": 400,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "9270069A-23D5-4D85-AB8C-AE0A93595D46"
        },
        "host": {
          "__i": 163047
        },
        "position": {
          "x": 619.95272,
          "y": -8.82273
        },
        "width": 600,
        "height": 400
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "label": "调试用途：打印收到的数据（contentRecv）",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "layout.h": "right",
        "layout.v": "topbottom"
      },
      "a": {
        "display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "show": false,
        "symbol": "symbols/develop/uiotos/base/dialog-ui.json",
        "textArea>0>textArea-ui1>a:value": "",
        "textArea>0>textArea-ui1>a:placeholder": "请输入",
        "textArea>0>textArea-ui1>a:onChange": null,
        "textArea>0>textArea-ui1>a:instantTrigger": true,
        "textArea>0>textArea-ui1>a:htmlContent": false,
        "textArea>0>textArea-ui1>a:readOnly": false,
        "textArea>0>textArea-ui1>a:color": "rgb(61,61,61)",
        "textArea>0>textArea-ui1>a:background": "rgb(255,255,255)",
        "textArea>0>datas>s:text": "datas",
        "innerLayoutMode": "fullScreen",
        "titleText": "接收器数据：",
        "debugOccupied": true
      }
    },
    {
      "c": "ht.Node",
      "i": 163060,
      "p": {
        "name": "func",
        "displayName": "工具函数（func4）",
        "toolTip": "透明传递<br>transfer",
        "tag": "func4",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_rawArray": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_objEqualValue": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_strictMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_allFound": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "数组操作函数。\n                字符串、对象等任意数组，给定元素，查找用\n                索引位置或索引数组，不存在则通常返回-1或\n                者空数组[]，取决于属性_allFound，即查找\n                匹配的第一个还是所有。"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
              "defaultValue": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "_rawArray",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用于被查找索引的数组。\n                    数组的各个元素可以是字符串、数字、对象等。\n                    注意，inputs输入组通常默认为数组类型，但\n                    是用于传入元素，本属性才用于配置数组。",
              "dynamicCreate": true
            },
            {
              "attr": "_objEqualValue",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "对象元素判断内容相等。\n                    默认情况下对象元素判断引用相等，勾选后，\n                    则判断对象序列化后的内容是否一致。",
              "dynamicCreate": true
            },
            {
              "attr": "_strictMode",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否严格相等。\n                    默认情况下为==，不判断类型是否一致，\n                    勾选后为===，即除了值相等，类型也要\n                    一致。比如0和false，非严格模式下相等\n                    严格模式下不相等。",
              "dynamicCreate": true
            },
            {
              "attr": "_allFound",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "返回全部找到的索引。\n                    默认返回匹配到的第一个元素的索引，\n                    勾选后，返回数组，匹配到的所有索\n                    引，即便只有一个，也数组格式返回。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "A2CD7E9D-9778-4997-8B6D-668CADCD5ACC"
        },
        "position": {
          "x": 97.20872,
          "y": 269.07959
        }
      },
      "s": {
        "label.position": 25,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "当前Topic在列表的索引",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left"
      },
      "a": {
        "toolTipRaw": "透明传递<br>transfer",
        "noteTips": "当前Topic在列表的索引",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "oldDynamicAttrs": [
          {
            "attr": "_rawArray",
            "valueType": "ObjectArray",
            "defaultValue": [],
            "description": "用于被查找索引的数组。\n                    数组的各个元素可以是字符串、数字、对象等。\n                    注意，inputs输入组通常默认为数组类型，但\n                    是用于传入元素，本属性才用于配置数组。",
            "dynamicCreate": true
          },
          {
            "attr": "_objEqualValue",
            "valueType": "Boolean",
            "defaultValue": false,
            "description": "对象元素判断内容相等。\n                    默认情况下对象元素判断引用相等，勾选后，\n                    则判断对象序列化后的内容是否一致。",
            "dynamicCreate": true
          },
          {
            "attr": "_strictMode",
            "valueType": "Boolean",
            "defaultValue": false,
            "description": "是否严格相等。\n                    默认情况下为==，不判断类型是否一致，\n                    勾选后为===，即除了值相等，类型也要\n                    一致。比如0和false，非严格模式下相等\n                    严格模式下不相等。",
            "dynamicCreate": true
          },
          {
            "attr": "_allFound",
            "valueType": "Boolean",
            "defaultValue": false,
            "description": "返回全部找到的索引。\n                    默认返回匹配到的第一个元素的索引，\n                    勾选后，返回数组，匹配到的所有索\n                    引，即便只有一个，也数组格式返回。",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "function": "arrIndex",
        "inputs": [],
        "stripSingleInput": false,
        "exeWhenInput": true,
        "resetAfterInput": true,
        "inputsArrToObj": true,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "output"
        ],
        "bindControlsTag": [
          "bus1"
        ],
        "bindControlsAttr": [
          "bindControlsVal"
        ],
        "bindControlsVal": [
          7
        ],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 176210,
      "p": {
        "name": "edge",
        "displayName": "0",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：bindControlsVal@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：0;1;2;;;;;...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：7</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 163060
        },
        "tag": "edge10",
        "source": {
          "__i": 163060
        },
        "target": {
          "__i": 163048
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：bindControlsVal@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：0;1;2;;;;;...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：7</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 169756,
      "p": {
        "name": "func",
        "displayName": "工具函数（func6）",
        "toolTip": "透明传递<br>transfer",
        "tag": "func6",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
              "defaultValue": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_1",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[1]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "A2CD7E9D-9778-4997-8B6D-668CADCD5ACC"
        },
        "position": {
          "x": -136.70872,
          "y": 211.17727
        }
      },
      "s": {
        "label.position": 3,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "当前Topic对应信息",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left"
      },
      "a": {
        "toolTipRaw": "透明传递<br>transfer",
        "noteTips": "当前Topic对应信息",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "oldDynamicAttrs": [
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "exeWhenInput": true,
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          "output",
          null
        ],
        "bindControlsTag": [
          "dlg2",
          "dlg2"
        ],
        "bindControlsAttr": [
          "textArea>0>textArea-ui1>a:value",
          "show"
        ],
        "bindControlsVal": [
          null,
          null
        ],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "_bindEvents_1-list": [
          "*",
          "onOutput"
        ],
        "resetAfterInput": true
      }
    },
    {
      "c": "ht.Edge",
      "i": 180042,
      "p": {
        "name": "edge",
        "displayName": "0",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func6</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>",
        "parent": {
          "__i": 169756
        },
        "tag": "edge11",
        "source": {
          "__i": 169756
        },
        "target": {
          "__i": 177485
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func6</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 180043,
      "p": {
        "name": "edge",
        "displayName": "1",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>",
        "parent": {
          "__i": 169756
        },
        "tag": "edge12",
        "source": {
          "__i": 169756
        },
        "target": {
          "__i": 177485
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 177485,
      "p": {
        "name": "dlg",
        "displayName": "对话框（dlg2）",
        "tag": "dlg2",
        "dataBindings": {
          "a": {
            "show": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPageBinded": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOk": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onCancel": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFinally": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "debugOccupied": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Nov 16 2023 16:29:40 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "titleText",
              "valueType": "String",
              "defaultValue": "对话框"
            },
            {
              "attr": "titleColor",
              "valueType": "Color"
            },
            {
              "attr": "titleFont",
              "valueType": "Font",
              "defaultValue": "12px sans-serif, Arial"
            },
            {
              "attr": "footerBackground",
              "valueType": "Color"
            },
            {
              "attr": "backgroundImage",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/common/borderRectange.json"
            },
            {
              "attr": "backgroundColor",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框整体背景色。\n<br>包括对话框默认的标题头和底部。注意，该颜色在内容背景色（innerBackground）\n<br>的下层，因此会被遮盖掉，要显示的话首先需要设置内容背景色透明度为0或清掉。"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框内容页背景色。\n<br>不包括对话框默认的标题头和底部。注意，如果要设置对话框统一背景色，\n<br>或者设置透明、半透明，需要先将该属性设置透明度为0或者删除设定值，\n<br>随后设置对话框背景色属性（backgoundColor）。"
            },
            {
              "attr": "maskBackground",
              "valueType": "Color",
              "defaultValue": "rgba(0,0,0,0.30)",
              "description": "遮盖层背景色。\n<br>模态对话框弹出时，通常出现在页面上半透明阴影的遮盖颜色。注意，如果需要\n<br>设置对话框全透明，除了对话框整体背景色（backgroundColor）和内容区域背景\n<br>色（innerBackground）颜色为透明或清理掉，也需要将当前的遮盖曾颜色设置为\n<br>透明或者清理掉。"
            },
            {
              "attr": "modal",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 10
            },
            {
              "attr": "boxShadow",
              "valueType": "String",
              "defaultValue": "0px 8px 22px rgba(0,0,0,0.1)"
            },
            {
              "attr": "padding",
              "valueType": "PositiveNumber",
              "defaultValue": 0
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "embedded",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "勾选后，对话框弹窗显示位置不再是屏幕居中，\n而是按照布局设置动态确定的位置上显示。注意，\n拖放将对话框拖放到页面区域（底板矩形）外，\n并且设置了自动布局，那么运行时会自动靠边对其\n显示，避免编辑时覆盖页面内容区域。"
            },
            {
              "attr": "show",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "hide",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "displaySaving",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0."
            },
            {
              "attr": "reloadWhenOpen",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "该属性不要默认勾选，会导致编辑器属性弹窗初始化内容被清空"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              }
            },
            {
              "attr": "onPageBinded",
              "valueType": "Object"
            },
            {
              "attr": "headerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35
            },
            {
              "attr": "footerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 60,
              "group": "footer&header"
            },
            {
              "attr": "headerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "footerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "closeButtonOnly",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonGap",
              "valueType": "PositiveNumber",
              "defaultValue": 20
            },
            {
              "attr": "oneButton",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "cancelDefault",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonsText",
              "valueType": "StringArray",
              "defaultValue": [
                "取消",
                "确定"
              ],
              "description": "取消和确定按钮文字。\n<br>数组类型，其中索引0为“取消”功能\n<br>按钮对应的显示文字，索引1为“确定”\n<br>功能按钮对应的显示文字。可以按照\n<br>实际情况给两个功能得按钮赋予其他\n<br>显示文字。\n<br>其中，取消时，对话框不对外触发连\n<br>线操作；确定时，对话框执行对外连\n<br>线操作。\n<br>注意，“确定”对应onOk事件，“取消”\n<br>对应onCancel事件，因此如果想要取\n<br>消点击时触发下一步连线执行，可以\n<br>通过关联onCancel事件。点击确定时，\n<br>对外可省去对onOk事件的关联，”取\n<br>消”对onCancel事件的关联则不能省。"
            },
            {
              "attr": "bt0-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt0-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(55,125,255)",
                "rgb(55,125,255)"
              ]
            },
            {
              "attr": "bt0-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "bt1-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt1-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "footerButtonSize",
              "valueType": "NumberArray",
              "defaultValue": [
                75,
                35
              ]
            },
            {
              "attr": "titleFont",
              "valueType": "Font"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              }
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "纯表单数据。\n<br>限定iotos.formValue类型的绑定，不包括form/formReset。"
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "textArea>0>datas"
            }
          ],
          "snapshotURL": "icon.base.dialog-ui",
          "renderHTML": "__ht__function(data, gv, cache) {return __dialog_ui(data,gv,cache);}",
          "width": 600,
          "height": 400,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "9270069A-23D5-4D85-AB8C-AE0A93595D46"
        },
        "position": {
          "x": -136.70872,
          "y": 549.03717
        }
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform"
      },
      "a": {
        "display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "show": false,
        "symbol": "symbols/develop/uiotos/base/dialog-ui.json",
        "innerLayoutMode": "fullScreen"
      }
    }
  ],
  "modified": "Thu Dec 14 2023 14:39:09 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -466.72239,
    "y": -249.74265,
    "width": 1386.67511,
    "height": 998.77982
  }
}