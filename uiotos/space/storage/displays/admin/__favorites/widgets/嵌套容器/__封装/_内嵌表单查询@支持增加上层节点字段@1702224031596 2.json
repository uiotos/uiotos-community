{
  "v": "7.7.2",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": false
  },
  "a": {
    "rotateAsClock": false,
    "gridAngle": 1.5708,
    "connectActionType": null,
    "fitContent": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 227089,
      "p": {
        "name": "autoBase",
        "displayName": "自动底板（autoBase1）",
        "tag": "autoBase1",
        "image": null,
        "position": {
          "x": -299.53972,
          "y": 125.664
        },
        "width": 490.31211,
        "height": 1381.06245
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "2d.movable": false,
        "interactive": true,
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "shape.background": "rgba(255,184,77,0.1)",
        "2d.selectable": false
      }
    },
    {
      "c": "ht.Node",
      "i": 227090,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:post": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:valueJsonable": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:jsonFormat": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:JWT Token": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:treeMiddleType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataIsJsonString": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:contentType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:response": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:requesting": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:download": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:onReceived": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:url": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:enableLoading": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:defaultOpen": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:comment": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:bindControlsVal": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_type": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_title": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_region": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_duration": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:_rawForm": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:fields": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>datas>a:keyId": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:keyParent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:keyChildren": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:appendTo": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:_function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:_function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>输入Values>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Json>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:value": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpQuery_v2>0>操作索引>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:onEnter": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>操作索引>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>输入Values>a:bindControlsVal": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:convertFlatToTree": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpQuery_v2>0>datas>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          },
          "s": {
            "label": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "image": {
          "modified": "Tue Nov 28 2023 11:13:55 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "defaultValue": ""
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ]
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              }
            },
            {
              "attr": "__loadingText",
              "valueType": "StringArray",
              "defaultValue": [
                "加载中",
                "未加载"
              ],
              "group": "loading"
            },
            {
              "attr": "__loadingFont",
              "valueType": "Font"
            },
            {
              "attr": "__loadingColor",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)"
            },
            {
              "attr": "__loadingStatus",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:display",
              "valueType": "URL",
              "defaultValue": "./httpAlert.json",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:innerLayoutMode",
              "valueType": "String",
              "defaultValue": "fitContent",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:output",
              "valueType": "Object",
              "defaultValue": 0,
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:noteTips",
              "valueType": "Multiline",
              "defaultValue": "获取返回记录的条数",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:function",
              "valueType": "ToolFunction",
              "defaultValue": "codeBlock",
              "description": "无",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:post",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "POST/GET。<br>默认勾选为POST请求，不勾选则为GET请求。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramKeys",
              "valueType": "StringArray",
              "defaultValue": [],
              "description": "参数的键列表。\n                    对应JSON格式参数（jsonFormat）内容扁平化后的key列表。\n                    注意，数组赋值给本属性指定索引时需格外小心，因为有动态\n                    扁平化展开机制，会导致重复数组值赋值到指定索引结果表现\n                    为数组嵌套。建议用工具函数接受该操作获取完整的属性值后\n                    整体操作赋值给本属性。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "参数的值列表。\n                    对应JSON格式参数（jsonFormat）内容扁平化后的value列表。\n                    注意，数组赋值给本属性指定索引时需格外小心，因为有动态\n                    扁平化展开机制，会导致重复数组值赋值到指定索引结果表现\n                    为数组嵌套。只需要去掉对结构化转换（convertFlatToTree）\n                    属性的勾选即可！",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:valueJsonable",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:jsonFormat",
              "valueType": "Object",
              "defaultValue": {},
              "description": "参数的json格式。<br>对应POST请求的data参数。注意，如果是GET请求，那么会自动<br>将JSON转成GET请求的a=1&b=2这种格式追加到url中。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:JWT Token",
              "valueType": "String",
              "defaultValue": "",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:convertFlatToTree",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "JSON扁平化与结构化\n                    的对应通常如{a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                    勾选后，如果paramKeys/Values是扁平化形式的键\n                    值对，那么会将jsonFormat的数据转成结构化。\n                    注意，在paramKeys字段固定时，试图在paramValues\n                    指定索引插入对象或数组结构时，一定要去掉本属性\n                    勾选，否则会自动将对象或数组扁平化展开，整个键\n                    值组paramKeys/Values都会被扁平化。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:treeMiddleType",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataIsJsonString",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "数据是否是JSON字符串。\n                    默认JSON字符串，否则为JSON对象。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:contentType",
              "valueType": "ContentType",
              "defaultValue": "application/json",
              "description": "内容类型。\n                    参见HTTP协议。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataType",
              "valueType": "DateType",
              "defaultValue": "JSON",
              "description": "数据类型。\n                    参见HTTP协议。注意，这里扩展\n                    新增了JSONP类型，可以解决HTTP\n                    GET请求的跨域问题。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:response",
              "valueType": "ObjectArray",
              "defaultValue": [
                "parsererr...",
                {
                  "readyState": 4,
                  "getResponseHeader": "__ht__function(e) {\r\n                        var t;\r\n                        if (h) {\r\n                            if (!n) { n = {}; while (t = Wt.exec(p)) n[t[1].toLowerCase() + \" \"] = (n[t[1].toLowerCase() + \" \"] || []).concat(t[2]) }\r\n                            t = n[e.toLowerCase() + \" \"]\r\n                        }\r\n                        return null == t ? null : t.join(\", \")\r\n                    }",
                  "getAllResponseHeaders": "__ht__function() { return h ? p : null }",
                  "setRequestHeader": "__ht__function(e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }",
                  "overrideMimeType": "__ht__function(e) { return null == h && (v.mimeType = e), this }",
                  "statusCode": "__ht__function(e) {\r\n                        var t;\r\n                        if (e)\r\n                            if (h) T.always(e[T.status]);\r\n                            else\r\n                                for (t in e) w[t] = [w[t], e[t]];\r\n                        return this\r\n                    }",
                  "abort": "__ht__function(e) { var t = e || u; return c && c.abort(t), l(0, t), this }",
                  "state": "__ht__function() { return i }",
                  "always": "__ht__function() { return s.done(arguments).fail(arguments), this }",
                  "catch": "__ht__function(e) { return a.then(null, e) }",
                  "pipe": "__ht__function() {\r\n                        var i = arguments;\r\n                        return ce.Deferred(function(r) {\r\n                            ce.each(o, function(e, t) {\r\n                                var n = v(i[t[4]]) && i[t[4]];\r\n                                s[t[1]](function() {\r\n                                    var e = n && n.apply(this, arguments);\r\n                                    e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + \"With\"](this, n ? [e] : arguments)\r\n                                })\r\n                            }), i = null\r\n                        }).promise()\r\n                    }",
                  "then": "__ht__function(t, n, r) {\r\n                        var u = 0;\r\n\r\n                        function l(i, o, a, s) {\r\n                            return function() {\r\n                                var n = this,\r\n                                    r = arguments,\r\n                                    e = function() {\r\n                                        var e, t;\r\n                                        if (!(i < u)) {\r\n                                            if ((e = a.apply(n, r)) === o.promise()) throw new TypeError(\"Thenable self-resolution\");\r\n                                            t = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0, r = [e]), (s || o.resolveWith)(n, r))\r\n                                        }\r\n                                    },\r\n                                    t = s ? e : function() { try { e() } catch (e) { ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && (n = void 0, r = [e]), o.rejectWith(n, r)) } };\r\n                                i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t))\r\n                            }\r\n                        }\r\n                        return ce.Deferred(function(e) { o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q)) }).promise()\r\n                    }",
                  "promise": "__ht__function(e) { return null != e ? ce.extend(e, a) : a }",
                  "progress": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
                  "done": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
                  "fail": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
                  "responseText": "<!DOCTYPE html><html lang=en><head><meta charset=utf-8><meta http-equiv=X-UA-Compatible content=\"IE=edge\"><meta name=viewport content=\"width=device-width,initial-scale=1\"><link rel=icon href=favicon.ico><title></title><link href=webjars/css/chunk-51277dbe.57225f85.css rel=prefetch><link href=webjars/js/chunk-069eb437.a0c9f0ca.js rel=prefetch><link href=webjars/js/chunk-0fd67716.d57e2c41.js rel=prefetch><link href=webjars/js/chunk-2d0af44e.c09671a4.js rel=prefetch><link href=webjars/js/chunk-2d0bd799.5bb1a14e.js rel=prefetch><link href=webjars/js/chunk-2d0d0b98.4693c46e.js rel=prefetch><link href=webjars/js/chunk-2d0da532.a47fb5c8.js rel=prefetch><link href=webjars/js/chunk-2d22269d.fc57b306.js rel=prefetch><link href=webjars/js/chunk-3b888a65.8737ce4f.js rel=prefetch><link href=webjars/js/chunk-3ec4aaa8.a79d19f8.js rel=prefetch><link href=webjars/js/chunk-51277dbe.6f598840.js rel=prefetch><link href=webjars/js/chunk-589faee0.5b861f49.js rel=prefetch><link href=webjars/js/chunk-735c675c.be4e3cfe.js rel=prefetch><link href=webjars/js/chunk-adb9e944.fff7fcef.js rel=prefetch><link href=webjars/css/app.f802fc13.css rel=preload as=style><link href=webjars/css/chunk-vendors.2997cc1a.css rel=preload as=style><link href=webjars/js/app.23f8b31d.js rel=preload as=script><link href=webjars/js/chunk-vendors.90e8ba20.js rel=preload as=script><link href=webjars/css/chunk-vendors.2997cc1a.css rel=stylesheet><link href=webjars/css/app.f802fc13.css rel=stylesheet></head><body><noscript><strong>We're sorry but knife4j-vue doesn't work properly without JavaScript enabled. Please enable it to continue.</strong></noscript><div id=app></div><script src=webjars/js/chunk-vendors.90e8ba20.js></script><script src=webjars/js/app.23f8b31d.js></script></body></html>",
                  "status": 200,
                  "statusText": "OK"
                }
              ],
              "description": "接口返回数据。\n                    数组类型，索引0为返回状态，\n                    注意，业务数据返回在索引1。\n                    此外，连线操作时，API组件\n                    可以省去对属性的关联，直接\n                    以接口返回的数据对外传递。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:requesting",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "执行接口调用。\n                    只写属性，触发后会自动复位，\n                    便于再次勾选或传入true触发。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:download",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:onReceived",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:url",
              "valueType": "ObjectArray",
              "defaultValue": [
                "http://14.22.85.37:19999/",
                ""
              ],
              "description": "链接URL。\n<br>字符串数组形式，自动会将输入在数组中的多个字符串\n<br>片段按照顺序合并追加成一个完整的URL给到接口使用。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:enableLoading",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "请求过程动画提示。\n<br>勾选后，请求时会提示转动小圆圈，提示正在请求。\n<br>请求完毕或者出错，会自动关闭提示。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:defaultOpen",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "默认启动。\n<br>勾选后，初始运行就会启动加载。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:comment",
              "valueType": "Multiline",
              "defaultValue": "接口名称",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                "result",
                "message",
                null,
                null,
                "result"
              ],
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:output",
              "valueType": "Object",
              "defaultValue": false,
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:inputs",
              "valueType": "Object",
              "defaultValue": [
                ""
              ],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_type",
              "valueType": "MessageType",
              "defaultValue": "alert",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_title",
              "valueType": "String",
              "defaultValue": "操作结果",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_region",
              "valueType": "Region",
              "defaultValue": "top",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_duration",
              "valueType": "PositiveNumber",
              "defaultValue": 1000,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 300,
              "description": "提示区域宽度。\n                    提示条或对话框的宽度。。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:noteTips",
              "valueType": "Multiline",
              "defaultValue": "弹窗提示message",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:output",
              "valueType": "Object",
              "defaultValue": "接口名称",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:inputs",
              "valueType": "Object",
              "defaultValue": "接口名称",
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:_rawForm",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "原始属性表单。\n                    包含所有做了form、 formReset、 formValue绑定的属性。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:output",
              "valueType": "Object",
              "defaultValue": true,
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputs",
              "valueType": "Object",
              "defaultValue": true,
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:noteTips",
              "valueType": "Multiline",
              "defaultValue": "是否弹窗？",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 160,
              "description": "弹窗高度。\n                    注意，仅对弹窗确认选项有效。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputKeys",
              "valueType": "ObjectArray",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputValues",
              "valueType": "ObjectArray",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:_function",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:_function",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:convertFlatToTree",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>gv1"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:output",
              "valueType": "Object",
              "defaultValue": [],
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:fields",
              "valueType": "ObjectArray",
              "defaultValue": [
                "facialAccessId",
                "facialAccessName",
                "facialAccessPosition",
                "authPersonnel",
                "generalPersonnel"
              ],
              "description": "数据字段。\n                    选择返回数组数据（结构为[{},{}]）元素中的指\n                    定字段，用于下拉框展示或对应表格字段。\n                    注意，因为查询返回转树表和查询返回转下拉组框\n                    复用了相同动态属性配置，而对于fields字段前者\n                    要求数组、后者要求字符串即可，但为了兼容，因\n                    此统一用数组。因此，下拉框的fields属性保持数\n                    组格式，通常只需要一个元数、指定一个字段的列\n                    表给组合框即可。\n                    注意，当直接操作树表格的datas属性时，当下会\n                    自动将本属性fields的值经过右移一位后传递给树\n                    表的columnFields属性，比如[\"name\",\"gender\",\n                    \"phone\"] → [null,\"name\",\"gender\",\"phone\"]，\n                    无需连线操作，为了获取行数据时有字段对应，方便\n                    直接对表单初始化。该机制对于嵌套暴露到上层的属\n                    性操作也同样适用。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:keyId",
              "valueType": "String",
              "defaultValue": "id",
              "description": "下拉框value字段对应的字段。\n                    默认为'id'，通常用来存放当前记录的ID字段。注意，\n                    可以输入空格等对象数据不存在的字段，此时value会\n                    自动按照1、2、3这样的顺序序号作为值来填充\"。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:keyParent",
              "valueType": "String",
              "defaultValue": "parent",
              "description": "父节点（以ID字段的值关联）字段，对应返回数据的字段，默认为字段名称为\"parent\"。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:keyChildren",
              "valueType": "String",
              "defaultValue": "children",
              "description": "子节点（以ID字段的值关联）字段，对应返回数据的字段，默认为字段名称为\"children\"。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:appendTo",
              "valueType": "String",
              "defaultValue": "",
              "description": "追加到指定节点（ID值）\r\n。如果有指定ID，并且在被操作的属性原数据中存在，那么就会将传入\r\n的数据动态插入到指定节点下，作为子节点数据，并且保持原始数据其他部分不变，不会被覆盖。\r\n注意，目前只对树表实现，对下拉框组件暂未支持。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>datas>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>datas"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Values>a:bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                0,
                null
              ],
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "group": "httpQuery_v2>0>输入Values"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>输入Json>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "httpQuery_v2>0>输入Json"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:value",
              "valueType": "Object",
              "defaultValue": 0,
              "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否即时触发。\n<br>勾选后，输入时就会对外触发onChange变化事件。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:initialTrigger",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "初始触发连线操作。\n<br>默认不勾选，勾选后初始加载值时，如果对外有连线，\n<br>并且初始值为非空时，也会触发对外的赋值连线操作。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "变化事件函数。\n<br>默认为内容改变才触发，当勾选即时触发\n<br>（instantTrigger）时，输入时就会触发本\n<br>事件。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:onEnter",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "回车事件。\n<br>输入完毕后回车触发，并且传入当前值。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否只读。",
              "group": "httpQuery_v2>0>操作索引"
            },
            {
              "attr": "httpQuery_v2>0>操作索引>a:_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "group": "httpQuery_v2>0>操作索引"
            }
          ],
          "snapshotURL": "icon.base.graphView",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "DEB57D4D-ED94-486B-9FA2-46766D0164AA"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -297.37343,
          "y": -259.15187
        },
        "anchor": {
          "x": 0.52713,
          "y": 0.5
        },
        "width": 297.1169,
        "height": 179.15341
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "interactive": true,
        "image.stretch": "uniform",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "note": "[gv10] 组件嵌套容器（gv10）索引为0的连线，关联自身\n属性httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:onOutp\nut操作目标组件gv13的属性对话框封装@内置工具函数输 \n入，兼容调试和实际使用@....（内容过多无法展示）   ",
        "fullscreen.gap": 0,
        "label": "根据维保计划ID查询人员",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "display": "displays/develop/uiotos/editor/widgets/interface/httpQuery_v2.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "httpQuery_v2>0>gv1>a:display": "./httpAlert.json",
        "httpQuery_v2>0>gv1>a:innerLayoutMode": "fitContent",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:userData": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:output": 0,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:exec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:arrExec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:noteTips": "获取返回记录的条数",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:function": "codeBlock",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:onOutput": null,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:post": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramKeys": [
          "maintenanceId",
          "pageSize"
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:paramValues": [
          "",
          1000
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:valueJsonable": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:jsonFormat": {
          "maintenanceId": "",
          "pageSize": 1000
        },
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:JWT Token": "",
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:convertFlatToTree": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:treeMiddleType": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataIsJsonString": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:contentType": "application/json",
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:dataType": "JSON",
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:response": [
          "parsererr...",
          {
            "readyState": 4,
            "getResponseHeader": "__ht__function(e) {\r\n                        var t;\r\n                        if (h) {\r\n                            if (!n) { n = {}; while (t = Wt.exec(p)) n[t[1].toLowerCase() + \" \"] = (n[t[1].toLowerCase() + \" \"] || []).concat(t[2]) }\r\n                            t = n[e.toLowerCase() + \" \"]\r\n                        }\r\n                        return null == t ? null : t.join(\", \")\r\n                    }",
            "getAllResponseHeaders": "__ht__function() { return h ? p : null }",
            "setRequestHeader": "__ht__function(e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }",
            "overrideMimeType": "__ht__function(e) { return null == h && (v.mimeType = e), this }",
            "statusCode": "__ht__function(e) {\r\n                        var t;\r\n                        if (e)\r\n                            if (h) T.always(e[T.status]);\r\n                            else\r\n                                for (t in e) w[t] = [w[t], e[t]];\r\n                        return this\r\n                    }",
            "abort": "__ht__function(e) { var t = e || u; return c && c.abort(t), l(0, t), this }",
            "state": "__ht__function() { return i }",
            "always": "__ht__function() { return s.done(arguments).fail(arguments), this }",
            "catch": "__ht__function(e) { return a.then(null, e) }",
            "pipe": "__ht__function() {\r\n                        var i = arguments;\r\n                        return ce.Deferred(function(r) {\r\n                            ce.each(o, function(e, t) {\r\n                                var n = v(i[t[4]]) && i[t[4]];\r\n                                s[t[1]](function() {\r\n                                    var e = n && n.apply(this, arguments);\r\n                                    e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + \"With\"](this, n ? [e] : arguments)\r\n                                })\r\n                            }), i = null\r\n                        }).promise()\r\n                    }",
            "then": "__ht__function(t, n, r) {\r\n                        var u = 0;\r\n\r\n                        function l(i, o, a, s) {\r\n                            return function() {\r\n                                var n = this,\r\n                                    r = arguments,\r\n                                    e = function() {\r\n                                        var e, t;\r\n                                        if (!(i < u)) {\r\n                                            if ((e = a.apply(n, r)) === o.promise()) throw new TypeError(\"Thenable self-resolution\");\r\n                                            t = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0, r = [e]), (s || o.resolveWith)(n, r))\r\n                                        }\r\n                                    },\r\n                                    t = s ? e : function() { try { e() } catch (e) { ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && (n = void 0, r = [e]), o.rejectWith(n, r)) } };\r\n                                i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t))\r\n                            }\r\n                        }\r\n                        return ce.Deferred(function(e) { o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q)) }).promise()\r\n                    }",
            "promise": "__ht__function(e) { return null != e ? ce.extend(e, a) : a }",
            "progress": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
            "done": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
            "fail": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
            "responseText": "<!DOCTYPE html><html lang=en><head><meta charset=utf-8><meta http-equiv=X-UA-Compatible content=\"IE=edge\"><meta name=viewport content=\"width=device-width,initial-scale=1\"><link rel=icon href=favicon.ico><title></title><link href=webjars/css/chunk-51277dbe.57225f85.css rel=prefetch><link href=webjars/js/chunk-069eb437.a0c9f0ca.js rel=prefetch><link href=webjars/js/chunk-0fd67716.d57e2c41.js rel=prefetch><link href=webjars/js/chunk-2d0af44e.c09671a4.js rel=prefetch><link href=webjars/js/chunk-2d0bd799.5bb1a14e.js rel=prefetch><link href=webjars/js/chunk-2d0d0b98.4693c46e.js rel=prefetch><link href=webjars/js/chunk-2d0da532.a47fb5c8.js rel=prefetch><link href=webjars/js/chunk-2d22269d.fc57b306.js rel=prefetch><link href=webjars/js/chunk-3b888a65.8737ce4f.js rel=prefetch><link href=webjars/js/chunk-3ec4aaa8.a79d19f8.js rel=prefetch><link href=webjars/js/chunk-51277dbe.6f598840.js rel=prefetch><link href=webjars/js/chunk-589faee0.5b861f49.js rel=prefetch><link href=webjars/js/chunk-735c675c.be4e3cfe.js rel=prefetch><link href=webjars/js/chunk-adb9e944.fff7fcef.js rel=prefetch><link href=webjars/css/app.f802fc13.css rel=preload as=style><link href=webjars/css/chunk-vendors.2997cc1a.css rel=preload as=style><link href=webjars/js/app.23f8b31d.js rel=preload as=script><link href=webjars/js/chunk-vendors.90e8ba20.js rel=preload as=script><link href=webjars/css/chunk-vendors.2997cc1a.css rel=stylesheet><link href=webjars/css/app.f802fc13.css rel=stylesheet></head><body><noscript><strong>We're sorry but knife4j-vue doesn't work properly without JavaScript enabled. Please enable it to continue.</strong></noscript><div id=app></div><script src=webjars/js/chunk-vendors.90e8ba20.js></script><script src=webjars/js/app.23f8b31d.js></script></body></html>",
            "status": 200,
            "statusText": "OK"
          }
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:requesting": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:download": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:onReceived": null,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:url": [
          "http://14.22.85.37:19999/",
          "order/maintenanceUds/list"
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:enableLoading": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:defaultOpen": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:comment": "根据维保计划id 查询人员\norder/maintenanceUds/list",
        "httpQuery_v2>0>gv1>a:httpAlert>0>api1>a:bindControlsVal": [
          "result",
          "message",
          null,
          null,
          "result"
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:userData": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:output": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:exec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:arrExec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_type": "alert",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_title": "操作结果",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_region": "top",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_duration": 1000,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedWidth": 300,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:noteTips": "弹窗提示message",
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:onOutput": null,
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:userData": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:output": "接口名称",
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:exec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:arrExec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:_rawForm": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:onOutput": null,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:onOutput"
        ],
        "bindControlsTag": [
          "gv2"
        ],
        "bindControlsAttr": [
          "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "httpQuery_v2>0>datas>a:userData": [],
        "httpQuery_v2>0>datas>a:output": [],
        "httpQuery_v2>0>datas>a:exec": false,
        "httpQuery_v2>0>datas>a:fields": [
          "deviceId",
          "deviceName",
          "devicePosition",
          "state",
          "deviceStatus"
        ],
        "httpQuery_v2>0>datas>a:keyId": "id",
        "httpQuery_v2>0>datas>a:keyParent": "parent",
        "httpQuery_v2>0>datas>a:keyChildren": "children",
        "httpQuery_v2>0>datas>a:appendTo": "",
        "httpQuery_v2>0>datas>a:arrExec": false,
        "httpQuery_v2>0>datas>a:onOutput": null,
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
        "_hideWhenRun": false,
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:userData": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:exec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:arrExec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:onOutput": null,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:userData": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:output": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:exec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:arrExec": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:noteTips": "是否弹窗？",
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:onOutput": null,
        "innerLayoutMode": "fitContent",
        "useOriginSize": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:_fixedHeight": 160,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputKeys": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputValues": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:_function": null,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:_function": null,
        "_forbidInherit": false,
        "_editDebug": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:output": [
          {
            "id": "1733505918038548482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733505917963051009",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733509843844177922",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733509843789651969",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733593543361536001",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733593543298621441",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733597541170782209",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733597541124644866",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733601041829175298",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733601041753677825",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733604872185028610",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733604872138891265",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733608730974068737",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733608730906959873",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733608809814401026",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733608809776652290",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733619422296907777",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733619422250770433",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733623827406626818",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733623827284992002",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733627385971580930",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733627385904472065",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733642413730799618",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733642413563027458",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733642498657067009",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733642498606735362",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733673472900046850",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733673472514170881",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733674976520282113",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733674976465756161",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733675011563692033",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733675011517554689",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733687682707070977",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733687682631573505",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733688096139616258",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733688096089284609",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733688534196920321",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733688534138200065",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733690574499323906",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733690574453186561",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733690800425508865",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733690800366788609",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733694764286058498",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733694764206366722",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699198554578946",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699198512635906",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699249204994050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699249158856705",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699348849074178",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699348731633667",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699773774012418",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699773740457985",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733719384108068865",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733719383894159361",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733723218045857794",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733723217987137537",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733728945556713473",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733728945426690049",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733730168175357953",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733730168104054786",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733732537676099586",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733732537634156546",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733733220445876225",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733733220399738881",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733733621584916482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733733621542973441",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733738154994200577",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733738154935480321",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733738168646660098",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733738168566968321",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733740544619212801",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733740544564686850",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733743253531422722",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733743253405593602",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733743289774403585",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733743289728266241",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733747315031175169",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733747314917928962",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733754747769876482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733754747698573313",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733755466124128258",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733755466086379522",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733759472003215362",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733759471944495106",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733871624114434050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733871624064102402",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733872126470418433",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733872126420086785",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733874509099331585",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733874509061582850",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733880216385253378",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733880216343310337",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733880246554882050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733880246508744706",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733937632829272066",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733937632711831553",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733937896109928450",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733937896055402498",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733975024726470658",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733975024680333314",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733975620187615233",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733975620082757633",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733984560526946305",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733984560485003265",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733991298680516609",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733991298630184961",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733991985862701058",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733991985682345985",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734009822954156033",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734009822908018690",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734020308491857922",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734020308454109186",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734041099010863105",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734041098805342209",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734041156321832961",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734041156284084226",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734043875984044034",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734043875929518081",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734054855312961537",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734054855275212801",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734056072743251970",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734056072663560194",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734062666453381121",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734062666411438081",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734074878643433473",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734074878567936003",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734083507987705858",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734083507949957122",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734102087416442882",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734102087038955521",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734179525483851778",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734179525429325826",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734180818109624322",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734180818055098369",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734241702085423106",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734241701800210434",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734243077133463553",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734243077091520513",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734346752354971649",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734346752300445698",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734352567073796097",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734352567023464450",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734355407540350977",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734355407490019330",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734372067164844034",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734372067114512386",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734379197074796545",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734379197024464898",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734403799062704130",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734403798991400963",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404119276843010",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404119226511362",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404468582674434",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404468523954178",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404959798587394",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404959748255745",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734728065410953218",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734728060126130178",
            "udsName": "jone1A",
            "phone": "13423151120"
          }
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:outputByEvent": true,
        "httpQuery_v2>0>输入Values>a:userData": [],
        "httpQuery_v2>0>输入Values>a:output": "",
        "httpQuery_v2>0>输入Values>a:outputByEvent": true,
        "httpQuery_v2>0>输入Values>a:exec": false,
        "httpQuery_v2>0>输入Values>a:arrExec": false,
        "httpQuery_v2>0>输入Values>a:onOutput": null,
        "httpQuery_v2>0>输入Json>a:userData": [],
        "httpQuery_v2>0>输入Json>a:output": null,
        "httpQuery_v2>0>输入Json>a:outputByEvent": true,
        "httpQuery_v2>0>输入Json>a:exec": false,
        "httpQuery_v2>0>输入Json>a:arrExec": false,
        "httpQuery_v2>0>输入Json>a:onOutput": null,
        "httpQuery_v2>0>操作索引>a:value": 0,
        "httpQuery_v2>0>操作索引>a:instantTrigger": true,
        "httpQuery_v2>0>操作索引>a:initialTrigger": false,
        "httpQuery_v2>0>操作索引>a:onChange": null,
        "httpQuery_v2>0>操作索引>a:onEnter": null,
        "httpQuery_v2>0>操作索引>a:readOnly": false,
        "httpQuery_v2>0>操作索引>a:_bindEvents_0": "*",
        "httpQuery_v2>0>输入Values>a:bindControlsVal": [
          0,
          null
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:convertFlatToTree": false,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:inputs": true,
        "httpQuery_v2>0>输入Values>a:inputs": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:inputs": [],
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:inputs": [
          ""
        ],
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:inputs": "接口名称",
        "httpQuery_v2>0>gv1>a:httpAlert>0>输出>a:inputs": [],
        "httpQuery_v2>0>datas>a:inputs": [],
        "shadowEnabled": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__queryCount>a:outputByEvent": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>__optAlert>a:outputByEvent": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>func7>a:outputByEvent": true,
        "httpQuery_v2>0>gv1>a:httpAlert>0>ifAlert>a:outputByEvent": true,
        "httpQuery_v2>0>datas>a:outputByEvent": true,
        "httpQuery_v2>0>输入Json>a:inputs": []
      }
    },
    {
      "c": "ht.Edge",
      "i": 227091,
      "p": {
        "name": "edge",
        "displayName": "0（edge8'）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：httpQuery_v2&gt;0&gt;gv1&gt;a:httpAlert&gt;0&gt;输出&gt;a:onOutput@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>",
        "parent": {
          "__i": 227090
        },
        "tag": "edge8'",
        "source": {
          "__i": 227090
        },
        "target": {
          "__i": 227096
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：httpQuery_v2&gt;0&gt;gv1&gt;a:httpAlert&gt;0&gt;输出&gt;a:onOutput@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 227092,
      "p": {
        "name": "input",
        "displayName": "输入框（idInput）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>",
        "tag": "idInput",
        "dataBindings": {
          "a": {
            "value": {
              "id": "iotos.formValue",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": "../maintenance/id"
            },
            "instantTrigger": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "initialTrigger": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onChange": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onClear": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onEnter": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "readOnly": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_2": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sun Nov 26 2023 20:56:56 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）",
              "description": "组件源（备选）。\n<br>当组件源（image）为非字符串格式，显示\n<br>[Object]时，可以通过这里备选地址，双击\n<br>打开组件配置。"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35,
              "description": "固定高度。\n<br>部分组件比如下拉框以及这里的输入框，拖拽或布局时，\n<br>高度默认会保持不变，只是宽度能够变化。高度可以在\n<br>当前页面全局自定义，也能通过当前属性对当个组件设\n<br>定。全局设置为页面的公共属性组中的“组件默认固定高\n<br>度”属性。"
            },
            {
              "attr": "activeBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "激活时边框颜色。\n<br>通常是选中输入状态时的边框色。"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "背景颜色。"
            },
            {
              "attr": "readOnlyBackground",
              "valueType": "Color",
              "defaultValue": "rgb(247,247,247)",
              "description": "只读时的背景颜色。\n<br>注意，区别于禁用（暂未开放配置）。"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "defaultValue": "symbols/demo/uiotos/icons/light/search.json",
              "description": "图标地址。\n<br>输入框默左侧为“搜索”图标。"
            },
            {
              "attr": "iconColor",
              "valueType": "Color",
              "defaultValue": "rgb(213,213,213)",
              "description": "输入框图标颜色。\n<br>对于内置部件中通过工具转换成的图标，\n<br>为支持动态修改背景颜色的矢量形式。"
            },
            {
              "attr": "iconType",
              "valueType": "Level",
              "defaultValue": 1,
              "description": "图标类型。\n<br>相同名称图标的不同风格，已弃用，\n<br>当前属性目前作为备用。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                15
              ],
              "description": "图标尺寸。\n<br>数组形式，索引依次为宽度、高度值。"
            },
            {
              "attr": "iconTextGap",
              "valueType": "Number",
              "defaultValue": 5,
              "description": "图标文字间距。"
            },
            {
              "attr": "hoverIcon",
              "valueType": "Image",
              "description": "鼠标滑过时的图标。"
            },
            {
              "attr": "borderRadius",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "边框圆角。"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 1,
              "description": "边框宽度。"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgb(213,213,213)",
              "description": "边框颜色。"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "description": "字体。"
            },
            {
              "attr": "readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否只读。"
            },
            {
              "attr": "placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "description": "未输入时默认占位符文字。"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(0,0,0)",
              "description": "文字颜色。"
            },
            {
              "attr": "labelColor",
              "valueType": "Color",
              "defaultValue": "rgb(0,0,0)",
              "description": "标签文字颜色。"
            },
            {
              "attr": "labelText",
              "valueType": "String",
              "defaultValue": "标签",
              "description": "标签文字。"
            },
            {
              "attr": "gap",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "标签与组件的间距。\n<br>注意，仅在标签内嵌模式（layoutVertical）下，\n<br>改配置参数才有用。"
            },
            {
              "attr": "layoutVertical",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "标签与组件的布局模式。\n<br>水平左右，或者垂直上下。"
            },
            {
              "attr": "labelEmbeded",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "标签是否内嵌。\n<br>不内嵌时，组件的宽度不包含标签。\n<br>选择内嵌时，组件的宽度包含标签文字宽度。"
            },
            {
              "attr": "type",
              "valueType": "FormType",
              "defaultValue": "text",
              "description": "输入框表单类型。\n<br>包括密码、文本等类型。"
            },
            {
              "attr": "instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否即时触发。\n<br>勾选后，输入时就会对外触发onChange变化事件。"
            },
            {
              "attr": "initialTrigger",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "初始触发连线操作。\n<br>默认不勾选，勾选后初始加载值时，如果对外有连线，\n<br>并且初始值为非空时，也会触发对外的赋值连线操作。"
            },
            {
              "attr": "emptyTrigger",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "value",
              "valueType": "Object",
              "defaultValue": "",
              "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "description": "操作的目标组件（标签）。\n<br>连线A → B，那么B就是目标组件。"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "description": "操作目标组件的属性。\n<br>比如A.x→B.y时，x就是当前的关联\n<br>属性，y即为操作属性，A的x属性值\n<br>通过连线赋值给B的y属性。"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "description": "操作关联的来源组件（标签）。\n<br>连线A → B，那么A就是来源组件。\n<br>注意，为空不用填或者填写A的标\n<br>签效果一样，也可以填入其他组件\n<br>的标签（非正常操作）。"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "description": "关联属性。\n<br>关联的来源组件的指定属性，比如\n<br>A.x→B.y时，x就是当前的关联属性，\n<br>y为操作属性，A的x属性值通过连线\n<br>赋值给B的y属性。"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form"
                ]
              },
              "description": "操作过滤函数。\n<br>所有连线对外操作执行之前，都会经过该函数\n<br>过滤处理，通常无需操作。可以做自定义逻辑。\n<br>其中对相应索引index下直接return返回undefined\n<br>时，将忽略掉指定索引连线的执行触发。"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "变化事件函数。\n<br>默认为内容改变才触发，当勾选即时触发\n<br>（instantTrigger）时，输入时就会触发本\n<br>事件。"
            },
            {
              "attr": "onEnter",
              "valueType": "Function",
              "description": "回车事件。\n<br>输入完毕后回车触发，并且传入当前值。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_1",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[1]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_2",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[2]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/admin/uiotos/icons/snapshot/input.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __input_ui(data, gv, cache);}",
          "width": 180,
          "height": 35,
          "scrollable": true,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "72768FCB-FA88-4E90-AFD7-09A3DC78815D"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": -455.94612
        },
        "width": 180,
        "height": 35
      },
      "s": {
        "label.opacity": 1,
        "label": "表单操作同步过\n来的行数据ID",
        "label.position": 2,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "#FF7C7C",
        "interactive": true,
        "image.stretch": "uniform",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "bindEvents": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "iconPath": "symbols/demo/uiotos/icons/light/search.json",
        "labelText": "标签",
        "gap": 0,
        "_hideWhenRun": true,
        "paramControlTag": [
          null,
          null,
          null
        ],
        "paramControlAttr": [
          "value",
          "value",
          null
        ],
        "bindControlsTag": [
          "gv1",
          "dlg3",
          "dlg3"
        ],
        "bindControlsAttr": [
          "httpQuery_v2>0>输入Values>a:inputs",
          "textArea>0>textArea-ui1>a:value",
          "show"
        ],
        "bindControlsVal": [
          null,
          null,
          null
        ],
        "_bindEvents_0-list": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "symbol": "symbols/develop/uiotos/base/input-ui.json",
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_2",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[2]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "_bindEvents_1-list": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "_bindEvents_2-list": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "value": ""
      }
    },
    {
      "c": "ht.Edge",
      "i": 227093,
      "p": {
        "name": "edge",
        "displayName": "0（edge2）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpQuery_v2&gt;0&gt;输入Values&gt;a:inputs@gv4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227092
        },
        "tag": "edge2",
        "source": {
          "__i": 227092
        },
        "target": {
          "__i": 227090
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "interactive": true,
        "layout.h": "leftright",
        "layout.v": "scale"
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpQuery_v2&gt;0&gt;输入Values&gt;a:inputs@gv4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 227094,
      "p": {
        "name": "edge",
        "displayName": "1（edge10）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@idInput</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>",
        "parent": {
          "__i": 227092
        },
        "tag": "edge10",
        "source": {
          "__i": 227092
        },
        "target": {
          "__i": 227102
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：textArea&gt;0&gt;textArea-ui1&gt;a:value@dlg3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@idInput</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：无</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 227095,
      "p": {
        "name": "edge",
        "displayName": "2（edge11）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227092
        },
        "tag": "edge11",
        "source": {
          "__i": 227092
        },
        "target": {
          "__i": 227102
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(0,199,7)",
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(0,199,7)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 2
      },
      "a": {
        "index": 2,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共3条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 227096,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv2）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>内置工具函数输入，兼容调试和实际使用</span>",
        "tag": "gv2",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_1": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue Nov 28 2023 11:13:55 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "defaultValue": ""
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ]
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              }
            },
            {
              "attr": "__loadingText",
              "valueType": "StringArray",
              "defaultValue": [
                "加载中",
                "未加载"
              ],
              "group": "loading"
            },
            {
              "attr": "__loadingFont",
              "valueType": "Font"
            },
            {
              "attr": "__loadingColor",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)"
            },
            {
              "attr": "__loadingStatus",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData",
              "valueType": "ObjectArray",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText",
              "valueType": "String",
              "defaultValue": "对话框",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display",
              "valueType": "URL",
              "defaultValue": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded",
              "valueType": "Object",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            }
          ],
          "snapshotURL": "icon.base.graphView",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "DEB57D4D-ED94-486B-9FA2-46766D0164AA"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": -22.68712
        },
        "width": 297.1169,
        "height": 202.29628
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "fullscreen.gap": 0,
        "interactive": true,
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "display": "./对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384.json",
        "shadowEnabled": false,
        "bindControlsTag": [
          "返回对象集转成树表的数组列表",
          "外层字段"
        ],
        "bindControlsAttr": [
          "inputs",
          "inputValues"
        ],
        "bindControlsVal": [
          null,
          0
        ],
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput",
          "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput"
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": "接口原始返回的数据：",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": "fullScreen",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": "请输入",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": "rgb(61,61,61)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": "rgb(255,255,255)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": "datas",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": false,
        "innerLayoutMode": "fullScreen",
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>内置工具函数输入，兼容调试和实际使用</span>",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": [
          {
            "id": "1733505918038548482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733505917963051009",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733509843844177922",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733509843789651969",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733593543361536001",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733593543298621441",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733597541170782209",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733597541124644866",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733601041829175298",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733601041753677825",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733604872185028610",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733604872138891265",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733608730974068737",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733608730906959873",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733608809814401026",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733608809776652290",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733619422296907777",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733619422250770433",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733623827406626818",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733623827284992002",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733627385971580930",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733627385904472065",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733642413730799618",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733642413563027458",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733642498657067009",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733642498606735362",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733673472900046850",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733673472514170881",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733674976520282113",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733674976465756161",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733675011563692033",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733675011517554689",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733687682707070977",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733687682631573505",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733688096139616258",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733688096089284609",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733688534196920321",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733688534138200065",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733690574499323906",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733690574453186561",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733690800425508865",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733690800366788609",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733694764286058498",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733694764206366722",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699198554578946",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699198512635906",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699249204994050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699249158856705",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699348849074178",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699348731633667",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733699773774012418",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733699773740457985",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733719384108068865",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733719383894159361",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733723218045857794",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733723217987137537",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733728945556713473",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733728945426690049",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733730168175357953",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733730168104054786",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733732537676099586",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733732537634156546",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733733220445876225",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733733220399738881",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733733621584916482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733733621542973441",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733738154994200577",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733738154935480321",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733738168646660098",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733738168566968321",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733740544619212801",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733740544564686850",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733743253531422722",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733743253405593602",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733743289774403585",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733743289728266241",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733747315031175169",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733747314917928962",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733754747769876482",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733754747698573313",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733755466124128258",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733755466086379522",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733759472003215362",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733759471944495106",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733871624114434050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733871624064102402",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733872126470418433",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733872126420086785",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733874509099331585",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733874509061582850",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733880216385253378",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733880216343310337",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733880246554882050",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733880246508744706",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733937632829272066",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733937632711831553",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733937896109928450",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733937896055402498",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733975024726470658",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733975024680333314",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733975620187615233",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733975620082757633",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733984560526946305",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733984560485003265",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733991298680516609",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733991298630184961",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1733991985862701058",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1733991985682345985",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734009822954156033",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734009822908018690",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734020308491857922",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734020308454109186",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734041099010863105",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734041098805342209",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734041156321832961",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734041156284084226",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734043875984044034",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734043875929518081",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734054855312961537",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734054855275212801",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734056072743251970",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734056072663560194",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734062666453381121",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734062666411438081",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734074878643433473",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734074878567936003",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734083507987705858",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734083507949957122",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734102087416442882",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734102087038955521",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734179525483851778",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734179525429325826",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734180818109624322",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734180818055098369",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734241702085423106",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734241701800210434",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734243077133463553",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734243077091520513",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734346752354971649",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734346752300445698",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734352567073796097",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734352567023464450",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734355407540350977",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734355407490019330",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734372067164844034",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734372067114512386",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734379197074796545",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734379197024464898",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734403799062704130",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734403798991400963",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404119276843010",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404119226511362",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404468582674434",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404468523954178",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734404959798587394",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734404959748255745",
            "udsName": "jone1A",
            "phone": "13423151120"
          },
          {
            "id": "1734728065410953218",
            "udsId": "851d970ab08a4cfc8f29a54d1fcf2398",
            "maintenanceId": "1734728060126130178",
            "udsName": "jone1A",
            "phone": "13423151120"
          }
        ],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": ""
      }
    },
    {
      "c": "ht.Edge",
      "i": 227097,
      "p": {
        "name": "edge",
        "displayName": "0（edge7）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:onOutput@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227096
        },
        "tag": "edge7",
        "source": {
          "__i": 227096
        },
        "target": {
          "__i": 227099
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:onOutput@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 227098,
      "p": {
        "name": "edge",
        "displayName": "1（edge8）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputValues@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:onOutput@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227096
        },
        "tag": "edge8",
        "source": {
          "__i": 227096
        },
        "target": {
          "__i": 227104
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "extend.west",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1,
        "label.position": 5,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputValues@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:onOutput@gv2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：null</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 227099,
      "p": {
        "name": "func",
        "displayName": "工具函数（返回对象集转成树表的数组列表）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>",
        "tag": "返回对象集转成树表的数组列表",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_keys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_defaultValue": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_autoReverse": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Dec 09 2023 23:03:39 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "JSON格式转换函数。\n                对象列表[{},{}]指定字段顺序，将列表\n                元素的对象转成数组，成为数组列表[[],[]],\n                比如输入：[{a:1,b:2,c:3},{a:4,b:5,c:6},\n                {a:7,b:8,c:9}]，指定取b,a字段并保持顺序，\n                输出[[2,1],[5,4],[8,7]]。\n                兼容输入为对象的情况，此时输出是简单数组，\n                比如{a:1,b:2,c:3} → [1,2,3]"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "_keys",
              "valueType": "StringArray",
              "defaultValue": [],
              "description": "字段列表。\n                    注意保持顺序，如果字段在对象\n                    列表中存在，那么对应的值就取\n                    作当前数组索引的值。如果字段\n                    在对象中不存在，则填充默认值。",
              "dynamicCreate": true
            },
            {
              "attr": "_defaultValue",
              "valueType": "Object",
              "defaultValue": null,
              "description": "字段不存在时填充的默认值。",
              "dynamicCreate": true
            },
            {
              "attr": "_autoReverse",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "自动识别输入反转换。\n                    如果输入的本身就是数组列表，本属性\n                    默认未勾选时，通常输出跟输入一样。\n                    注意，如果字段数量与对象中键不一样，\n                    那么会按照配置调整数据，比如减少原\n                    对象中的项，或新增项并填充默认值。\n                    因此可用来删除或增加对象列表的key。\n                    当勾选本属性时，输入的数组列表，会\n                    按照字段列表（_keys）将数组元素转成\n                    对象值，输出对象列表，等同于“数组列\n                    表转对象列表”。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "88CB28AF-02B8-4AC7-A7F8-CB7CBF0208DB"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": 138.53602
        },
        "width": 45,
        "height": 40
      },
      "s": {
        "label.position": 20,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "对象列表→数组列表",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>formValue表单设计是按照提交来的，比如：\n<br>{\n<br>    field1:{\n<br>    },\n<br>    field2:[],\n<br>    field3:{\n<br>    }\n<br>}\n<br>现在行数据过来的时field1字段下的内容，因\n<br>此通过目前操作将结构加上field放上级字段。</span>",
        "noteTips": "对象列表→数组列表",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "inputs": {},
        "inputsArrToObj": true,
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_keys",
            "valueType": "StringArray",
            "defaultValue": [],
            "description": "字段列表。\n                    注意保持顺序，如果字段在对象\n                    列表中存在，那么对应的值就取\n                    作当前数组索引的值。如果字段\n                    在对象中不存在，则填充默认值。",
            "dynamicCreate": true
          },
          {
            "attr": "_defaultValue",
            "valueType": "Object",
            "defaultValue": null,
            "description": "字段不存在时填充的默认值。",
            "dynamicCreate": true
          },
          {
            "attr": "_autoReverse",
            "valueType": "Boolean",
            "defaultValue": false,
            "description": "自动识别输入反转换。\n                    如果输入的本身就是数组列表，本属性\n                    默认未勾选时，通常输出跟输入一样。\n                    注意，如果字段数量与对象中键不一样，\n                    那么会按照配置调整数据，比如减少原\n                    对象中的项，或新增项并填充默认值。\n                    因此可用来删除或增加对象列表的key。\n                    当勾选本属性时，输入的数组列表，会\n                    按照字段列表（_keys）将数组元素转成\n                    对象值，输出对象列表，等同于“数组列\n                    表转对象列表”。",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          }
        ],
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "output"
        ],
        "bindControlsTag": [
          "输出"
        ],
        "bindControlsAttr": [
          "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "output": [
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ]
        ],
        "exec": false,
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "function": "objsToArrs",
        "_keys": [
          "udsName",
          "phone",
          "udsId"
        ],
        "inputKeys": [],
        "inputValues": []
      }
    },
    {
      "c": "ht.Edge",
      "i": 227100,
      "p": {
        "name": "edge",
        "displayName": "0（edge5'）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@输出</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227099
        },
        "tag": "edge5'",
        "source": {
          "__i": 227099
        },
        "target": {
          "__i": 227101
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@输出</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 227101,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（输出）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>内置工具函数输入，兼容调试和实际使用</span>",
        "tag": "输出",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue Nov 28 2023 11:13:55 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "defaultValue": ""
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ]
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              }
            },
            {
              "attr": "__loadingText",
              "valueType": "StringArray",
              "defaultValue": [
                "加载中",
                "未加载"
              ],
              "group": "loading"
            },
            {
              "attr": "__loadingFont",
              "valueType": "Font"
            },
            {
              "attr": "__loadingColor",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)"
            },
            {
              "attr": "__loadingStatus",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData",
              "valueType": "ObjectArray",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText",
              "valueType": "String",
              "defaultValue": "对话框",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display",
              "valueType": "URL",
              "defaultValue": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded",
              "valueType": "Object",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            }
          ],
          "snapshotURL": "icon.base.graphView",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "DEB57D4D-ED94-486B-9FA2-46766D0164AA"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": 311.80792
        },
        "width": 297.1169,
        "height": 192.06809
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "fullscreen.gap": 0,
        "interactive": true,
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "display": "./对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384.json",
        "shadowEnabled": false,
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramControlTag": [],
        "paramControlAttr": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": "对象列表转数组列表：",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": "fullScreen",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": "请输入",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": "rgb(61,61,61)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": "rgb(255,255,255)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": "datas",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": false,
        "innerLayoutMode": "fullScreen",
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>内置工具函数输入，兼容调试和实际使用</span>",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": "",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": [
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ],
          [
            "jone1A",
            "13423151120",
            "851d970ab08a4cfc8f29a54d1fcf2398"
          ]
        ]
      }
    },
    {
      "c": "ht.Node",
      "i": 227102,
      "p": {
        "name": "dlg",
        "displayName": "对话框（dlg3）",
        "tag": "dlg3",
        "dataBindings": {
          "a": {
            "show": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPageBinded": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOk": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onCancel": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFinally": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "debugOccupied": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Nov 16 2023 16:29:40 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "titleText",
              "valueType": "String",
              "defaultValue": "对话框"
            },
            {
              "attr": "titleColor",
              "valueType": "Color"
            },
            {
              "attr": "titleFont",
              "valueType": "Font",
              "defaultValue": "12px sans-serif, Arial"
            },
            {
              "attr": "footerBackground",
              "valueType": "Color"
            },
            {
              "attr": "backgroundImage",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/common/borderRectange.json"
            },
            {
              "attr": "backgroundColor",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框整体背景色。\n<br>包括对话框默认的标题头和底部。注意，该颜色在内容背景色（innerBackground）\n<br>的下层，因此会被遮盖掉，要显示的话首先需要设置内容背景色透明度为0或清掉。"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "description": "对话框内容页背景色。\n<br>不包括对话框默认的标题头和底部。注意，如果要设置对话框统一背景色，\n<br>或者设置透明、半透明，需要先将该属性设置透明度为0或者删除设定值，\n<br>随后设置对话框背景色属性（backgoundColor）。"
            },
            {
              "attr": "maskBackground",
              "valueType": "Color",
              "defaultValue": "rgba(0,0,0,0.30)",
              "description": "遮盖层背景色。\n<br>模态对话框弹出时，通常出现在页面上半透明阴影的遮盖颜色。注意，如果需要\n<br>设置对话框全透明，除了对话框整体背景色（backgroundColor）和内容区域背景\n<br>色（innerBackground）颜色为透明或清理掉，也需要将当前的遮盖曾颜色设置为\n<br>透明或者清理掉。"
            },
            {
              "attr": "modal",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 10
            },
            {
              "attr": "boxShadow",
              "valueType": "String",
              "defaultValue": "0px 8px 22px rgba(0,0,0,0.1)"
            },
            {
              "attr": "padding",
              "valueType": "PositiveNumber",
              "defaultValue": 0
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "embedded",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "勾选后，对话框弹窗显示位置不再是屏幕居中，\n而是按照布局设置动态确定的位置上显示。注意，\n拖放将对话框拖放到页面区域（底板矩形）外，\n并且设置了自动布局，那么运行时会自动靠边对其\n显示，避免编辑时覆盖页面内容区域。"
            },
            {
              "attr": "show",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "hide",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "displaySaving",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0."
            },
            {
              "attr": "reloadWhenOpen",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "该属性不要默认勾选，会导致编辑器属性弹窗初始化内容被清空"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              }
            },
            {
              "attr": "onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              }
            },
            {
              "attr": "onPageBinded",
              "valueType": "Object"
            },
            {
              "attr": "headerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35
            },
            {
              "attr": "footerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 60,
              "group": "footer&header"
            },
            {
              "attr": "headerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "footerVisible",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "closeButtonOnly",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonGap",
              "valueType": "PositiveNumber",
              "defaultValue": 20
            },
            {
              "attr": "oneButton",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "cancelDefault",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "footerButtonsText",
              "valueType": "StringArray",
              "defaultValue": [
                "取消",
                "确定"
              ],
              "description": "取消和确定按钮文字。\n<br>数组类型，其中索引0为“取消”功能\n<br>按钮对应的显示文字，索引1为“确定”\n<br>功能按钮对应的显示文字。可以按照\n<br>实际情况给两个功能得按钮赋予其他\n<br>显示文字。\n<br>其中，取消时，对话框不对外触发连\n<br>线操作；确定时，对话框执行对外连\n<br>线操作。\n<br>注意，“确定”对应onOk事件，“取消”\n<br>对应onCancel事件，因此如果想要取\n<br>消点击时触发下一步连线执行，可以\n<br>通过关联onCancel事件。点击确定时，\n<br>对外可省去对onOk事件的关联，”取\n<br>消”对onCancel事件的关联则不能省。"
            },
            {
              "attr": "bt0-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt0-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ]
            },
            {
              "attr": "bt0-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt0-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(55,125,255)",
                "rgb(55,125,255)"
              ]
            },
            {
              "attr": "bt0-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "bt1-backgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-selectBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-activeBackgrounds",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(247,247,247)"
              ]
            },
            {
              "attr": "bt1-textColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-selectTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-activeTextColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderWidths",
              "valueType": "NumberArray",
              "defaultValue": [
                1,
                0,
                0
              ]
            },
            {
              "attr": "bt1-borderColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(51,153,255)",
                "rgb(51,153,255)"
              ]
            },
            {
              "attr": "bt1-borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3
            },
            {
              "attr": "footerButtonSize",
              "valueType": "NumberArray",
              "defaultValue": [
                75,
                35
              ]
            },
            {
              "attr": "titleFont",
              "valueType": "Font"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              }
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "纯表单数据。\n<br>限定iotos.formValue类型的绑定，不包括form/formReset。"
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "textArea>0>textArea-ui1"
            },
            {
              "attr": "textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "textArea>0>datas"
            }
          ],
          "snapshotURL": "icon.base.dialog-ui",
          "renderHTML": "__ht__function(data, gv, cache) {return __dialog_ui(data,gv,cache);}",
          "width": 600,
          "height": 400,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "594D8693-2E04-49DD-A8AD-F5DADD0D57E8"
        },
        "position": {
          "x": -305.43421,
          "y": -749.12573
        },
        "width": 416.45133,
        "height": 243.00301
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform"
      },
      "a": {
        "display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "show": false,
        "symbol": "symbols/develop/uiotos/base/dialog-ui.json",
        "textArea>0>textArea-ui1>a:value": "",
        "textArea>0>textArea-ui1>a:placeholder": "请输入",
        "textArea>0>textArea-ui1>a:onChange": null,
        "textArea>0>textArea-ui1>a:instantTrigger": true,
        "textArea>0>textArea-ui1>a:htmlContent": false,
        "textArea>0>textArea-ui1>a:readOnly": false,
        "textArea>0>textArea-ui1>a:color": "rgb(61,61,61)",
        "textArea>0>textArea-ui1>a:background": "rgb(255,255,255)",
        "textArea>0>datas>s:text": "datas",
        "innerLayoutMode": "fullScreen",
        "hide": false,
        "bindEvents": [
          "*",
          "onCancel"
        ],
        "titleText": "表单操作向下传入的行数据ID："
      }
    },
    {
      "c": "ht.Node",
      "i": 227103,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（加字段输出）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>",
        "tag": "加字段输出",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue Nov 28 2023 11:13:55 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "defaultValue": ""
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ]
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              }
            },
            {
              "attr": "__loadingText",
              "valueType": "StringArray",
              "defaultValue": [
                "加载中",
                "未加载"
              ],
              "group": "loading"
            },
            {
              "attr": "__loadingFont",
              "valueType": "Font"
            },
            {
              "attr": "__loadingColor",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)"
            },
            {
              "attr": "__loadingStatus",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData",
              "valueType": "ObjectArray",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText",
              "valueType": "String",
              "defaultValue": "对话框",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display",
              "valueType": "URL",
              "defaultValue": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded",
              "valueType": "Object",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "isOk"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value",
              "valueType": "Object",
              "defaultValue": "",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder",
              "valueType": "String",
              "defaultValue": "请输入",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color",
              "valueType": "Color",
              "defaultValue": "rgb(61,61,61)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text",
              "valueType": "String",
              "defaultValue": "datas",
              "extraInfo": null,
              "description": null,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            },
            {
              "attr": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "group": "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数"
            }
          ],
          "snapshotURL": "icon.base.graphView",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "DEB57D4D-ED94-486B-9FA2-46766D0164AA"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": 660.77919
        },
        "width": 297.1169,
        "height": 192.06809
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "fullscreen.gap": 0,
        "interactive": true,
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "display": "./对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384.json",
        "shadowEnabled": false,
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramControlTag": [],
        "paramControlAttr": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:show": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:userData": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:titleText": "加上外层字段后的数据：",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:display": "displays/develop/uiotos/editor/widgets/dialog/textArea.json",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:innerLayoutMode": "fullScreen",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onPageBinded": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onOk": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onCancel": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:onFinally": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:placeholder": "请输入",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:onChange": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:instantTrigger": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:htmlContent": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:readOnly": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:color": "rgb(61,61,61)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:background": "rgb(255,255,255)",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>datas>s:text": "datas",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:debugOccupied": false,
        "innerLayoutMode": "fullScreen",
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          }
        ],
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>内置工具函数输入，兼容调试和实际使用</span>",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:userData": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:outputByEvent": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:arrExec": false,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:onOutput": null,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:exeWhenInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:resetAfterInput": true,
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs": [],
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>弹窗>a:textArea>0>textArea-ui1>a:value": "",
        "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:output": {
          "maintenanceId": null
        }
      }
    },
    {
      "c": "ht.Node",
      "i": 227104,
      "p": {
        "name": "func",
        "displayName": "工具函数（外层字段）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>formValue表单设计是按照提交来的，比如：\n<br>{\n<br>    field1:{\n<br>    },\n<br>    field2:[],\n<br>    field3:{\n<br>    }\n<br>}\n<br>现在行数据过来的时field1字段下的内容，因\n<br>此通过目前操作将结构加上field放上级字段。</span>",
        "tag": "外层字段",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_keys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_defaultValue": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_autoReverse": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Sat Dec 09 2023 23:03:39 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标颜色。\n<br>包括显示文字。",
              "group": "功能（关键）",
              "name": "图标颜色"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "函数别名注释",
              "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行"
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
              "defaultValue": false
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行"
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "defaultValue": {},
              "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "name": "输入键组",
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "name": "输入值组",
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒"
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行"
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing"
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": {
                "enum": {
                  "values": [
                    "不转换",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）"
                  ]
                }
              },
              "defaultValue": "不转换",
              "name": "changeOutputTo"
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。"
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "输出事件。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              }
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "88CB28AF-02B8-4AC7-A7F8-CB7CBF0208DB"
        },
        "host": {
          "__i": 227089
        },
        "position": {
          "x": -305.43421,
          "y": 492.14213
        },
        "width": 45,
        "height": 40
      },
      "s": {
        "label.position": 20,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "添加上层字段后",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "center"
      },
      "a": {
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>formValue表单设计是按照提交来的，比如：\n<br>{\n<br>    field1:{\n<br>    },\n<br>    field2:[],\n<br>    field3:{\n<br>    }\n<br>}\n<br>现在行数据过来的时field1字段下的内容，因\n<br>此通过目前操作将结构加上field放上级字段。</span>",
        "noteTips": "添加上层字段后",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "inputs": {
          "maintenanceId": null
        },
        "inputsArrToObj": true,
        "oldDynamicAttrs": [
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_1",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "_keys",
            "valueType": "StringArray",
            "defaultValue": [],
            "description": "字段列表。\n                    注意保持顺序，如果字段在对象\n                    列表中存在，那么对应的值就取\n                    作当前数组索引的值。如果字段\n                    在对象中不存在，则填充默认值。",
            "dynamicCreate": true
          },
          {
            "attr": "_defaultValue",
            "valueType": "Object",
            "defaultValue": null,
            "description": "字段不存在时填充的默认值。",
            "dynamicCreate": true
          },
          {
            "attr": "_autoReverse",
            "valueType": "Boolean",
            "defaultValue": false,
            "description": "自动识别输入反转换。\n                    如果输入的本身就是数组列表，本属性\n                    默认未勾选时，通常输出跟输入一样。\n                    注意，如果字段数量与对象中键不一样，\n                    那么会按照配置调整数据，比如减少原\n                    对象中的项，或新增项并填充默认值。\n                    因此可用来删除或增加对象列表的key。\n                    当勾选本属性时，输入的数组列表，会\n                    按照字段列表（_keys）将数组元素转成\n                    对象值，输出对象列表，等同于“数组列\n                    表转对象列表”。",
            "dynamicCreate": true
          },
          {
            "attr": "_bindEvents_0",
            "valueType": "MultiComboBox",
            "defaultValue": "*",
            "group": "bindEvents",
            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
            "dynamicCreate": true
          },
          {
            "attr": "convertFlatToTree",
            "valueType": "Boolean",
            "name": "输入扁平结构化",
            "defaultValue": false,
            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
            "dynamicCreate": true
          },
          {
            "attr": "inputKeys",
            "valueType": "ObjectArray",
            "name": "输入键组",
            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
            "dynamicCreate": true
          },
          {
            "attr": "inputValues",
            "valueType": "ObjectArray",
            "name": "输入值组",
            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
            "dynamicCreate": true
          }
        ],
        "exeWhenInput": true,
        "resetAfterInput": false,
        "stripSingleInput": false,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "output"
        ],
        "bindControlsTag": [
          "加字段输出"
        ],
        "bindControlsAttr": [
          "对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384>0>函数>a:inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "exec": false,
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "function": "transfer",
        "_keys": [
          "udsName",
          "phone",
          "udsId"
        ],
        "output": {
          "maintenanceId": null
        },
        "inputKeys": [
          "maintenanceId"
        ],
        "inputValues": [
          null
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 227105,
      "p": {
        "name": "edge",
        "displayName": "0（edge9）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@gv4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 227104
        },
        "tag": "edge9",
        "source": {
          "__i": 227104
        },
        "target": {
          "__i": 227103
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：对话框封装@内置工具函数输入，兼容调试和实际使用@1702157870384&gt;0&gt;函数&gt;a:inputs@gv4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@外层字段</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    }
  ],
  "modified": "Thu Dec 14 2023 23:52:41 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -609.40281,
    "y": -870.62723,
    "width": 592.21811,
    "height": 1686.82246
  }
}