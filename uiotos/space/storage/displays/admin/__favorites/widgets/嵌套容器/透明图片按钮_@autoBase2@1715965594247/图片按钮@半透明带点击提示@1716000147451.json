{
  "v": "7.7.5",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": false
  },
  "a": {
    "rotateAsClock": false,
    "connectActionType": null
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 74959,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_type": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_title": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_region": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_duration": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:convertFlatToTree": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue May 14 2024 22:57:20 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能（关键）"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              }
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              }
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ]
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              }
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              }
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:display",
              "name": ".display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popDirection",
              "name": ".popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBackground",
              "name": ".popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popPadding",
              "name": ".popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popWidth",
              "name": ".popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popHeight",
              "name": ".popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderColor",
              "name": ".popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderWidth",
              "name": ".popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderRadius",
              "name": ".popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popTriggerEvent",
              "name": ".popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>cbtn1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:userData",
              "name": ".userData",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "用户数据。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:output",
              "name": ".output",
              "valueType": "Object",
              "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:outputByEvent",
              "name": ".outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputs",
              "name": ".inputs",
              "valueType": "Object",
              "defaultValue": "已点击LOGO区域！",
              "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:exec",
              "name": ".exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:arrExec",
              "name": ".arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:onOutput",
              "name": ".onOutput",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "输出事件。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_type",
              "name": "._type",
              "valueType": "MessageType",
              "defaultValue": "warn",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_title",
              "name": "._title",
              "valueType": "String",
              "defaultValue": "警告",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_region",
              "name": "._region",
              "valueType": "Region",
              "defaultValue": "top",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_duration",
              "name": "._duration",
              "valueType": "PositiveNumber",
              "defaultValue": 1000,
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedWidth",
              "name": "._fixedWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 300,
              "description": "提示区域宽度。\n                    提示条或对话框的宽度。。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedHeight",
              "name": "._fixedHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 160,
              "description": "弹窗高度。\n                    注意，仅对弹窗确认选项有效。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:convertFlatToTree",
              "name": ".convertFlatToTree",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputKeys",
              "name": ".inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            },
            {
              "attr": "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputValues",
              "name": ".inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
              "group": "透明图片按钮_@autoBase2@1715965594247>0>func1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "A805BAC5-787D-4E7C-B3DD-DE609A9BE5D1"
        },
        "position": {
          "x": -65.87639,
          "y": 16.86821
        },
        "width": 59.86464,
        "height": 33.7364
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "topbottom",
        "fullscreen": "fill",
        "fullscreen.gap": 0
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "displays/develop/__favorites/widgets/嵌套容器/__封装/透明图片按钮_@autoBase2@1715965594247.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "shadowEnabled": false,
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:display": "",
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popDirection": "right",
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBackground": "white",
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popWidth": 400,
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popHeight": 300,
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderColor": "rgb(51,51,51)",
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderWidth": 0,
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popBorderRadius": 0,
        "透明图片按钮_@autoBase2@1715965594247>0>cbtn1>a:popTriggerEvent": "hover",
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:userData": [],
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:outputByEvent": true,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputs": "已点击LOGO区域！",
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:exec": false,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:arrExec": false,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_type": "warn",
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_region": "top",
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_duration": 1000,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedWidth": 300,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_fixedHeight": 160,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:convertFlatToTree": false,
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputKeys": [],
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:inputValues": [],
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramControlTag": [],
        "paramControlAttr": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "透明图片按钮_@autoBase2@1715965594247>0>func1>a:_title": "警告"
      }
    }
  ],
  "modified": "Sat May 18 2024 10:44:00 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -122.48254,
    "y": 0.00001,
    "width": 86.53847,
    "height": 33.7364
  }
}