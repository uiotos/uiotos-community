{
    "v": "7.7.5",
    "p": {
        "autoAdjustIndex": true,
        "hierarchicalRendering": false
    },
    "a": {
        "rotateAsClock": false,
        "gridAngle": 1.5708,
        "connectActionType": null,
        "fitContent": false
    },
    "d": [{
            "c": "ht.Node",
            "i": 257641,
            "p": {
                "name": "autoBase",
                "displayName": "自动底板（autoBase1）",
                "tag": "autoBase1",
                "image": null,
                "position": {
                    "x": -5,
                    "y": 3.71157
                },
                "width": 300,
                "height": 299.49074
            },
            "s": {
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "2d.movable": false,
                "interactive": true,
                "fullscreen": "fill",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left"
            }
        },
        {
            "c": "ht.Text",
            "i": 257642,
            "p": {
                "displayName": "Text（Text1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "Text1",
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -5,
                    "y": -133.476
                },
                "width": 300,
                "height": 25.11559
            },
            "s": {
                "text": "欢迎使用，请登录",
                "text.font": "12px sans-serif, Arial",
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "2d.movable": false,
                "interactive": true,
                "layout.h": "leftright",
                "layout.v": "scale",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left"
            },
            "a": {
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257643,
            "p": {
                "name": "login",
                "displayName": "login（login1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "login1",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onFormClick": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_1": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Sun Nov 26 2023 15:17:37 GMT+0800 (中国标准时间)",
                    "background": "rgba(32,37,46,0)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "fixedHeight",
                            "valueType": "PositiveNumber"
                        },
                        {
                            "attr": "ht.text",
                            "valueType": "Multiline",
                            "name": "UIText",
                            "defaultValue": "BUTTON"
                        },
                        {
                            "attr": "ht.textColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)"
                        },
                        {
                            "attr": "ht.disabled",
                            "valueType": "Boolean",
                            "name": "UIDisabled",
                            "defaultValue": false
                        },
                        {
                            "attr": "ht.font",
                            "valueType": "Font",
                            "name": "UIFont"
                        },
                        {
                            "attr": "ht.iconPosition",
                            "valueType": "Orientation",
                            "name": "UIIconPosition"
                        },
                        {
                            "attr": "ht.iconWidth",
                            "valueType": "PositiveNumber",
                            "name": "UIIconWidth"
                        },
                        {
                            "attr": "ht.iconHeight",
                            "valueType": "PositiveNumber",
                            "name": "UIIconHeight"
                        },
                        {
                            "attr": "ht.borderWidth",
                            "valueType": "PositiveNumber",
                            "defaultValue": 1,
                            "name": "UIBorderWidth"
                        },
                        {
                            "attr": "ht.borderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)",
                            "name": "UIBorderColor"
                        },
                        {
                            "attr": "ht.background",
                            "valueType": "Color",
                            "defaultValue": "rgb(55,125,255)",
                            "name": "UIBackground"
                        },
                        {
                            "attr": "ht.hoverBackground",
                            "valueType": "Color",
                            "name": "UIHoverBackground"
                        },
                        {
                            "attr": "ht.disabledBackground",
                            "valueType": "Color",
                            "name": "UIDisabledBackground"
                        },
                        {
                            "attr": "ht.borderRadius",
                            "valueType": "Number",
                            "name": "UIBorderRadius",
                            "defaultValue": 3
                        },
                        {
                            "attr": "clicked",
                            "valueType": "Function",
                            "name": "UIOnClick",
                            "extraInfo": {
                                "arguments": [
                                    "event",
                                    "data",
                                    "view"
                                ]
                            },
                            "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}"
                        },
                        {
                            "attr": "onFormClick",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)"
                        },
                        {
                            "attr": "iconPath",
                            "valueType": "Image",
                            "description": "按钮图标。\n<br>默认为空，用于按钮图标文字一起显示。"
                        },
                        {
                            "attr": "iconGap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 5,
                            "description": "按钮与文字间距 。"
                        },
                        {
                            "attr": "iconType",
                            "valueType": "Level",
                            "defaultValue": 1,
                            "description": "图标类型（备用，暂无效）。"
                        },
                        {
                            "attr": "darkStyle",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "bindTabview",
                            "valueType": "StringArray",
                            "defaultValue": [
                                "tabview",
                                "0"
                            ],
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "defaultValue": [
                                "bus1"
                            ]
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray",
                            "defaultValue": [
                                "contentSend"
                            ]
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "defaultValue": [
                                null
                            ],
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_1",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
                    "width": 80,
                    "height": 42,
                    "boundExtend": 2,
                    "fitSize": true,
                    "interactive": true,
                    "disableSelectedBorder": true,
                    "pixelPerfect": false,
                    "attachStyle": "close",
                    "comps": [{
                        "type": "components/develop/uiotos/base/button.json",
                        "displayName": "button",
                        "rect": [
                            0,
                            0,
                            80,
                            42
                        ],
                        "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
                        "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
                        "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
                        "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
                        "text": {
                            "func": "attr@ht.text",
                            "value": "BUTTON"
                        },
                        "disabled": {
                            "func": "attr@ht.disabled",
                            "value": false
                        },
                        "font": {
                            "func": "attr@ht.font",
                            "value": "12px arial, sans-serif"
                        },
                        "icon": {
                            "func": "attr@iconPath"
                        },
                        "iconPosition": {
                            "func": "attr@ht.iconPosition",
                            "value": "left"
                        },
                        "iconWidth": {
                            "func": "attr@ht.iconWidth",
                            "value": 20
                        },
                        "iconHeight": {
                            "func": "attr@ht.iconHeight",
                            "value": 20
                        },
                        "iconGap": {
                            "func": "attr@iconGap",
                            "value": 5
                        },
                        "textColor": {
                            "func": "attr@ht.textColor",
                            "value": "rgb(255,255,255)"
                        },
                        "borderWidth": {
                            "func": "attr@ht.borderWidth",
                            "value": 0
                        },
                        "borderColor": {
                            "func": "attr@ht.borderColor",
                            "value": null
                        },
                        "disabledBorderColor": "rgba(235,235,235,0)",
                        "background": {
                            "func": "attr@ht.background",
                            "value": "rgb(55,125,255)"
                        },
                        "disabledBackground": {
                            "func": "attr@ht.disabledBackground",
                            "value": "#fafafa"
                        },
                        "borderRadius": {
                            "func": "attr@ht.borderRadius",
                            "value": "0"
                        },
                        "handleClick": {
                            "func": "attr@clicked"
                        },
                        "getValue": "__ht__function(o){var _=a(x,o);return _===hl&&T.properties&&(o=T.properties[o])?o.defaultValue:_}",
                        "getColor": "__ht__function(o,_){return IN(!0===_?o:x.getValue(o))}"
                    }],
                    "uuid": "6227001F-8CEC-461A-A470-0957B3F49114"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -5,
                    "y": 24.953
                },
                "width": 297.42965,
                "height": 35
            },
            "s": {
                "interactive": true,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "label.opacity": 0,
                "2d.movable": false,
                "layout.h": "leftright",
                "layout.v": "scale",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left"
            },
            "a": {
                "ht.text": "登录",
                "ht.background": "rgb(51,153,255)",
                "ht.borderRadius": 3,
                "ht.borderWidth": 0,
                "ht.iconPosition": "left",
                "ht.iconHeight": 50,
                "ht.iconWidth": 58,
                "ht.font": "12px Microsoft YaHei",
                "ht.disabled": false,
                "ht.borderColor": null,
                "ht.textColor": "rgb(247,247,247)",
                "ht.onClick": "__ht__function(event, data, view) {let login_pwd = data.dm().getDataByTag('login_pwd')\r\nlet login_user = data.dm().getDataByTag('login_user')\r\ninputErrorHint({\r\n    node:[login_pwd,login_user],\r\n    timeout:500\r\n})}",
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "fixedHeight": 35,
                "paramControlTag": [
                    null,
                    null
                ],
                "paramControlAttr": [
                    "onFormClick",
                    null
                ],
                "bindControlsTag": [
                    "api1",
                    "login1"
                ],
                "bindControlsAttr": [
                    "requesting",
                    "ht.text"
                ],
                "bindControlsVal": [
                    null,
                    "正在登录..."
                ],
                "symbol": "symbols/develop/uiotos/base/button.json",
                "oldDynamicAttrs": [{
                        "attr": "_bindEvents_0",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_bindEvents_1",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    }
                ],
                "_bindEvents_0": "*",
                "_bindEvents_1": "*"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257644,
            "p": {
                "name": "edge",
                "displayName": "0（edge8）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：requesting@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：onFormClick@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257643
                },
                "tag": "edge8",
                "source": {
                    "__i": 257643
                },
                "target": {
                    "__i": 257658
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "ortho",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 21,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：requesting@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：onFormClick@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257645,
            "p": {
                "name": "edge",
                "displayName": "1（edge14）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：ht.text@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：正在登录...</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257643
                },
                "tag": "edge14",
                "source": {
                    "__i": 257643
                },
                "target": {
                    "__i": 257643
                }
            },
            "s": {
                "label": "",
                "edge.color": "#FF7C7C",
                "edge.width": 3,
                "edge.type": "extend.east",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "#FF7C7C",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 1,
                "label.position": 4,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true,
                "edge.extend": 10
            },
            "a": {
                "index": 1,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：ht.text@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：正在登录...</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257646,
            "p": {
                "name": "input",
                "displayName": "input（input1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "input1",
                "dataBindings": {
                    "a": {
                        "value": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "instantTrigger": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onChange": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "initialTrigger": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onEnter": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "readOnly": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Fri Feb 16 2024 09:48:58 GMT+0800 (中国标准时间)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "group": "功能（关键）",
                            "description": "组件源（备选）。\n<br>当组件源（image）为非字符串格式，显示\n<br>[Object]时，可以通过这里备选地址，双击\n<br>打开组件配置。"
                        },
                        {
                            "attr": "fixedHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 35,
                            "description": "固定高度。\n<br>部分组件比如下拉框以及这里的输入框，拖拽或布局时，\n<br>高度默认会保持不变，只是宽度能够变化。高度可以在\n<br>当前页面全局自定义，也能通过当前属性对当个组件设\n<br>定。全局设置为页面的公共属性组中的“组件默认固定高\n<br>度”属性。"
                        },
                        {
                            "attr": "activeBorderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "激活时边框颜色。\n<br>通常是选中输入状态时的边框色。"
                        },
                        {
                            "attr": "background",
                            "valueType": "Color",
                            "description": "背景颜色。"
                        },
                        {
                            "attr": "readOnlyBackground",
                            "valueType": "Color",
                            "defaultValue": "rgb(247,247,247)",
                            "description": "只读时的背景颜色。\n<br>注意，区别于禁用（暂未开放配置）。"
                        },
                        {
                            "attr": "iconPath",
                            "valueType": "Image",
                            "defaultValue": "symbols/demo/uiotos/icons/light/search.json",
                            "description": "图标地址。\n<br>输入框默左侧为“搜索”图标。"
                        },
                        {
                            "attr": "iconColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(213,213,213)",
                            "description": "输入框图标颜色。\n<br>对于内置部件中通过工具转换成的图标，\n<br>为支持动态修改背景颜色的矢量形式。"
                        },
                        {
                            "attr": "iconType",
                            "valueType": "Level",
                            "defaultValue": 1,
                            "description": "图标类型。\n<br>相同名称图标的不同风格，已弃用，\n<br>当前属性目前作为备用。"
                        },
                        {
                            "attr": "iconSize",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                20,
                                15
                            ],
                            "description": "图标尺寸。\n<br>数组形式，索引依次为宽度、高度值。"
                        },
                        {
                            "attr": "iconTextGap",
                            "valueType": "Number",
                            "defaultValue": 5,
                            "description": "图标文字间距。"
                        },
                        {
                            "attr": "hoverIcon",
                            "valueType": "Image",
                            "description": "鼠标滑过时的图标。"
                        },
                        {
                            "attr": "borderRadius",
                            "valueType": "Number",
                            "defaultValue": 3,
                            "description": "边框圆角。"
                        },
                        {
                            "attr": "borderWidth",
                            "valueType": "Number",
                            "defaultValue": 1,
                            "description": "边框宽度。"
                        },
                        {
                            "attr": "borderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(213,213,213)",
                            "description": "边框颜色。"
                        },
                        {
                            "attr": "font",
                            "valueType": "Font",
                            "description": "字体。"
                        },
                        {
                            "attr": "readOnly",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否只读。"
                        },
                        {
                            "attr": "placeholder",
                            "valueType": "Object",
                            "defaultValue": "请输入",
                            "description": "未输入时默认占位符文字。"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,0,0)",
                            "description": "文字颜色。"
                        },
                        {
                            "attr": "labelColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,0,0)",
                            "description": "标签文字颜色。"
                        },
                        {
                            "attr": "labelText",
                            "valueType": "String",
                            "defaultValue": "标签",
                            "description": "标签文字。"
                        },
                        {
                            "attr": "gap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "description": "标签与组件的间距。\n<br>注意，仅在标签内嵌模式（layoutVertical）下，\n<br>改配置参数才有用。"
                        },
                        {
                            "attr": "layoutVertical",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "标签与组件的布局模式。\n<br>水平左右，或者垂直上下。"
                        },
                        {
                            "attr": "labelEmbeded",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "标签是否内嵌。\n<br>不内嵌时，组件的宽度不包含标签。\n<br>选择内嵌时，组件的宽度包含标签文字宽度。"
                        },
                        {
                            "attr": "type",
                            "valueType": "FormType",
                            "defaultValue": "text",
                            "description": "输入框表单类型。\n<br>包括密码、文本等类型。"
                        },
                        {
                            "attr": "instantTrigger",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "是否即时触发。\n<br>勾选后，输入时就会对外触发onChange变化事件。"
                        },
                        {
                            "attr": "initialTrigger",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "初始触发连线操作。\n<br>默认不勾选，勾选后初始加载值时，如果对外有连线，\n<br>并且初始值为非空时，也会触发对外的赋值连线操作。"
                        },
                        {
                            "attr": "emptyTrigger",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "value",
                            "valueType": "Object",
                            "defaultValue": "",
                            "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls",
                            "description": "操作的目标组件（标签）。\n<br>连线A → B，那么B就是目标组件。"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray",
                            "description": "操作目标组件的属性。\n<br>比如A.x→B.y时，x就是当前的关联\n<br>属性，y即为操作属性，A的x属性值\n<br>通过连线赋值给B的y属性。"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray",
                            "description": "操作关联的来源组件（标签）。\n<br>连线A → B，那么A就是来源组件。\n<br>注意，为空不用填或者填写A的标\n<br>签效果一样，也可以填入其他组件\n<br>的标签（非正常操作）。"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray",
                            "description": "关联属性。\n<br>关联的来源组件的指定属性，比如\n<br>A.x→B.y时，x就是当前的关联属性，\n<br>y为操作属性，A的x属性值通过连线\n<br>赋值给B的y属性。"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form"
                                ]
                            },
                            "description": "操作过滤函数。\n<br>所有连线对外操作执行之前，都会经过该函数\n<br>过滤处理，通常无需操作。可以做自定义逻辑。\n<br>其中对相应索引index下直接return返回undefined\n<br>时，将忽略掉指定索引连线的执行触发。"
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onChange",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            },
                            "description": "变化事件函数。\n<br>默认为内容改变才触发，当勾选即时触发\n<br>（instantTrigger）时，输入时就会触发本\n<br>事件。"
                        },
                        {
                            "attr": "onEnter",
                            "valueType": "Function",
                            "description": "回车事件。\n<br>输入完毕后回车触发，并且传入当前值。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "snapshotURL": "symbols/admin/uiotos/icons/snapshot/input.json",
                    "renderHTML": "__ht__function(data, gv, cache) {return __input_ui(data, gv, cache);}",
                    "width": 180,
                    "height": 35,
                    "scrollable": true,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "3B8A880F-0A7C-4054-B61A-A44061EC7524"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -5,
                    "y": -91.41741
                },
                "width": 296.14446,
                "height": 35
            },
            "s": {
                "interactive": true,
                "pixelPerfect": false,
                "label": "",
                "label.opacity": 0,
                "2d.movable": false,
                "layout.h": "leftright",
                "layout.v": "scale",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left"
            },
            "a": {
                "background": "rgba(226,250,87,0)",
                "borderWidth": 1,
                "borderColor": "rgba(51,153,255,0.5)",
                "radius": 0,
                "placeholderText": "用户名",
                "color": "rgb(255,255,255)",
                "value": "develop",
                "iconPath": "symbols/demo/uiotos/icons/light/user.json",
                "gap": 0,
                "labelText": "",
                "fixedHeight": 35,
                "bindEvents": [
                    "*",
                    "onChange",
                    "onClear",
                    "onEnter"
                ],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "symbol": "symbols/develop/uiotos/base/input-ui.json",
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    "value"
                ],
                "bindControlsTag": [
                    "api1"
                ],
                "bindControlsAttr": [
                    "paramValues"
                ],
                "bindControlsVal": [
                    0
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onChange",
                    "onClear",
                    "onEnter"
                ],
                "_bindEvents_0": "*"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257647,
            "p": {
                "name": "edge",
                "displayName": "0（edge7'）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：paramValues@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：develop;iotos1234...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：develop</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257646
                },
                "tag": "edge7'",
                "source": {
                    "__i": 257646
                },
                "target": {
                    "__i": 257658
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "ortho",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 3,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：paramValues@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：develop;iotos1234...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：develop</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257648,
            "p": {
                "name": "register",
                "displayName": "register（register1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "register1",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onFormClick": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "ht.text": {
                            "id": "iotos.form",
                            "alias": "",
                            "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
                            "idinfo": "",
                            "isTplBinded": false
                        },
                        "symbol": {
                            "id": "iotos.form",
                            "alias": "",
                            "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
                            "idinfo": "",
                            "isTplBinded": false
                        }
                    }
                },
                "image": {
                    "modified": "Wed Mar 13 2024 21:00:55 GMT+0800 (中国标准时间)",
                    "background": "rgba(32,37,46,0)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "fixedHeight",
                            "valueType": "PositiveNumber",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "ht.text",
                            "valueType": "Multiline",
                            "name": "UIText",
                            "defaultValue": "BUTTON"
                        },
                        {
                            "attr": "ht.textColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)"
                        },
                        {
                            "attr": "ht.disabled",
                            "valueType": "Boolean",
                            "name": "UIDisabled",
                            "defaultValue": false
                        },
                        {
                            "attr": "ht.font",
                            "valueType": "Font",
                            "name": "UIFont"
                        },
                        {
                            "attr": "ht.iconPosition",
                            "valueType": "Orientation",
                            "name": "UIIconPosition"
                        },
                        {
                            "attr": "ht.iconWidth",
                            "valueType": "PositiveNumber",
                            "name": "UIIconWidth"
                        },
                        {
                            "attr": "ht.iconHeight",
                            "valueType": "PositiveNumber",
                            "name": "UIIconHeight"
                        },
                        {
                            "attr": "ht.borderWidth",
                            "valueType": "PositiveNumber",
                            "defaultValue": 1,
                            "name": "UIBorderWidth"
                        },
                        {
                            "attr": "ht.borderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)",
                            "name": "UIBorderColor"
                        },
                        {
                            "attr": "ht.background",
                            "valueType": "Color",
                            "defaultValue": "rgb(55,125,255)",
                            "name": "UIBackground"
                        },
                        {
                            "attr": "ht.hoverBackground",
                            "valueType": "Color",
                            "name": "UIHoverBackground"
                        },
                        {
                            "attr": "ht.activeBackground",
                            "valueType": "Color",
                            "name": "UIActiveBackground"
                        },
                        {
                            "attr": "ht.disabledBackground",
                            "valueType": "Color",
                            "name": "UIDisabledBackground"
                        },
                        {
                            "attr": "ht.borderRadius",
                            "valueType": "Number",
                            "name": "UIBorderRadius",
                            "defaultValue": 3
                        },
                        {
                            "attr": "clicked",
                            "valueType": "Function",
                            "name": "UIOnClick",
                            "extraInfo": {
                                "arguments": [
                                    "event",
                                    "data",
                                    "view"
                                ]
                            },
                            "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}"
                        },
                        {
                            "attr": "onFormClick",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)"
                        },
                        {
                            "attr": "iconPath",
                            "valueType": "Image",
                            "description": "按钮图标。\n<br>默认为空，用于按钮图标文字一起显示。"
                        },
                        {
                            "attr": "iconGap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 5,
                            "description": "按钮与文字间距 。"
                        },
                        {
                            "attr": "iconType",
                            "valueType": "Level",
                            "defaultValue": 1,
                            "description": "图标类型（备用，暂无效）。"
                        },
                        {
                            "attr": "darkStyle",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "bindTabview",
                            "valueType": "StringArray",
                            "defaultValue": [
                                "tab1",
                                "0"
                            ],
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "ObjectArray",
                            "defaultValue": []
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "ObjectArray",
                            "defaultValue": []
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
                    "width": 80,
                    "height": 42,
                    "boundExtend": 2,
                    "fitSize": true,
                    "interactive": true,
                    "disableSelectedBorder": true,
                    "pixelPerfect": false,
                    "attachStyle": "close",
                    "comps": [{
                        "type": "components/develop/uiotos/base/button.json",
                        "displayName": "button",
                        "rect": [
                            0,
                            0,
                            80,
                            42
                        ],
                        "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
                        "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
                        "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
                        "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
                        "text": {
                            "func": "attr@ht.text",
                            "value": "BUTTON"
                        },
                        "disabled": {
                            "func": "attr@ht.disabled",
                            "value": false
                        },
                        "font": {
                            "func": "attr@ht.font",
                            "value": "12px arial, sans-serif"
                        },
                        "icon": {
                            "func": "attr@iconPath"
                        },
                        "iconPosition": {
                            "func": "attr@ht.iconPosition",
                            "value": "left"
                        },
                        "iconWidth": {
                            "func": "attr@ht.iconWidth",
                            "value": 20
                        },
                        "iconHeight": {
                            "func": "attr@ht.iconHeight",
                            "value": 20
                        },
                        "iconGap": {
                            "func": "attr@iconGap",
                            "value": 5
                        },
                        "textColor": {
                            "func": "attr@ht.textColor",
                            "value": "rgb(255,255,255)"
                        },
                        "borderWidth": {
                            "func": "attr@ht.borderWidth",
                            "value": 0
                        },
                        "borderColor": {
                            "func": "attr@ht.borderColor",
                            "value": null
                        },
                        "disabledBorderColor": "rgba(235,235,235,0)",
                        "background": {
                            "func": "attr@ht.background",
                            "value": "rgb(55,125,255)"
                        },
                        "hoverBackground": {
                            "func": "attr@ht.hoverBackground"
                        },
                        "activeBackground": {
                            "func": "attr@ht.activeBackground"
                        },
                        "disabledBackground": {
                            "func": "attr@ht.disabledBackground",
                            "value": "#fafafa"
                        },
                        "borderRadius": {
                            "func": "attr@ht.borderRadius",
                            "value": "0"
                        },
                        "handleClick": {
                            "func": "attr@clicked"
                        },
                        "getValue": "__ht__function(o){var _=a(x,o);return _===hl&&T.properties&&(o=T.properties[o])?o.defaultValue:_}",
                        "getColor": "__ht__function(o,_){return IN(!0===_?o:x.getValue(o))}"
                    }],
                    "uuid": "87F785F7-6F20-46DB-8BB0-EC0979C7DA6E"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -5,
                    "y": 83.13822
                },
                "width": 296.14446,
                "height": 35
            },
            "s": {
                "interactive": true,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "label.opacity": 0,
                "2d.movable": false,
                "layout.h": "leftright",
                "layout.v": "scale",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "[register1] 组件register（register1）索引为0的连线\n，关联自身属性ht.text操作目标组件bus2的属性content\nSend，正在操作数组类型的属性，是否忘记在当前连线的\n静态解析属性（bindControlsVa....（内容过多无法展示\n）                                                "
            },
            "a": {
                "ht.text": "注册",
                "ht.background": "rgba(51,153,255,0)",
                "ht.borderRadius": 3,
                "ht.borderWidth": 1,
                "ht.iconPosition": "left",
                "ht.iconHeight": 50,
                "ht.iconWidth": 58,
                "ht.font": "12px Microsoft YaHei",
                "ht.disabled": false,
                "ht.borderColor": "rgb(51,153,255)",
                "ht.textColor": "rgb(247,247,247)",
                "ht.onClick": "__ht__function(event, data, view) {window.open('https://sys.aiotos.net/accounts/register/')\r\nreturn\r\ndata.dm().getDataByTag('0').s('2d.visible',false)\r\ndata.dm().getDataByTag('1').s('2d.visible',true)}",
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "fixedHeight": 35,
                "paramControlTag": [
                    null,
                    null
                ],
                "paramControlAttr": [
                    "ht.text",
                    null
                ],
                "bindControlsTag": [
                    "bus2",
                    "bus2"
                ],
                "bindControlsAttr": [
                    "contentSend",
                    "triggerSend"
                ],
                "bindControlsVal": [
                    null,
                    null
                ],
                "symbol": "symbols/develop/uiotos/base/button.json",
                "oldDynamicAttrs": [{
                        "attr": "_bindEvents_0",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_bindEvents_1",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    }
                ],
                "bindTabview": [
                    "tabview",
                    "0"
                ]
            }
        },
        {
            "c": "ht.Edge",
            "i": 257649,
            "p": {
                "name": "edge",
                "displayName": "0（edge5'）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：contentSend@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：ht.text@register1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：注册</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257648
                },
                "tag": "edge5'",
                "source": {
                    "__i": 257648
                },
                "target": {
                    "__i": 257656
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "flex",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：contentSend@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：ht.text@register1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：注册</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257650,
            "p": {
                "name": "edge",
                "displayName": "1（edge5）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257648
                },
                "tag": "edge5",
                "source": {
                    "__i": 257648
                },
                "target": {
                    "__i": 257656
                }
            },
            "s": {
                "label": "",
                "edge.color": "#FF7C7C",
                "edge.type": "flex",
                "edge.gap": 16,
                "edge.3d": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#FF7C7C",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 1,
                "edge.width": 3
            },
            "a": {
                "index": 1,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257651,
            "p": {
                "name": "input",
                "displayName": "input（input2）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "input2",
                "dataBindings": {
                    "a": {
                        "value": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "instantTrigger": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onChange": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "initialTrigger": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onEnter": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "readOnly": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Fri Feb 16 2024 09:48:58 GMT+0800 (中国标准时间)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "group": "功能（关键）",
                            "description": "组件源（备选）。\n<br>当组件源（image）为非字符串格式，显示\n<br>[Object]时，可以通过这里备选地址，双击\n<br>打开组件配置。"
                        },
                        {
                            "attr": "fixedHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 35,
                            "description": "固定高度。\n<br>部分组件比如下拉框以及这里的输入框，拖拽或布局时，\n<br>高度默认会保持不变，只是宽度能够变化。高度可以在\n<br>当前页面全局自定义，也能通过当前属性对当个组件设\n<br>定。全局设置为页面的公共属性组中的“组件默认固定高\n<br>度”属性。"
                        },
                        {
                            "attr": "activeBorderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "激活时边框颜色。\n<br>通常是选中输入状态时的边框色。"
                        },
                        {
                            "attr": "background",
                            "valueType": "Color",
                            "description": "背景颜色。"
                        },
                        {
                            "attr": "readOnlyBackground",
                            "valueType": "Color",
                            "defaultValue": "rgb(247,247,247)",
                            "description": "只读时的背景颜色。\n<br>注意，区别于禁用（暂未开放配置）。"
                        },
                        {
                            "attr": "iconPath",
                            "valueType": "Image",
                            "defaultValue": "symbols/demo/uiotos/icons/light/search.json",
                            "description": "图标地址。\n<br>输入框默左侧为“搜索”图标。"
                        },
                        {
                            "attr": "iconColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(213,213,213)",
                            "description": "输入框图标颜色。\n<br>对于内置部件中通过工具转换成的图标，\n<br>为支持动态修改背景颜色的矢量形式。"
                        },
                        {
                            "attr": "iconType",
                            "valueType": "Level",
                            "defaultValue": 1,
                            "description": "图标类型。\n<br>相同名称图标的不同风格，已弃用，\n<br>当前属性目前作为备用。"
                        },
                        {
                            "attr": "iconSize",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                20,
                                15
                            ],
                            "description": "图标尺寸。\n<br>数组形式，索引依次为宽度、高度值。"
                        },
                        {
                            "attr": "iconTextGap",
                            "valueType": "Number",
                            "defaultValue": 5,
                            "description": "图标文字间距。"
                        },
                        {
                            "attr": "hoverIcon",
                            "valueType": "Image",
                            "description": "鼠标滑过时的图标。"
                        },
                        {
                            "attr": "borderRadius",
                            "valueType": "Number",
                            "defaultValue": 3,
                            "description": "边框圆角。"
                        },
                        {
                            "attr": "borderWidth",
                            "valueType": "Number",
                            "defaultValue": 1,
                            "description": "边框宽度。"
                        },
                        {
                            "attr": "borderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(213,213,213)",
                            "description": "边框颜色。"
                        },
                        {
                            "attr": "font",
                            "valueType": "Font",
                            "description": "字体。"
                        },
                        {
                            "attr": "readOnly",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否只读。"
                        },
                        {
                            "attr": "placeholder",
                            "valueType": "Object",
                            "defaultValue": "请输入",
                            "description": "未输入时默认占位符文字。"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,0,0)",
                            "description": "文字颜色。"
                        },
                        {
                            "attr": "labelColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,0,0)",
                            "description": "标签文字颜色。"
                        },
                        {
                            "attr": "labelText",
                            "valueType": "String",
                            "defaultValue": "标签",
                            "description": "标签文字。"
                        },
                        {
                            "attr": "gap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "description": "标签与组件的间距。\n<br>注意，仅在标签内嵌模式（layoutVertical）下，\n<br>改配置参数才有用。"
                        },
                        {
                            "attr": "layoutVertical",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "标签与组件的布局模式。\n<br>水平左右，或者垂直上下。"
                        },
                        {
                            "attr": "labelEmbeded",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "标签是否内嵌。\n<br>不内嵌时，组件的宽度不包含标签。\n<br>选择内嵌时，组件的宽度包含标签文字宽度。"
                        },
                        {
                            "attr": "type",
                            "valueType": "FormType",
                            "defaultValue": "text",
                            "description": "输入框表单类型。\n<br>包括密码、文本等类型。"
                        },
                        {
                            "attr": "instantTrigger",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "是否即时触发。\n<br>勾选后，输入时就会对外触发onChange变化事件。"
                        },
                        {
                            "attr": "initialTrigger",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "初始触发连线操作。\n<br>默认不勾选，勾选后初始加载值时，如果对外有连线，\n<br>并且初始值为非空时，也会触发对外的赋值连线操作。"
                        },
                        {
                            "attr": "emptyTrigger",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "value",
                            "valueType": "Object",
                            "defaultValue": "",
                            "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls",
                            "description": "操作的目标组件（标签）。\n<br>连线A → B，那么B就是目标组件。"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray",
                            "description": "操作目标组件的属性。\n<br>比如A.x→B.y时，x就是当前的关联\n<br>属性，y即为操作属性，A的x属性值\n<br>通过连线赋值给B的y属性。"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray",
                            "description": "操作关联的来源组件（标签）。\n<br>连线A → B，那么A就是来源组件。\n<br>注意，为空不用填或者填写A的标\n<br>签效果一样，也可以填入其他组件\n<br>的标签（非正常操作）。"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray",
                            "description": "关联属性。\n<br>关联的来源组件的指定属性，比如\n<br>A.x→B.y时，x就是当前的关联属性，\n<br>y为操作属性，A的x属性值通过连线\n<br>赋值给B的y属性。"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form"
                                ]
                            },
                            "description": "操作过滤函数。\n<br>所有连线对外操作执行之前，都会经过该函数\n<br>过滤处理，通常无需操作。可以做自定义逻辑。\n<br>其中对相应索引index下直接return返回undefined\n<br>时，将忽略掉指定索引连线的执行触发。"
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onChange",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            },
                            "description": "变化事件函数。\n<br>默认为内容改变才触发，当勾选即时触发\n<br>（instantTrigger）时，输入时就会触发本\n<br>事件。"
                        },
                        {
                            "attr": "onEnter",
                            "valueType": "Function",
                            "description": "回车事件。\n<br>输入完毕后回车触发，并且传入当前值。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "snapshotURL": "symbols/admin/uiotos/icons/snapshot/input.json",
                    "renderHTML": "__ht__function(data, gv, cache) {return __input_ui(data, gv, cache);}",
                    "width": 180,
                    "height": 35,
                    "scrollable": true,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "3B8A880F-0A7C-4054-B61A-A44061EC7524"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -5,
                    "y": -33.23221
                },
                "width": 296.14446,
                "height": 35
            },
            "s": {
                "interactive": true,
                "label": "",
                "label.opacity": 0,
                "2d.movable": false,
                "layout.h": "leftright",
                "layout.v": "scale",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "[input2] 属性background为颜色类型且为透明，且像素 \n精确属性（pixelPerfect）有勾选，这会导致透明区域无\n法点击选中，从而无法触发交互事件！可以尝试展开完整\n属性并去掉像素精确的勾选                          "
            },
            "a": {
                "background": "rgba(226,250,87,0)",
                "borderWidth": 1,
                "borderColor": "rgba(51,153,255,0.5)",
                "radius": 0,
                "placeholderText": "密码",
                "color": "rgb(255,255,255)",
                "password": true,
                "value": "iotos123456",
                "iconPath": "symbols/demo/uiotos/icons/light/lock.json",
                "gap": 0,
                "labelText": "",
                "type": "password",
                "fixedHeight": 35,
                "bindEvents": [
                    "*",
                    "onChange",
                    "onClear",
                    "onEnter"
                ],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "symbol": "symbols/develop/uiotos/base/input-ui.json",
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    "value"
                ],
                "bindControlsTag": [
                    "api1"
                ],
                "bindControlsAttr": [
                    "paramValues"
                ],
                "bindControlsVal": [
                    1
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onChange",
                    "onClear",
                    "onEnter"
                ],
                "_bindEvents_0": "*"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257652,
            "p": {
                "name": "edge",
                "displayName": "0（edge6'）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：paramValues@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：develop;iotos1234...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：iotos123456</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257651
                },
                "tag": "edge6'",
                "source": {
                    "__i": 257651
                },
                "target": {
                    "__i": 257658
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "flex",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：paramValues@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：develop;iotos1234...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@input2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：iotos123456</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257653,
            "p": {
                "name": "bt",
                "displayName": "普通按钮 v2（忘记密码）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "忘记密码",
                "dataBindings": {
                    "a": {
                        "text": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onFormClick": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    },
                    "p": {
                        "tag": {
                            "id": "iotos.form",
                            "alias": "",
                            "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
                            "idinfo": "",
                            "isTplBinded": false
                        }
                    }
                },
                "image": {
                    "modified": "Wed Mar 20 2024 10:22:46 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "fixedHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 35,
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "shadowBorder",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                0,
                                0,
                                8
                            ],
                            "description": ""
                        },
                        {
                            "attr": "shadowColor",
                            "valueType": "Color",
                            "defaultValue": "rgba(102,102,102,0.2)"
                        },
                        {
                            "attr": "shadowEnabled",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "text",
                            "valueType": "Multiline",
                            "defaultValue": "Button"
                        },
                        {
                            "attr": "background",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgba(55,125,255,0.9)"
                            ],
                            "description": "背景颜色，数组类型。\n<br>索引0为默认背景颜色，\n<br>索引1为鼠标划过时的背景颜色。"
                        },
                        {
                            "attr": "activeBackground",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(50,99,250)",
                                "rgba(55,125,255,0.9)"
                            ],
                            "description": "按下背景颜色。\n<br>索引0未鼠标按下时的背景颜色，\n<br>索引1暂未用，备用。"
                        },
                        {
                            "attr": "textColor",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(255,255,255)"
                            ]
                        },
                        {
                            "attr": "activeTextColor",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "white",
                                "white"
                            ]
                        },
                        {
                            "attr": "textFont",
                            "valueType": "Font",
                            "defaultValue": "12px sans-serif, Arial"
                        },
                        {
                            "attr": "radius",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                3,
                                3,
                                3,
                                3
                            ]
                        },
                        {
                            "attr": "borderWidth",
                            "valueType": "PositiveNumber",
                            "defaultValue": 1
                        },
                        {
                            "attr": "bindTabview",
                            "valueType": "String",
                            "defaultValue": "tab1"
                        },
                        {
                            "attr": "darkStyle",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "用户数据。"
                        },
                        {
                            "attr": "onFormClick",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            }
                        }
                    ],
                    "snapshotURL": "symbols/develop/uiotos/base/button.png",
                    "renderHTML": "__ht__function(data, gv, cache) {return __button_ui(data,gv,cache);}",
                    "width": 75,
                    "height": 35,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "C700AD1B-74A7-456F-BA1E-84490D876EA1"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": 80.3073,
                    "y": 136.66038
                },
                "width": 124.24471,
                "height": 35
            },
            "s": {
                "label.opacity": 0,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "layout.h": "leftright",
                "layout.v": "scale",
                "2d.movable": false,
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "[忘记密码] 组件普通按钮 v2（忘记密码）索引为0的连 \n线，关联自身属性tag操作目标组件bus3的属性contentSe\nnd，正在操作数组类型的属性，是否忘记在当前连线的静\n态解析属性（bindControlsVal）中设置要操作的索.... \n（内容过多无法展示）                              ",
                "interactive": true
            },
            "a": {
                "icon-background": "rgb(255,255,255)",
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "borderWidth": 0,
                "background": [],
                "activeBackground": [],
                "textColor": [
                    "#60ACFC",
                    "rgb(51,153,255)"
                ],
                "text": "忘记密码？点击找回",
                "activeTextColor": [
                    "rgb(55,125,255)",
                    "rgb(55,125,255)"
                ],
                "paramControlTag": [
                    null,
                    null
                ],
                "paramControlAttr": [
                    "tag",
                    null
                ],
                "bindControlsTag": [
                    "bus3",
                    "bus3"
                ],
                "bindControlsAttr": [
                    "contentSend",
                    "triggerSend"
                ],
                "bindControlsVal": [
                    null,
                    null
                ],
                "symbol": "symbols/develop/uiotos/base/button-ui.json",
                "oldDynamicAttrs": [{
                        "attr": "_bindEvents_0",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_bindEvents_1",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    }
                ]
            }
        },
        {
            "c": "ht.Edge",
            "i": 257654,
            "p": {
                "name": "edge",
                "displayName": "0（edge6）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：contentSend@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：tag@忘记密码</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：忘记密码</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>",
                "parent": {
                    "__i": 257653
                },
                "tag": "edge6",
                "source": {
                    "__i": 257653
                },
                "target": {
                    "__i": 257657
                }
            },
            "s": {
                "label": "",
                "edge.color": "#72AE61",
                "edge.type": "flex",
                "edge.gap": 16,
                "edge.3d": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#72AE61",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 14,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：contentSend@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：tag@忘记密码</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：忘记密码</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257655,
            "p": {
                "name": "edge",
                "displayName": "1（edge7）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>",
                "parent": {
                    "__i": 257653
                },
                "tag": "edge7",
                "source": {
                    "__i": 257653
                },
                "target": {
                    "__i": 257657
                }
            },
            "s": {
                "label": "",
                "edge.color": "#97F15B",
                "edge.type": "flex",
                "edge.gap": 16,
                "edge.3d": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#97F15B",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 1
            },
            "a": {
                "index": 1,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 257656,
            "p": {
                "name": "bus",
                "displayName": "事件总线（bus2）",
                "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
                "tag": "bus2",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "triggerSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "callerRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "waitingRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onPostMessage": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Fri Feb 23 2024 10:49:05 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "addressLocal",
                            "valueType": "Object",
                            "description": "收发器自身地址，默认为当前收发器的全局标签（topicSend发送主题属性也如此）。",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "mode",
                            "valueType": "EventBusMode",
                            "defaultValue": "both",
                            "description": "三种模式选择，包括\n接收器、发送器、收发器\n"
                        },
                        {
                            "attr": "callRecv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "收发器背景颜色"
                        },
                        {
                            "attr": "call.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,199,7)",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "recv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "#FF7C7C",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "addrsRemote",
                            "valueType": "ObjectArray",
                            "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
                            "group": "send",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicSend",
                            "valueType": "Object",
                            "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。"
                        },
                        {
                            "attr": "contentSend",
                            "valueType": "Object",
                            "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。"
                        },
                        {
                            "attr": "triggerSend",
                            "valueType": "Boolean",
                            "description": "执行发送",
                            "defaultValue": false
                        },
                        {
                            "attr": "triggerInit",
                            "valueType": "Boolean",
                            "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送"
                        },
                        {
                            "attr": "cacheDisabled",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否禁止缓存队列。\n<br>默认情况下，发送器发送的内容会追加到全局\n<br>异步队列中，当其他接收器动态初始化启动接\n<br>收时，当前发送存放到队列中的数据，会被接\n<br>收处理。\n<br>实现对话框内嵌接收器后启动并响应此前先发\n<br>送的消息，不会导致因为发送执行和启动接收\n<br>先后顺序不一致导致接收不到的问题。\n<br>勾选本属性，将禁止默认追加到缓存队列，可\n<br>以避免某些误操作。"
                        },
                        {
                            "attr": "addrsWhiteList",
                            "valueType": "ObjectArray",
                            "group": "recv",
                            "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsWhiteList",
                            "valueType": "ObjectArray",
                            "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsExtraInfo",
                            "valueType": "ObjectArray",
                            "description": "主题列表各自对应的描述信息。"
                        },
                        {
                            "attr": "callerRemote",
                            "valueType": "Object",
                            "description": "当前消息来源，即发送者，对象格式"
                        },
                        {
                            "attr": "topicRecv",
                            "valueType": "Object",
                            "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。"
                        },
                        {
                            "attr": "contentRecv",
                            "valueType": "Object",
                            "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。"
                        },
                        {
                            "attr": "waitingRecv",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "启动监听，等待接收外部发送器\n的数据"
                        },
                        {
                            "attr": "messagPostGet",
                            "valueType": "Object",
                            "description": "接收到原生的postMessage消息，\n不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "waitingMsgPost",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "启动监听等待接收原生postMessage\n消息，不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onEvent",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, param) {}",
                            "description": "收到总线事件消息。"
                        },
                        {
                            "attr": "onPostMessage",
                            "valueType": "Function",
                            "description": "收到跨网页iframe事件消息。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
                    "width": 100,
                    "height": 100,
                    "visible": {
                        "func": "attr@visible",
                        "value": true
                    },
                    "comps": [{
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
                            "visible": false,
                            "prefix": "recv",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
                            "visible": false,
                            "prefix": "call",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                37.47666,
                                64.0735,
                                66.39302
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rotation": 5.69426,
                            "rect": [
                                56.75093,
                                4.67922,
                                58.13316,
                                65.5949
                            ]
                        }
                    ],
                    "uuid": "781F192F-8431-4887-BD1A-64B7C5C63E53"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": 303.47781,
                    "y": 83.13822
                },
                "width": 100,
                "height": 100
            },
            "s": {
                "label.opacity": 0,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "interactive": true,
                "image.stretch": "uniform",
                "pixelPerfect": false,
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "2d.movable": false,
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "layout.h": "right",
                "layout.v": "bottom"
            },
            "a": {
                "addressLocal": "bus1@displays/develop/__favorites/widgets/嵌套容器/__封装/登录面板@应用平台@1700994616735.json",
                "topicSend": "aiotosLogin",
                "waitingRecv": true,
                "triggerSend": false,
                "call.visible": true,
                "recv.visible": false,
                "callRecv.visible": false,
                "mode": "send",
                "contentSend": [],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
                "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
                "_debugTriggerSend": false
            }
        },
        {
            "c": "ht.Node",
            "i": 257657,
            "p": {
                "name": "bus",
                "displayName": "事件总线（bus3）",
                "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
                "tag": "bus3",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "triggerSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "callerRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "waitingRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onPostMessage": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Fri Feb 23 2024 10:49:05 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "addressLocal",
                            "valueType": "Object",
                            "description": "收发器自身地址，默认为当前收发器的全局标签（topicSend发送主题属性也如此）。",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "mode",
                            "valueType": "EventBusMode",
                            "defaultValue": "both",
                            "description": "三种模式选择，包括\n接收器、发送器、收发器\n"
                        },
                        {
                            "attr": "callRecv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "收发器背景颜色"
                        },
                        {
                            "attr": "call.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,199,7)",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "recv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "#FF7C7C",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "addrsRemote",
                            "valueType": "ObjectArray",
                            "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
                            "group": "send",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicSend",
                            "valueType": "Object",
                            "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。"
                        },
                        {
                            "attr": "contentSend",
                            "valueType": "Object",
                            "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。"
                        },
                        {
                            "attr": "triggerSend",
                            "valueType": "Boolean",
                            "description": "执行发送",
                            "defaultValue": false
                        },
                        {
                            "attr": "triggerInit",
                            "valueType": "Boolean",
                            "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送"
                        },
                        {
                            "attr": "cacheDisabled",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否禁止缓存队列。\n<br>默认情况下，发送器发送的内容会追加到全局\n<br>异步队列中，当其他接收器动态初始化启动接\n<br>收时，当前发送存放到队列中的数据，会被接\n<br>收处理。\n<br>实现对话框内嵌接收器后启动并响应此前先发\n<br>送的消息，不会导致因为发送执行和启动接收\n<br>先后顺序不一致导致接收不到的问题。\n<br>勾选本属性，将禁止默认追加到缓存队列，可\n<br>以避免某些误操作。"
                        },
                        {
                            "attr": "addrsWhiteList",
                            "valueType": "ObjectArray",
                            "group": "recv",
                            "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsWhiteList",
                            "valueType": "ObjectArray",
                            "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsExtraInfo",
                            "valueType": "ObjectArray",
                            "description": "主题列表各自对应的描述信息。"
                        },
                        {
                            "attr": "callerRemote",
                            "valueType": "Object",
                            "description": "当前消息来源，即发送者，对象格式"
                        },
                        {
                            "attr": "topicRecv",
                            "valueType": "Object",
                            "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。"
                        },
                        {
                            "attr": "contentRecv",
                            "valueType": "Object",
                            "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。"
                        },
                        {
                            "attr": "waitingRecv",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "启动监听，等待接收外部发送器\n的数据"
                        },
                        {
                            "attr": "messagPostGet",
                            "valueType": "Object",
                            "description": "接收到原生的postMessage消息，\n不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "waitingMsgPost",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "启动监听等待接收原生postMessage\n消息，不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onEvent",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, param) {}",
                            "description": "收到总线事件消息。"
                        },
                        {
                            "attr": "onPostMessage",
                            "valueType": "Function",
                            "description": "收到跨网页iframe事件消息。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
                    "width": 100,
                    "height": 100,
                    "visible": {
                        "func": "attr@visible",
                        "value": true
                    },
                    "comps": [{
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
                            "visible": false,
                            "prefix": "recv",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
                            "visible": false,
                            "prefix": "call",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                37.47666,
                                64.0735,
                                66.39302
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rotation": 5.69426,
                            "rect": [
                                56.75093,
                                4.67922,
                                58.13316,
                                65.5949
                            ]
                        }
                    ],
                    "uuid": "781F192F-8431-4887-BD1A-64B7C5C63E53"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": 80.3073,
                    "y": 265.74612
                },
                "width": 100,
                "height": 100
            },
            "s": {
                "label.opacity": 0,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "interactive": true,
                "image.stretch": "uniform",
                "pixelPerfect": false,
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "2d.movable": false,
                "layout.h": "right",
                "layout.v": "bottom",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left"
            },
            "a": {
                "addressLocal": "bus1@displays/develop/__favorites/widgets/嵌套容器/__封装/登录面板@应用平台@1700994616735.json",
                "topicSend": "aiotosLogin",
                "waitingRecv": true,
                "triggerSend": false,
                "call.visible": true,
                "recv.visible": false,
                "callRecv.visible": false,
                "mode": "send",
                "contentSend": [],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p><span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br><p style='color:rgb(242,83,75);margin:0px;font-weight:bold'><p></span>",
                "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json"
            }
        },
        {
            "c": "ht.Node",
            "i": 257658,
            "p": {
                "name": "api",
                "displayName": "API接口（api1）",
                "toolTip": "API接口组件。        <br>支持HTTP POST/GET；MQTT；WS（暂未支持）        <br>- 支持任意数量及层次结构的参数传入请求，扁平化配置输入，        <br>无需组装成手动组装成json结构。        <br>- 接口返回的数据任意字段个数和结构，支持扁平化配置方式        <br>提取，无需解析json结构，即可关联到指定的一个或多个组件        <br>的多个不同属性上进行展示。",
                "tag": "api1",
                "dataBindings": {
                    "a": {
                        "paramKeys": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "paramValues": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "requesting": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "jsonFormat": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onReceived": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "post": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "valueJsonable": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "convertFlatToTree": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "treeMiddleType": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "dataIsJsonString": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentType": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "dataType": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "response": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "download": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "enableLoading": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "defaultOpen": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "comment": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "tokenType": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "authToken": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "tokenFieldParsed": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_1": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_2": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_3": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Sun Feb 25 2024 17:36:41 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "reset",
                            "valueType": "Level2",
                            "defaultValue": 0,
                            "description": "复位还原属性初始设置。",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "shadowBorder",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                0,
                                0,
                                8
                            ]
                        },
                        {
                            "attr": "shadowColor",
                            "valueType": "Color",
                            "defaultValue": "rgba(55,125,255,0.50)"
                        },
                        {
                            "attr": "shadowEnabled",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "type",
                            "valueType": "InterfaceType",
                            "defaultValue": "http",
                            "description": "接口类型。\n<br>HTTP、MQTT、Websocket可选。"
                        },
                        {
                            "attr": "url",
                            "valueType": "ObjectArray",
                            "description": "链接URL。\n<br>字符串数组形式，自动会将输入在数组中的多个字符串\n<br>片段按照顺序合并追加成一个完整的URL给到接口使用。"
                        },
                        {
                            "attr": "post",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "POST/GET。<br>默认勾选为POST请求，不勾选则为GET请求。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "paramKeys",
                            "valueType": "StringArray",
                            "defaultValue": [],
                            "description": "参数的键列表。\n                    对应JSON格式参数（jsonFormat）内容扁平化后的key列表。\n                    注意，数组赋值给本属性指定索引时需格外小心，因为有动态\n                    扁平化展开机制，会导致重复数组值赋值到指定索引结果表现\n                    为数组嵌套。建议用工具函数接受该操作获取完整的属性值后\n                    整体操作赋值给本属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "paramValues",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "参数的值列表。\n                    对应JSON格式参数（jsonFormat）内容扁平化后的value列表。\n                    注意，数组赋值给本属性指定索引时需格外小心，因为有动态\n                    扁平化展开机制，会导致重复数组值赋值到指定索引结果表现\n                    为数组嵌套。只需要去掉对结构化转换（convertFlatToTree）\n                    属性的勾选即可！",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "valueJsonable",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "dynamicCreate": true
                        },
                        {
                            "attr": "jsonFormat",
                            "valueType": "Object",
                            "defaultValue": {},
                            "description": "参数的json格式。<br>对应POST请求的data参数。注意，如果是GET请求，那么会自动<br>将JSON转成GET请求的a=1&b=2这种格式追加到url中。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "tokenType",
                            "valueType": "String",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "JWT",
                                        "X-Access-Token",
                                        "custom"
                                    ]
                                }
                            },
                            "defaultValue": "X-Access-Token",
                            "description": "鉴权token类型。\n                        选择JWT或X-Access-Token时，authToken\n                        属性只需填写token字符串内容即可，字段或\n                        者内容前缀字符无需设置。当选择custom时，\n                        字段固定为Authorization，值为authoToken\n                        填写的内容，不加任何处理。\n                        注意，如果有接口调用返回，且按照属性token-\n                        FieldParsed解析到token（通常是登录接口），\n                        那么该token会被缓存起来，在其他接口调用\n                        时候如果authToken为空，那么会自动采用缓\n                        存的token，以当前类型设置来执行请求。\n                        此外，兼容本属性值不存在的情形，此时将被\n                        当做X-Access-Token类型来处理。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "authToken",
                            "valueType": "String",
                            "defaultValue": "",
                            "description": "鉴权token字符串。\n                    用于需要token鉴权才能调用的接口。与属性\n                    tokenFieldParsed通常不会在同一个接口中\n                    同时用到。\n                    比如登录接口要获取并缓存token时，主要是\n                    配置tokenFieldParsed属性，而不是设置当\n                    前authToken属性值。\n                    其他需要用到缓存接口时，当前属性需要保持\n                    为空。如果设置了值，那么会结合tokenType\n                    属性作为指定的鉴权header参数。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "tokenFieldParsed",
                            "valueType": "String",
                            "defaultValue": "",
                            "description": "登录接口的token解析字段。\n                    默认为空字符串，忽略功能。可任意填写，字段\n                    层级之间以逗号隔开。\n                    比如填写result.token时，当前接口post请求，\n                    并返回且带有{result:{token:xxx}}字段结构\n                    的返回数据时，将被当做登录接口返回，且自动\n                    提取token全局缓存。\n                    此时，其他接口调用时，若未配置authToken且\n                    全局有缓存的token，则请求时自动以X-Access-\n                    Token格式加上，省去逐个配置。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "convertFlatToTree",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "JSON扁平化与结构化\n                    的对应通常如{a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                    勾选后，如果paramKeys/Values是扁平化形式的键\n                    值对，那么会将jsonFormat的数据转成结构化。\n                    注意，在paramKeys字段固定时，试图在paramValues\n                    指定索引插入对象或数组结构时，一定要去掉本属性\n                    勾选，否则会自动将对象或数组扁平化展开，整个键\n                    值组paramKeys/Values都会被扁平化。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "treeMiddleType",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "dynamicCreate": true
                        },
                        {
                            "attr": "dataIsJsonString",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "数据是否是JSON字符串。\n                    默认JSON字符串，否则为JSON对象。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "contentType",
                            "valueType": "ContentType",
                            "defaultValue": "application/json",
                            "description": "内容类型。\n                    参见HTTP协议。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "dataType",
                            "valueType": "DateType",
                            "defaultValue": "JSON",
                            "description": "数据类型。\n                    参见HTTP协议。注意，这里扩展\n                    新增了JSONP类型，可以解决HTTP\n                    GET请求的跨域问题。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "callback",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "params",
                                    "res",
                                    "span"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, params, res, span) {// console.log('[response]' + JSON.stringify(res,undefined,2));\r\n// console.warn('[for bindControlsVal]' + JSON.stringify(convertToFlatJson(res,'.'),undefined,2))}",
                            "description": "接口返回通知函数。"
                        },
                        {
                            "attr": "response",
                            "valueType": "ObjectArray",
                            "defaultValue": [
                                "",
                                ""
                            ],
                            "description": "接口返回数据。\n                    数组类型，索引0为返回状态，\n                    注意，业务数据返回在索引1。\n                    此外，连线操作时，API组件\n                    可以省去对属性的关联，直接\n                    以接口返回的数据对外传递。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "echoAppend",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "显示日志是否追加。\n<br>不勾选时，新的日志会覆盖之前的日志，始终显示\n<br>最新的日志输出。\n<br>勾选时，日志会追加形式输出显示。"
                        },
                        {
                            "attr": "echoClear",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "清空日志。"
                        },
                        {
                            "attr": "resMsgField",
                            "valueType": "String",
                            "defaultValue": "message",
                            "description": "信息字段。\n<br>接口返回结构的提示信息字段。\n<br>默认“message”。通常与属性\n<br>“enableErrDlg”属性配合使用，\n<br>当接口返回错误时，提取返回\n<br>结构本字段对应的内容作为弹\n<br>窗的提示信息。"
                        },
                        {
                            "attr": "enableErrDlg",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "是否错误弹窗。\n<br>接口返回报错时是否弹窗提示。\n<br>通常与属性“resMsgField”配合\n<br>使用，当接口返回错误时，提\n<br>取错误信息弹窗提示。"
                        },
                        {
                            "attr": "responseLog",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "repeatInterval",
                            "valueType": "PositiveNumber",
                            "defaultValue": 1500,
                            "description": "周期请求时间间隔。\n<br>一旦勾选重复请求（enableRepeat）属性后，会按照本属性\n<br>设置的时间间隔（毫秒）周期进行调用。"
                        },
                        {
                            "attr": "enableRepeat",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "开启重复请求。\n<br>勾选后，会按照周期请求时间间隔（enableRepeat）属性\n<br>作为重复请求间隔。"
                        },
                        {
                            "attr": "enableLoading",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "请求过程动画提示。\n<br>勾选后，请求时会提示转动小圆圈，提示正在请求。\n<br>请求完毕或者出错，会自动关闭提示。"
                        },
                        {
                            "attr": "requesting",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "执行接口调用。\n                    只写属性，触发后会自动复位，\n                    便于再次勾选或传入true触发。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "download",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "dynamicCreate": true
                        },
                        {
                            "attr": "defaultOpen",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "默认启动。\n<br>勾选后，初始运行就会启动加载。"
                        },
                        {
                            "attr": "fakeApiReceived",
                            "valueType": "Object",
                            "defaultValue": {},
                            "description": "模拟数据。\n<br>当勾选fakeRecvEnabled后，接口将不再\n<br>按照配置进行实际请求，而是将当前属性\n<br>配置作为接口返回数据输出。\n<br>注意，无法判断实际接口请求返回数据尤\n<br>其是空数据是实际数据还是模拟数据，因\n<br>此一律将接口请求返回的当成实际数据来\n<br>处理。如果要模拟数据，则需要手动启动\n<br>开关fakeRecvEnabled，不进行自动判断。"
                        },
                        {
                            "attr": "fakeReturnDelay",
                            "valueType": "PositiveNumber",
                            "description": "模拟数据延时。\n<br>当模拟数据返回时，不是立即同步返回，而是以\n<br>当前属性配置的时间（毫秒ms）延时后再返回。",
                            "defaultValue": 800
                        },
                        {
                            "attr": "fakeRecvEnabled",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "启用模拟数据。\n<br>当勾选了本属性时，接口将不再执行实际请求\n<br>而是将fakeApiReceived属性配置内容返回。\n<br>"
                        },
                        {
                            "attr": "waitingHint",
                            "valueType": "String"
                        },
                        {
                            "attr": "waitingAnim",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                0.75,
                                500
                            ]
                        },
                        {
                            "attr": "animDuration",
                            "valueType": "PositiveNumber",
                            "defaultValue": 300
                        },
                        {
                            "attr": "noAnim",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "comment",
                            "valueType": "Multiline",
                            "defaultValue": "API数据接口"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onReceived",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, value, extra) {//230913反向关联该函数时，事件触发能得到这里返回的值，而非原始表单\r\nreturn data.ca('response')[1];}"
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "start",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "group": "priodRequest"
                        },
                        {
                            "attr": "defaultStart",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "toCurrent",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "timeFreq",
                            "valueType": "PositiveNumber",
                            "defaultValue": 3
                        },
                        {
                            "attr": "timeSpan",
                            "valueType": "PositiveNumber",
                            "defaultValue": 30
                        },
                        {
                            "attr": "timeType",
                            "valueType": "TimeType",
                            "defaultValue": "s"
                        },
                        {
                            "attr": "timeTo",
                            "valueType": "String"
                        },
                        {
                            "attr": "msCicleDelay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 200
                        },
                        {
                            "attr": "beforeRequest",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "period",
                                    "index"
                                ]
                            }
                        },
                        {
                            "attr": "fakeDatas",
                            "valueType": "ObjectArray",
                            "defaultValue": [
                                9.35679,
                                6.10576,
                                8.26694,
                                6.5345,
                                1.50893,
                                5.0947,
                                0.5196,
                                6.24415,
                                6.71604,
                                1.53714,
                                6.01866,
                                0.38029,
                                9.06919,
                                7.44079,
                                5.33475,
                                8.5739,
                                5.52103,
                                8.58823,
                                6.24023,
                                8.45178,
                                7.14736,
                                1.10788,
                                8.21665,
                                3.28782
                            ]
                        },
                        {
                            "attr": "forceToStringSet",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "fakeEnable",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_1",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_2",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[2]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_3",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[3]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __interface(data,gv,cache);}",
                    "width": 250,
                    "height": 300,
                    "fitSize": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "C4BA775B-007E-45B8-8949-4767CA869CBA"
                },
                "position": {
                    "x": -502.54911,
                    "y": -33.23221
                },
                "width": 351.42901,
                "height": 480.72836
            },
            "s": {
                "label.font": "bold 30px sans-serif, Arial",
                "label.color": "rgb(96,172,252)",
                "label.position": 2,
                "label.offset.y": -8,
                "label": "物联中台登录",
                "interactive": true,
                "image.stretch": "uniform",
                "fullscreen.gap": 0,
                "layout.h": "right",
                "layout.v": "topbottom",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "2d.editable": false,
                "label.opacity": 1,
                "label.align": "left"
            },
            "a": {
                "toolTipRaw": "API接口组件。        <br>支持HTTP POST/GET；MQTT；WS（暂未支持）        <br>- 支持任意数量及层次结构的参数传入请求，扁平化配置输入，        <br>无需组装成手动组装成json结构。        <br>- 接口返回的数据任意字段个数和结构，支持扁平化配置方式        <br>提取，无需解析json结构，即可关联到指定的一个或多个组件        <br>的多个不同属性上进行展示。",
                "url": [
                    "http://sys.aiotos.net/api/login"
                ],
                "timeTo": "2024-03-24 22:18:38.306",
                "jsonFormat": {
                    "username": "develop",
                    "psw": "iotos1234"
                },
                "requesting": false,
                "oldDynamicAttrs": [{
                        "attr": "post",
                        "valueType": "Boolean",
                        "defaultValue": true,
                        "description": "POST/GET。<br>默认勾选为POST请求，不勾选则为GET请求。",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "paramKeys",
                        "valueType": "StringArray",
                        "defaultValue": [],
                        "description": "参数的键列表。<br>对应JSON格式参数（jsonFormat）内容扁平化后的key列表。",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "paramValues",
                        "valueType": "ObjectArray",
                        "defaultValue": [],
                        "description": "参数的值列表。<br>对应JSON格式参数（jsonFormat）内容扁平化后的value列表。",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "valueJsonable",
                        "valueType": "Boolean",
                        "defaultValue": false,
                        "dynamicCreate": true
                    },
                    {
                        "attr": "jsonFormat",
                        "valueType": "Object",
                        "defaultValue": {},
                        "description": "参数的json格式。<br>对应POST请求的data参数。注意，如果是GET请求，那么会自动<br>将JSON转成GET请求的a=1&b=2这种格式追加到url中。",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "JWT Token",
                        "valueType": "String",
                        "defaultValue": "",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "convertFlatToTree",
                        "valueType": "Boolean",
                        "defaultValue": true,
                        "dynamicCreate": true
                    },
                    {
                        "attr": "treeMiddleType",
                        "valueType": "Boolean",
                        "defaultValue": false,
                        "dynamicCreate": true
                    },
                    {
                        "attr": "dataIsJsonString",
                        "valueType": "Boolean",
                        "defaultValue": true,
                        "dynamicCreate": true
                    },
                    {
                        "attr": "contentType",
                        "valueType": "ContentType",
                        "defaultValue": "application/json",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "dataType",
                        "valueType": "DateType",
                        "defaultValue": "JSON",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "response",
                        "valueType": "ObjectArray",
                        "defaultValue": [
                            "",
                            ""
                        ],
                        "dynamicCreate": true
                    },
                    {
                        "attr": "requesting",
                        "valueType": "Boolean",
                        "defaultValue": false,
                        "dynamicCreate": true
                    },
                    {
                        "attr": "download",
                        "valueType": "Boolean",
                        "defaultValue": false,
                        "dynamicCreate": true
                    }
                ],
                "symbol": "symbols/develop/uiotos/interface/interface.json",
                "paramKeys": [
                    "username",
                    "psw"
                ],
                "paramValues": [
                    "develop",
                    "iotos1234"
                ],
                "response": [
                    "success",
                    {
                        "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1MTgsInVzZXJuYW1lIjoiZGV2ZWxvcCIsImV4cCI6MTcxMTM3NDA5NywiZW1haWwiOiIxMzQxMjM0NTY3N0BzaW5hLmNvbSJ9.KHgLBH7fuXWcIvQDH6uBbCsmTqwFQBH_Fux_igT9L_M",
                        "_requestParams": {
                            "type": "post",
                            "url": "http://sys.aiotos.net/api/v1/token/",
                            "contentType": "application/json",
                            "data": "{\n    \"username\": \"develop\",\n    \"password\": \"iotos123456\"\n}",
                            "dataType": "JSON"
                        }
                    }
                ],
                "comment": "物联中台登录",
                "bindControlsTag": [
                    "func3",
                    "func2",
                    "func2'",
                    "login1"
                ],
                "bindControlsAttr": [
                    "inputs",
                    "inputs",
                    "inputs",
                    "ht.text"
                ],
                "bindControlsVal": [
                    1,
                    "responseJSON.non_field_errors",
                    "responseJSON.non_field_errors",
                    "登录"
                ],
                "paramControlTag": [
                    null,
                    null,
                    null,
                    null
                ],
                "paramControlAttr": [
                    "response",
                    null,
                    null,
                    null
                ],
                "paramBindEvent": [],
                "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
                "enableLoading": true,
                "bindEvents": [
                    "*",
                    "onReceived"
                ],
                "_bindEvents_0": "*",
                "_bindEvents_0-list": [
                    "*",
                    "onReceived"
                ],
                "enableErrDlg": false,
                "_editDebug": true,
                "_forbidInherit": true,
                "_hideWhenRun": true,
                "_bindEvents_1": "*",
                "_bindEvents_1-list": [
                    "*",
                    "onReceived"
                ],
                "_bindEvents_2": "*",
                "_bindEvents_2-list": [
                    "*",
                    "onReceived"
                ],
                "dataIsJsonString": true,
                "_bindEvents_3": "*",
                "_bindEvents_3-list": [
                    "*",
                    "onReceived"
                ]
            }
        },
        {
            "c": "ht.Edge",
            "i": 257659,
            "p": {
                "name": "edge",
                "displayName": "0（edge16）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：response@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：success;[object Object]...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257658
                },
                "tag": "edge16",
                "source": {
                    "__i": 257658
                },
                "target": {
                    "__i": 257667
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "extend.west",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 5,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true,
                "edge.extend": 100
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：response@api1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：success;[object Object]...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：1</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257660,
            "p": {
                "name": "edge",
                "displayName": "1（edge9）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257658
                },
                "tag": "edge9",
                "source": {
                    "__i": 257658
                },
                "target": {
                    "__i": 257663
                }
            },
            "s": {
                "label": "",
                "edge.color": "#FF7C7C",
                "edge.width": 3,
                "edge.type": "flex",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "#FF7C7C",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 1
            },
            "a": {
                "index": 1,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257661,
            "p": {
                "name": "edge",
                "displayName": "2（edge10）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257658
                },
                "tag": "edge10",
                "source": {
                    "__i": 257658
                },
                "target": {
                    "__i": 257664
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(0,199,7)",
                "edge.type": "ortho",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(0,199,7)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 2,
                "label.position": 3,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true
            },
            "a": {
                "index": 2,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：2 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：responseJSON.non_field_errors</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">2。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257662,
            "p": {
                "name": "edge",
                "displayName": "3（edge15）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：3 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：ht.text@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：登录</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">3。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257658
                },
                "tag": "edge15",
                "source": {
                    "__i": 257658
                },
                "target": {
                    "__i": 257643
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(212,0,0)",
                "edge.type": "ortho",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(212,0,0)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 3,
                "label.position": 3,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true,
                "edge.width": 1
            },
            "a": {
                "index": 3,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：3 | 总共4条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：ht.text@login1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：登录</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">3。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.UNode",
            "i": 257663,
            "p": {
                "name": "func",
                "displayName": "工具函数（func2）",
                "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
                "tag": "func2",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "output": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "outputByEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputs": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "exec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "arrExec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOutput": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_type": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_title": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_region": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_duration": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_fixedWidth": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_fixedHeight": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "convertFlatToTree": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputKeys": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputValues": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Mon Mar 11 2024 21:17:29 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "name": "组件地址"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "图标颜色。\n<br>包括显示文字。",
                            "group": "功能（关键）",
                            "name": "图标颜色"
                        },
                        {
                            "attr": "function",
                            "valueType": "ToolFunction",
                            "defaultValue": "transfer",
                            "name": "功能选项",
                            "description": "信息提示/警告/错误"
                        },
                        {
                            "attr": "noteTips",
                            "valueType": "Multiline",
                            "name": "函数别名注释",
                            "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
                        },
                        {
                            "attr": "exeWhenInput",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输入赋值时执行"
                        },
                        {
                            "attr": "resetAfterInput",
                            "valueType": "Boolean",
                            "name": "输入赋值后清空",
                            "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
                            "defaultValue": false
                        },
                        {
                            "attr": "inputsArrToObj",
                            "valueType": "Boolean",
                            "name": "输入数组转对象",
                            "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
                            "defaultValue": true
                        },
                        {
                            "attr": "stripSingleInput",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输入组单个取出",
                            "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
                        },
                        {
                            "attr": "exeWhenLoad",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "组件加载时执行"
                        },
                        {
                            "attr": "oldValueMerge",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输出合并非覆盖",
                            "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
                        },
                        {
                            "attr": "outputByEvent",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出经事件返回",
                            "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
                        },
                        {
                            "attr": "parseFailedNull",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出解析默认空",
                            "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
                        },
                        {
                            "attr": "inputs",
                            "valueType": "Object",
                            "name": "输入（组）",
                            "defaultValue": {},
                            "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
                        },
                        {
                            "attr": "convertFlatToTree",
                            "valueType": "Boolean",
                            "name": "输入扁平结构化",
                            "defaultValue": false,
                            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputKeys",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入键组",
                            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputValues",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入值组",
                            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_type",
                            "valueType": "MessageType",
                            "defaultValue": "warn",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_title",
                            "valueType": "String",
                            "defaultValue": "错误",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_region",
                            "valueType": "Region",
                            "defaultValue": "top",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_duration",
                            "valueType": "PositiveNumber",
                            "defaultValue": 1000,
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_fixedWidth",
                            "valueType": "PositiveNumber",
                            "defaultValue": 300,
                            "description": "提示区域宽度。\n                    提示条或对话框的宽度。。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_fixedHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 160,
                            "description": "弹窗高度。\n                    注意，仅对弹窗确认选项有效。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "delay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "name": "延时执行毫秒"
                        },
                        {
                            "attr": "exec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "执行"
                        },
                        {
                            "attr": "arrExec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "遍历执行",
                            "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
                        },
                        {
                            "attr": "whenOutputing",
                            "valueType": "MultiComboBox",
                            "name": "whenOutputing"
                        },
                        {
                            "attr": "changeOutputTo",
                            "valueType": "MultiComboBox",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "不转换",
                                        "空对象（null）",
                                        "未定义（undefined）",
                                        "空字符串（\"\"）",
                                        "否（false）",
                                        "等于零（0）"
                                    ]
                                }
                            },
                            "defaultValue": "不转换",
                            "name": "changeOutputTo"
                        },
                        {
                            "attr": "output",
                            "valueType": "Object",
                            "name": "输出",
                            "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "ObjectArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "用户数据。"
                        },
                        {
                            "attr": "onOutput",
                            "valueType": "Function",
                            "description": "输出事件。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
                    "width": 45,
                    "height": 40,
                    "comps": [{
                        "type": "image",
                        "color": {
                            "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                            "value": "rgb(51,153,255)"
                        },
                        "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
                        "shadowColor": "rgb(61,61,61)",
                        "displayName": "node_image",
                        "rect": [
                            0.53882,
                            4.53779,
                            43.92236,
                            30.92443
                        ]
                    }],
                    "uuid": "60073DFD-81F7-4338-BB6D-8E18AAB925F5"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -502.54911,
                    "y": 335.74612
                },
                "width": 45,
                "height": 40
            },
            "s": {
                "label.offset.y": 0,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "label": "信息提示/警告/错误",
                "label.font": "26px Microsoft YaHei",
                "label.color": "rgb(51,153,255)",
                "label.align": "left",
                "2d.movable": false,
                "layout.h": "left",
                "layout.v": "bottom",
                "label.position": 30
            },
            "a": {
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
                "noteTips": "信息提示/警告/错误",
                "bindEvents": [
                    "*",
                    "onOutput"
                ],
                "输出遇到空值": "全部（*）",
                "输出遇到空值-list": [
                    "全部（*）",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）",
                    "小于零（<0）",
                    "NaN"
                ],
                "symbol": "symbols/develop/uiotos/base/__convertor.json",
                "icon": "symbols/develop/uiotos/icons/functions/function.json",
                "arrExec": false,
                "function": "messageAlert",
                "inputs": "responseJSON.non_field_errors",
                "stripSingleInput": false,
                "inputKeys": [],
                "inputValues": [],
                "exec": false,
                "_type": "error"
            }
        },
        {
            "c": "ht.UNode",
            "i": 257664,
            "p": {
                "name": "func",
                "displayName": "工具函数（func2'）",
                "toolTip": "透明传递<br>transfer",
                "tag": "func2'",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "output": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "outputByEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputs": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "exec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "arrExec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOutput": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_equalTo": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_strict": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_target": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_falseReturn": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_trueReturn": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "convertFlatToTree": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputKeys": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputValues": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_1": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Mon Mar 11 2024 21:17:29 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "name": "组件地址"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "图标颜色。\n<br>包括显示文字。",
                            "group": "功能（关键）",
                            "name": "图标颜色"
                        },
                        {
                            "attr": "function",
                            "valueType": "ToolFunction",
                            "defaultValue": "transfer",
                            "name": "功能选项",
                            "description": "值是否相等"
                        },
                        {
                            "attr": "noteTips",
                            "valueType": "Multiline",
                            "name": "函数别名注释",
                            "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
                        },
                        {
                            "attr": "exeWhenInput",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输入赋值时执行"
                        },
                        {
                            "attr": "resetAfterInput",
                            "valueType": "Boolean",
                            "name": "输入赋值后清空",
                            "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
                            "defaultValue": false
                        },
                        {
                            "attr": "inputsArrToObj",
                            "valueType": "Boolean",
                            "name": "输入数组转对象",
                            "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
                            "defaultValue": true
                        },
                        {
                            "attr": "stripSingleInput",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输入组单个取出",
                            "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
                        },
                        {
                            "attr": "exeWhenLoad",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "组件加载时执行"
                        },
                        {
                            "attr": "oldValueMerge",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输出合并非覆盖",
                            "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
                        },
                        {
                            "attr": "outputByEvent",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出经事件返回",
                            "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
                        },
                        {
                            "attr": "parseFailedNull",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出解析默认空",
                            "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
                        },
                        {
                            "attr": "inputs",
                            "valueType": "Object",
                            "name": "输入（组）",
                            "defaultValue": {},
                            "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
                        },
                        {
                            "attr": "convertFlatToTree",
                            "valueType": "Boolean",
                            "name": "输入扁平结构化",
                            "defaultValue": false,
                            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputKeys",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入键组",
                            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputValues",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入值组",
                            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_equalTo",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "默认勾选时，为判断是否相等；没勾选时，为判断是否不相等。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_strict",
                            "valueType": "String",
                            "defaultValue": "lowest",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "lowest",
                                        "middle",
                                        "highest"
                                    ]
                                }
                            },
                            "description": "严格模式。\n                    分为三种模式：最低（lowest）,\n                    中间（middle）、最高（highest）。\n                    1）最低：仅仅判断值相等，不考虑\n                    类型，甚至对于各种“空”：[]、{}、\n                    0、null、undefined，都认为彼此\n                    相等。\n                    2）中间：仅判断值相等，不会判断\n                    是否引用对象，尤指[]和[]、{}和{}\n                    会认作相等。对于1）中不同类型的空\n                    不认为相等。\n                    3）最高：所有值、类型、对象引用全\n                    部要相同，即便是值相等的数组之间或\n                    者对象之间，只要不是同一个的引用，\n                    也会认作不相等。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_target",
                            "valueType": "Object",
                            "description": "用于判断比较的目标值。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_falseReturn",
                            "valueType": "Object",
                            "defaultValue": false,
                            "description": "判断失败时的返回值，默认为false。注意，默认勾选_equalTo时，判断是否相等；没勾选时，判断是否不相等。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_trueReturn",
                            "valueType": "Object",
                            "defaultValue": true,
                            "description": "判断成功时的返回值，默认为true。注意，默认勾选_equalTo时，判断是否相等；没勾选时，判断是否不相等。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "delay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "name": "延时执行毫秒"
                        },
                        {
                            "attr": "exec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "执行"
                        },
                        {
                            "attr": "arrExec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "遍历执行",
                            "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
                        },
                        {
                            "attr": "whenOutputing",
                            "valueType": "MultiComboBox",
                            "name": "whenOutputing"
                        },
                        {
                            "attr": "changeOutputTo",
                            "valueType": "MultiComboBox",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "不转换",
                                        "空对象（null）",
                                        "未定义（undefined）",
                                        "空字符串（\"\"）",
                                        "否（false）",
                                        "等于零（0）"
                                    ]
                                }
                            },
                            "defaultValue": "不转换",
                            "name": "changeOutputTo"
                        },
                        {
                            "attr": "output",
                            "valueType": "Object",
                            "name": "输出",
                            "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "ObjectArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "用户数据。"
                        },
                        {
                            "attr": "onOutput",
                            "valueType": "Function",
                            "description": "输出事件。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_1",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
                    "width": 45,
                    "height": 40,
                    "comps": [{
                        "type": "image",
                        "color": {
                            "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                            "value": "rgb(51,153,255)"
                        },
                        "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
                        "shadowColor": "rgb(61,61,61)",
                        "displayName": "node_image",
                        "rect": [
                            0.53882,
                            4.53779,
                            43.92236,
                            30.92443
                        ]
                    }],
                    "uuid": "60073DFD-81F7-4338-BB6D-8E18AAB925F5"
                },
                "position": {
                    "x": -619.08204,
                    "y": 265.74612
                },
                "width": 45,
                "height": 40
            },
            "s": {
                "label.position": 9,
                "label.offset.y": 0,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "label": "返回数据没有错\n误标记的字段时",
                "label.font": "26px Microsoft YaHei",
                "label.color": "rgb(51,153,255)",
                "label.align": "left"
            },
            "a": {
                "toolTipRaw": "透明传递<br>transfer",
                "noteTips": "返回数据没有错\n误标记的字段时",
                "bindEvents": [
                    "*",
                    "onOutput"
                ],
                "输出遇到空值": "全部（*）",
                "输出遇到空值-list": [
                    "全部（*）",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）",
                    "小于零（<0）",
                    "NaN"
                ],
                "symbol": "symbols/develop/uiotos/base/__convertor.json",
                "icon": "symbols/develop/uiotos/icons/functions/function.json",
                "arrExec": false,
                "function": "isEqual",
                "stripSingleInput": false,
                "exeWhenInput": true,
                "resetAfterInput": true,
                "paramControlTag": [
                    null,
                    null
                ],
                "paramControlAttr": [
                    "output",
                    "output"
                ],
                "bindControlsTag": [
                    "func2",
                    "func4"
                ],
                "bindControlsAttr": [
                    "exec",
                    "inputs"
                ],
                "bindControlsVal": [
                    null,
                    null
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onOutput"
                ],
                "_bindEvents_0": "*",
                "_target": "responseJSON.non_field_errors",
                "exec": false,
                "inputKeys": [],
                "inputValues": [],
                "_equalTo": false,
                "_bindEvents_1-list": [
                    "*",
                    "onOutput"
                ],
                "_bindEvents_1": "*",
                "output": false,
                "inputs": {}
            }
        },
        {
            "c": "ht.Edge",
            "i": 257665,
            "p": {
                "name": "edge",
                "displayName": "0（edge11）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：exec@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257664
                },
                "tag": "edge11",
                "source": {
                    "__i": 257664
                },
                "target": {
                    "__i": 257663
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "v.h",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 33
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：exec@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257666,
            "p": {
                "name": "edge",
                "displayName": "1（edge13）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257664
                },
                "tag": "edge13",
                "source": {
                    "__i": 257664
                },
                "target": {
                    "__i": 257669
                }
            },
            "s": {
                "label": "",
                "edge.color": "#FF7C7C",
                "edge.width": 3,
                "edge.type": "v.h",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "#FF7C7C",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 1,
                "label.position": 33
            },
            "a": {
                "index": 1,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.UNode",
            "i": 257667,
            "p": {
                "name": "func",
                "displayName": "工具函数（func3）",
                "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
                "tag": "func3",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "output": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "outputByEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputs": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "exec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "arrExec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOutput": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_function": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "convertFlatToTree": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputKeys": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputValues": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Mon Mar 11 2024 21:17:29 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "name": "组件地址"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "图标颜色。\n<br>包括显示文字。",
                            "group": "功能（关键）",
                            "name": "图标颜色"
                        },
                        {
                            "attr": "function",
                            "valueType": "ToolFunction",
                            "defaultValue": "transfer",
                            "name": "功能选项",
                            "description": "代码模块（高级）"
                        },
                        {
                            "attr": "noteTips",
                            "valueType": "Multiline",
                            "name": "函数别名注释",
                            "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
                        },
                        {
                            "attr": "exeWhenInput",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输入赋值时执行"
                        },
                        {
                            "attr": "resetAfterInput",
                            "valueType": "Boolean",
                            "name": "输入赋值后清空",
                            "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
                            "defaultValue": false
                        },
                        {
                            "attr": "inputsArrToObj",
                            "valueType": "Boolean",
                            "name": "输入数组转对象",
                            "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
                            "defaultValue": true
                        },
                        {
                            "attr": "stripSingleInput",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输入组单个取出",
                            "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
                        },
                        {
                            "attr": "exeWhenLoad",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "组件加载时执行"
                        },
                        {
                            "attr": "oldValueMerge",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输出合并非覆盖",
                            "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
                        },
                        {
                            "attr": "outputByEvent",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出经事件返回",
                            "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
                        },
                        {
                            "attr": "parseFailedNull",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出解析默认空",
                            "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
                        },
                        {
                            "attr": "inputs",
                            "valueType": "Object",
                            "name": "输入（组）",
                            "defaultValue": {},
                            "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
                        },
                        {
                            "attr": "convertFlatToTree",
                            "valueType": "Boolean",
                            "name": "输入扁平结构化",
                            "defaultValue": false,
                            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputKeys",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入键组",
                            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputValues",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入值组",
                            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_function",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "inputs"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, inputs) {return inputs;}",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "delay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "name": "延时执行毫秒"
                        },
                        {
                            "attr": "exec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "执行"
                        },
                        {
                            "attr": "arrExec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "遍历执行",
                            "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
                        },
                        {
                            "attr": "whenOutputing",
                            "valueType": "MultiComboBox",
                            "name": "whenOutputing"
                        },
                        {
                            "attr": "changeOutputTo",
                            "valueType": "MultiComboBox",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "不转换",
                                        "空对象（null）",
                                        "未定义（undefined）",
                                        "空字符串（\"\"）",
                                        "否（false）",
                                        "等于零（0）"
                                    ]
                                }
                            },
                            "defaultValue": "不转换",
                            "name": "changeOutputTo"
                        },
                        {
                            "attr": "output",
                            "valueType": "Object",
                            "name": "输出",
                            "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "ObjectArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "用户数据。"
                        },
                        {
                            "attr": "onOutput",
                            "valueType": "Function",
                            "description": "输出事件。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
                    "width": 45,
                    "height": 40,
                    "comps": [{
                        "type": "image",
                        "color": {
                            "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                            "value": "rgb(51,153,255)"
                        },
                        "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
                        "shadowColor": "rgb(61,61,61)",
                        "displayName": "node_image",
                        "rect": [
                            0.53882,
                            4.53779,
                            43.92236,
                            30.92443
                        ]
                    }],
                    "uuid": "0CB7AC58-6775-4409-A5D6-84237683EE91"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -728.95351,
                    "y": 420.74987
                },
                "width": 40,
                "height": 40
            },
            "s": {
                "label.position": 20,
                "label.offset.y": 0,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "label": "进入桌面且缓存信息（暂未封装）",
                "label.font": "26px Microsoft YaHei",
                "label.color": "rgb(51,153,255)",
                "label.align": "left",
                "2d.movable": false,
                "layout.h": "left",
                "layout.v": "bottom"
            },
            "a": {
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>透明传递<br>transfer",
                "noteTips": "进入桌面且缓存信息（暂未封装）",
                "bindEvents": [
                    "*",
                    "onOutput"
                ],
                "输出遇到空值": "全部（*）",
                "输出遇到空值-list": [
                    "全部（*）",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）",
                    "小于零（<0）",
                    "NaN"
                ],
                "symbol": "symbols/develop/uiotos/base/__convertor.json",
                "icon": "symbols/develop/uiotos/icons/functions/function.json",
                "arrExec": false,
                "function": "codeBlock",
                "inputs": {
                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1MTgsInVzZXJuYW1lIjoiZGV2ZWxvcCIsImV4cCI6MTcxMTM3NDA5NywiZW1haWwiOiIxMzQxMjM0NTY3N0BzaW5hLmNvbSJ9.KHgLBH7fuXWcIvQDH6uBbCsmTqwFQBH_Fux_igT9L_M",
                    "_requestParams": {
                        "type": "post",
                        "url": "http://sys.aiotos.net/api/v1/token/",
                        "contentType": "application/json",
                        "data": "{\n    \"username\": \"develop\",\n    \"password\": \"iotos123456\"\n}",
                        "dataType": "JSON"
                    }
                },
                "stripSingleInput": false,
                "_function": "__ht__function(data, gv, cache, inputs) {if(inputs._requestParams){\r\n    let datatmp = JSON.parse(inputs._requestParams.data);\r\n    //240324，缓存登录信息\r\n    if(datatmp){\r\n        window.sessionStorage.setItem('login_res', JSON.stringify(inputs));\r\n        window.sessionStorage.setItem('_i_user', datatmp.username);\r\n        window.sessionStorage.setItem('jwt_token', inputs.jwt_token);\r\n        window._i_user = datatmp.username;\r\n    }\r\n}\r\nlet saveLogined = function(resData) {\r\n    // 重新提交\r\n    let that = this\r\n        //获取res.data参数 把数据存储到store全局变量中并进行序列化\r\n    var infoStr = {};\r\n    let gatewayCounttmp = jsonObjLength(resData)\r\n    var obj = null;\r\n    var tabletmp = null;\r\n    var date = new Date();\r\n    const uuid_list = [];\r\n    for (var key in resData) {\r\n        var gatewayId = resData[key].tableId.split('?')[0]; //获取网关的id\r\n        uuid_list.push(gatewayId)\r\n    }\r\n    $.ajax({\r\n        url: iotos_host + '/scada/node_all/',\r\n        type: 'POST',\r\n        data: {\r\n            uuid_list\r\n        },\r\n        // async: false,\r\n        dataType: 'json',\r\n        success: function success(res) {\r\n            if (res.success == true) {\r\n                var gateway_list = res.data.gateway_list;\r\n                var infoData;\r\n                for (var index in gateway_list) {\r\n                    infoData = gateway_list[index];\r\n                    infoStr[infoData.gateway_uuid] = infoData;\r\n                    console.warn('缓存数据点表 ' + infoData.gateway_uuid);\r\n                }\r\n\r\n                obj = infoStr;\r\n                tabletmp = JSON.stringify(obj); //转换json\r\n                window.sessionStorage.obj = tabletmp;\r\n                saveBindingsInfo(obj);\r\n                //发送当前登录成功的网关信息\r\n                gatewayCounttmp == jsonObjLength(infoStr) && window.appNotifier.fire({\r\n                    kind: 'viewData',\r\n                    para: {\r\n                        type: 'logined',\r\n                        data: infoStr\r\n                    }\r\n                })\r\n\r\n                //启动数据点订阅通信\r\n                (new IotosInject()).init()\r\n            } else {\r\n                window.sessionStorage.obj = tabletmp;\r\n            }\r\n        },\r\n        error: function(XMLHttpRequest, textStatus) {\r\n            alert(XMLHttpRequest); //XMLHttpRequest.responseText    XMLHttpRequest.status   XMLHttpRequest.readyState\r\n            console.error(textStatus);\r\n        }\r\n    });\r\n}\r\nsaveLogined(inputs.data);\r\n\r\n//关闭当前应用页面（登录页）\r\nwindow.appNotifier.fire({\r\n    kind: 'appBackClose',\r\n    para: {\r\n        type: null\r\n    }\r\n})\r\nreturn true;}",
                "exeWhenInput": false,
                "exec": false,
                "inputKeys": [
                    "token",
                    "_requestParams"
                ],
                "inputValues": [
                    "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo1MTgsInVzZXJuYW1lIjoiZGV2ZWxvcCIsImV4cCI6MTcxMTM3NDA5NywiZW1haWwiOiIxMzQxMjM0NTY3N0BzaW5hLmNvbSJ9.KHgLBH7fuXWcIvQDH6uBbCsmTqwFQBH_Fux_igT9L_M",
                    {
                        "type": "post",
                        "url": "http://sys.aiotos.net/api/v1/token/",
                        "contentType": "application/json",
                        "data": "{\n    \"username\": \"develop\",\n    \"password\": \"iotos123456\"\n}",
                        "dataType": "JSON"
                    }
                ],
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    null
                ],
                "bindControlsTag": [
                    "bus3'"
                ],
                "bindControlsAttr": [
                    "triggerSend"
                ],
                "bindControlsVal": [
                    null
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onOutput"
                ],
                "_bindEvents_0": "*"
            }
        },
        {
            "c": "ht.Edge",
            "i": 257668,
            "p": {
                "name": "edge",
                "displayName": "0（edge17）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus3'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257667
                },
                "tag": "edge17",
                "source": {
                    "__i": 257667
                },
                "target": {
                    "__i": 257671
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "flex",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：triggerSend@bus3'</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.UNode",
            "i": 257669,
            "p": {
                "name": "func",
                "displayName": "工具函数（func4）",
                "toolTip": "透明传递<br>transfer",
                "tag": "func4",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "output": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "outputByEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputs": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "exec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "arrExec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOutput": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_method": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_value": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_reverse": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "convertFlatToTree": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputKeys": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputValues": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Mon Mar 11 2024 21:17:29 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "name": "组件地址"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "图标颜色。\n<br>包括显示文字。",
                            "group": "功能（关键）",
                            "name": "图标颜色"
                        },
                        {
                            "attr": "function",
                            "valueType": "ToolFunction",
                            "defaultValue": "transfer",
                            "name": "功能选项",
                            "description": "基本数学计算"
                        },
                        {
                            "attr": "noteTips",
                            "valueType": "Multiline",
                            "name": "函数别名注释",
                            "description": "函数别名注释。\n<br>默认为函数名称，可以修改，方便理解具体用途。\n<br>通常结合“提示”属性做详细功能注释，便于理解当\n<br>前配置下的操作。"
                        },
                        {
                            "attr": "exeWhenInput",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输入赋值时执行"
                        },
                        {
                            "attr": "resetAfterInput",
                            "valueType": "Boolean",
                            "name": "输入赋值后清空",
                            "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
                            "defaultValue": false
                        },
                        {
                            "attr": "inputsArrToObj",
                            "valueType": "Boolean",
                            "name": "输入数组转对象",
                            "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。",
                            "defaultValue": true
                        },
                        {
                            "attr": "stripSingleInput",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输入组单个取出",
                            "description": "输入组为数组且只有1个元素时，取出\n<br>这个元素作为实际输入值，代替原先的输入。默\n<br>认inputs为数组格式，手动输入时通常会在数组\n<br>的首元素输入，本属性保持默认勾选时，实际计\n<br>算会以首元素作为实际输入值。\n<br>也可以勾选“输入数组转对象”，此时输入组的属\n<br>性栏由数组切换为对象输入，就可以任意输入非\n<br>数组类型的值了。"
                        },
                        {
                            "attr": "exeWhenLoad",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "组件加载时执行"
                        },
                        {
                            "attr": "oldValueMerge",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输出合并非覆盖",
                            "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖。\n<br>注意，如果传入的新值（支持经由解析赋值）也是数组，那么区分情况：\n<br>    ■ 旧值为常规数组，新值也为数组，则新数组元素都追加到旧数组合成一个，而非整\n<br>体数组作为一个元素追加。此外注意，如果新数组内元素都为数组，即本身是数组的数\n<br>组，那么自身数组先合并成一个数组，再进行下一步与旧数组合并操作。\n<br>    ■ 旧值为数组的数组时，新值即便也为数组，那么也会整体作为一个元素追加到旧值。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
                        },
                        {
                            "attr": "outputByEvent",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出经事件返回",
                            "description": "默认情况下输出事件onOutput跟常规事件一样，\n<br>会输出当前组件的表单对象，而不是具体某个属性值，\n<br>需要经过赋值解析提取（通常是属性名加上前缀'a:'）。\n<br>工具函数的输出output通常要从内嵌页面中传给上层，\n<br>为了简化操作，当勾选了本属性后，无需赋值解析，输\n<br>出onOutput事件会自动将输出属性（a:output）带出。\n<br>而无需再通过表单对象+解析，也无需两条连线前者关\n<br>联output输出、后者关联onOutput触发以省去赋值解析。\n<br>注意，不影响数据进一步的赋值解析，只是此时不再是\n<br>以表单对象为解析基础，而是以函数output的返回结果。"
                        },
                        {
                            "attr": "parseFailedNull",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "name": "输出解析默认空",
                            "description": "解析赋值输出时，如果对象\n<br>没有匹配到的解析字段，就返回未定\n<br>义的空值（undefined）。如果不勾选\n<br>本属性，未匹配到的解析赋值（非静\n<br>态赋值情况下），则返回原对象本身。\n<br>通常有反向关联属性时，参数被当成\n<br>赋值解析参数而非静态值。"
                        },
                        {
                            "attr": "inputs",
                            "valueType": "Object",
                            "name": "输入（组）",
                            "defaultValue": {},
                            "description": "用于接收函数参数输入，可默认对象或数组形式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
                        },
                        {
                            "attr": "convertFlatToTree",
                            "valueType": "Boolean",
                            "name": "输入扁平结构化",
                            "defaultValue": false,
                            "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputKeys",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入键组",
                            "description": "输入组（inputs）扁平化后的键列表。\n<br>与数组值组配合使用，与输入组的数据实时双\n<br>向同步。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "inputValues",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "name": "输入值组",
                            "description": "输入组（inputs）扁平化后的值列表。\n                        与输入键组配合使用，与输入组的数据实时双\n                        向同步。\n                        注意，数组赋值给本属性指定索引时需格外小\n                        心，因为有动态扁平化展开机制，会导致重复\n                        数组值赋值到指定索引结果表现为数组嵌套。\n                        建议用工具函数接受该操作获取完整的属性值\n                        后整体操作赋值给本属性。\n                        此外，当前属性不论是整体还是索引位置赋值\n                        都会出发输入时执行（如果有勾选），效果等\n                        同于连线操作输入组（inputs）属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_method",
                            "valueType": "MathMethod",
                            "defaultValue": "SUM",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_value",
                            "valueType": "Number",
                            "defaultValue": 1,
                            "description": "参与运算的数字，比如输入是A，计算方法是-，这里是B，那么表达式就是A-B。\r\n注意，_reverse属性默认不勾选，一旦勾选，那么A和B位置互换，成为B-A",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_reverse",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "勾选后，公式运算的两个数字互换位置，或者取反。比如A-B换乘B-A，sin(A)变成arcsinx(A)",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "delay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "name": "延时执行毫秒"
                        },
                        {
                            "attr": "exec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "执行"
                        },
                        {
                            "attr": "arrExec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "遍历执行",
                            "description": "数组循环遍历执行。\n<br>准输出值如果是数组时，自动拆成多\n<br>个元素，依次对外触发。相当于在连\n<br>线静态值bindControlsVal中依次填入\n<br>从0到n-1后，再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于\n<br>输入，因此也相当于将输入的多个参\n<br>数（数组元素），依次填入触发执行。"
                        },
                        {
                            "attr": "whenOutputing",
                            "valueType": "MultiComboBox",
                            "name": "whenOutputing"
                        },
                        {
                            "attr": "changeOutputTo",
                            "valueType": "MultiComboBox",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "不转换",
                                        "空对象（null）",
                                        "未定义（undefined）",
                                        "空字符串（\"\"）",
                                        "否（false）",
                                        "等于零（0）"
                                    ]
                                }
                            },
                            "defaultValue": "不转换",
                            "name": "changeOutputTo"
                        },
                        {
                            "attr": "output",
                            "valueType": "Object",
                            "name": "输出",
                            "description": "函数输出。\n<br>当函数执行、遍历执行或输入赋值执行时，函数输出，\n<br>如果有对外连线，则会触发将输出值传递出去。\n<br>如果函数所在页面作为内嵌，将继承到上层的输出属\n<br>性对外连线对外，那么内嵌函数的执行，同样会触发\n<br>上层对外连线传递值。\n<br>注意，不论是当前层还是嵌套层，所有对工具函数输\n<br>出属性的直接赋值，只会改变属性值本身，不会触发\n<br>连线操作对外传递，只有通过前面说的几种函数本身\n<br>的执行操作才会触发连线操作。\n<br>"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "ObjectArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray",
                            "defaultValue": [],
                            "description": "用户数据。"
                        },
                        {
                            "attr": "onOutput",
                            "valueType": "Function",
                            "description": "输出事件。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
                    "width": 45,
                    "height": 40,
                    "comps": [{
                        "type": "image",
                        "color": {
                            "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                            "value": "rgb(51,153,255)"
                        },
                        "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
                        "shadowColor": "rgb(61,61,61)",
                        "displayName": "node_image",
                        "rect": [
                            0.53882,
                            4.53779,
                            43.92236,
                            30.92443
                        ]
                    }],
                    "uuid": "8BBBCC73-BF08-4658-A13D-6423A30F2C09"
                },
                "position": {
                    "x": -728.95351,
                    "y": 335.74612
                },
                "width": 45,
                "height": 40
            },
            "s": {
                "label.position": 33,
                "label.offset.y": 0,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "label": "取反逻辑",
                "label.font": "26px Microsoft YaHei",
                "label.color": "rgb(51,153,255)",
                "label.align": "left"
            },
            "a": {
                "toolTipRaw": "透明传递<br>transfer",
                "noteTips": "取反逻辑",
                "bindEvents": [
                    "*",
                    "onOutput"
                ],
                "输出遇到空值": "全部（*）",
                "输出遇到空值-list": [
                    "全部（*）",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）",
                    "小于零（<0）",
                    "NaN"
                ],
                "symbol": "symbols/develop/uiotos/base/__convertor.json",
                "icon": "symbols/develop/uiotos/icons/functions/function.json",
                "arrExec": false,
                "function": "calculation",
                "inputs": {},
                "stripSingleInput": false,
                "_method": "SUB",
                "_reverse": true,
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    "output"
                ],
                "bindControlsTag": [
                    "func3"
                ],
                "bindControlsAttr": [
                    "exec"
                ],
                "bindControlsVal": [
                    null
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onOutput"
                ],
                "_bindEvents_0": "*",
                "exeWhenInput": true,
                "resetAfterInput": true,
                "inputsArrToObj": true,
                "output": 1,
                "exec": false,
                "inputKeys": [],
                "inputValues": []
            }
        },
        {
            "c": "ht.Edge",
            "i": 257670,
            "p": {
                "name": "edge",
                "displayName": "0（edge13'）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：exec@func3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：1</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
                "parent": {
                    "__i": 257669
                },
                "tag": "edge13'",
                "source": {
                    "__i": 257669
                },
                "target": {
                    "__i": 257667
                }
            },
            "s": {
                "label": "",
                "edge.color": "rgb(51,153,255)",
                "edge.width": 4,
                "edge.type": "flex",
                "edge.gap": 16,
                "note.border.width": 0,
                "note.position": 7,
                "note.font": "14px arial, sans-serif",
                "note.opacity": 0.75,
                "label.opacity": 0,
                "note.background": "rgb(51,153,255)",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：exec@func3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func4</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：1</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.UNode",
            "i": 257671,
            "p": {
                "name": "bus",
                "displayName": "事件总线（bus3'）",
                "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动</p>",
                "tag": "bus3'",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "triggerSend": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "callerRemote": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "contentRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "waitingRecv": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "topicsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "addrsWhiteList": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onEvent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onPostMessage": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Fri Feb 23 2024 10:49:05 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image"
                        },
                        {
                            "attr": "addressLocal",
                            "valueType": "Object",
                            "description": "收发器自身地址，默认为当前收发器的全局标签（topicSend发送主题属性也如此）。",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "mode",
                            "valueType": "EventBusMode",
                            "defaultValue": "both",
                            "description": "三种模式选择，包括\n接收器、发送器、收发器\n"
                        },
                        {
                            "attr": "callRecv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)",
                            "description": "收发器背景颜色"
                        },
                        {
                            "attr": "call.icon-background",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,199,7)",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "recv.icon-background",
                            "valueType": "Color",
                            "defaultValue": "#FF7C7C",
                            "description": "发送器背景颜色"
                        },
                        {
                            "attr": "addrsRemote",
                            "valueType": "ObjectArray",
                            "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
                            "group": "send",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicSend",
                            "valueType": "Object",
                            "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。"
                        },
                        {
                            "attr": "contentSend",
                            "valueType": "Object",
                            "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。"
                        },
                        {
                            "attr": "triggerSend",
                            "valueType": "Boolean",
                            "description": "执行发送",
                            "defaultValue": false
                        },
                        {
                            "attr": "triggerInit",
                            "valueType": "Boolean",
                            "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送"
                        },
                        {
                            "attr": "cacheDisabled",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否禁止缓存队列。\n<br>默认情况下，发送器发送的内容会追加到全局\n<br>异步队列中，当其他接收器动态初始化启动接\n<br>收时，当前发送存放到队列中的数据，会被接\n<br>收处理。\n<br>实现对话框内嵌接收器后启动并响应此前先发\n<br>送的消息，不会导致因为发送执行和启动接收\n<br>先后顺序不一致导致接收不到的问题。\n<br>勾选本属性，将禁止默认追加到缓存队列，可\n<br>以避免某些误操作。"
                        },
                        {
                            "attr": "addrsWhiteList",
                            "valueType": "ObjectArray",
                            "group": "recv",
                            "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsWhiteList",
                            "valueType": "ObjectArray",
                            "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
                            "defaultValue": [
                                "*"
                            ]
                        },
                        {
                            "attr": "topicsExtraInfo",
                            "valueType": "ObjectArray",
                            "description": "主题列表各自对应的描述信息。"
                        },
                        {
                            "attr": "callerRemote",
                            "valueType": "Object",
                            "description": "当前消息来源，即发送者，对象格式"
                        },
                        {
                            "attr": "topicRecv",
                            "valueType": "Object",
                            "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。"
                        },
                        {
                            "attr": "contentRecv",
                            "valueType": "Object",
                            "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。"
                        },
                        {
                            "attr": "waitingRecv",
                            "valueType": "Boolean",
                            "defaultValue": true,
                            "description": "启动监听，等待接收外部发送器\n的数据"
                        },
                        {
                            "attr": "messagPostGet",
                            "valueType": "Object",
                            "description": "接收到原生的postMessage消息，\n不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "waitingMsgPost",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "启动监听等待接收原生postMessage\n消息，不能传递图元对象，有别于收发器方式。"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "useAttrCORS",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "属性同源操作。\n                连线操作传递是否限定双方。比如有A/B/C/D/O五个组件，连线操作关系：\n                A→O、B→O、C→O、D→O，以及O→A、O→B、O→C、O→D，总结为\n                A、B、C、D分别与O有往返操作。\n                默认不勾选该属性时，A到D任何一个向O的连线操作，都不会影响到O自身\n                对A到D的下一步操作。勾选了该属性后，那么每次相邻的两次连线交互，\n                则会有同源选择性，比如A→O，下一步则O之会选择到A的操作即O→A。\n                同源操作通常用户多个组件共用一个配置弹窗的情况，比如上述A、B、C、D\n                相当于是四个同类型的组件，而O是公共的属性配置窗口，任何一个比如A点\n                击，可通过O弹窗显示属性，然后修改后将属性值回写到A，且并不会将值给\n                到其他几个组件，即便有连线在。\n                同源操作规则：当连线满足A/B→O.x，且有O.x→A/B时，即前一次组件A连线\n                操作O的x属性，那么，O对外触发且关联x属性值对外时，勾选了本属性同源\n                属性操作的前提下，将只会执行O.x→A，而忽略O.x→B/C等其他非A的图元组\n                件的连线操作。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "onEvent",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            },
                            "defaultValue": "__ht__function(data, gv, cache, param) {}",
                            "description": "收到总线事件消息。"
                        },
                        {
                            "attr": "onPostMessage",
                            "valueType": "Function",
                            "description": "收到跨网页iframe事件消息。",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
                    "width": 100,
                    "height": 100,
                    "visible": {
                        "func": "attr@visible",
                        "value": true
                    },
                    "comps": [{
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
                            "visible": false,
                            "prefix": "recv",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
                            "visible": false,
                            "prefix": "call",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                0,
                                100,
                                100
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rect": [
                                0,
                                37.47666,
                                64.0735,
                                66.39302
                            ]
                        },
                        {
                            "type": "image",
                            "color": null,
                            "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
                            "prefix": "callRecv",
                            "shadowColor": "rgb(61,61,61)",
                            "displayName": "node_image",
                            "rotation": 5.69426,
                            "rect": [
                                56.75093,
                                4.67922,
                                58.13316,
                                65.5949
                            ]
                        }
                    ],
                    "uuid": "01F0602D-4D1B-4415-B1B4-FE0066303726"
                },
                "host": {
                    "__i": 257641
                },
                "position": {
                    "x": -728.95351,
                    "y": 548.12787
                },
                "width": 100,
                "height": 100
            },
            "s": {
                "label.opacity": 0,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "2d.movable": false,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "layout.h": "left",
                "layout.v": "bottom"
            },
            "a": {
                "addressLocal": "bus3'@displays/develop/__favorites/widgets/嵌套容器/__封装/登录面板@应用平台@1700994616735.json",
                "topicSend": "bus3'@displays/develop/__favorites/widgets/嵌套容器/__封装/登录面板@应用平台@1700994616735.json",
                "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
                "triggerSend": false,
                "call.visible": true,
                "recv.visible": false,
                "callRecv.visible": false,
                "mode": "send",
                "addrsRemote": [
                    "titleBar-iconClick"
                ],
                "contentSend": false,
                "bindEvents": [
                    "*",
                    "onEvent"
                ]
            }
        }
    ],
    "modified": "Sun Mar 24 2024 22:21:24 GMT+0800 (中国标准时间)",
    "contentRect": {
        "x": -857.84658,
        "y": -320.51826,
        "width": 1224.38923,
        "height": 921.10878
    }
}