{
  "v": "7.7.5",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "connectActionType": null,
    "fitContent": false,
    "rectSelectable": false,
    "zoomable": false,
    "pannable": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 112151,
      "p": {
        "name": "switch-lite",
        "displayName": "switch-lite（switch-lite1）",
        "tag": "switch-lite1",
        "dataBindings": {
          "a": {
            "open": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onChange": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textClose": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textOpen": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "pureTipText": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri Jun 07 2024 12:10:31 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "open",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "功能",
              "description": "默认勾选\n<br>勾选为开启状态\n<br>不勾选为关闭状态",
              "name": "open"
            },
            {
              "attr": "textVisible",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否显示文本。",
              "name": "textVisible"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "description": "背景颜色。",
              "group": "外观",
              "name": "background"
            },
            {
              "attr": "closedColor",
              "valueType": "Color",
              "defaultValue": null,
              "description": "关闭状态下的颜色。",
              "name": "closedColor"
            },
            {
              "attr": "back.borderWidth",
              "valueType": "Number",
              "defaultValue": 1,
              "description": "边框宽度。",
              "name": "back.borderWidth"
            },
            {
              "attr": "back.radius",
              "valueType": "Number",
              "defaultValue": 18,
              "description": "圆角半径。",
              "name": "back.radius"
            },
            {
              "attr": "textOpen",
              "valueType": "String",
              "defaultValue": "开启",
              "description": "开启状态下的文本。",
              "name": "textOpen"
            },
            {
              "attr": "textClose",
              "valueType": "String",
              "defaultValue": "关闭",
              "description": "关闭状态下的文本。",
              "name": "textClose"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "defaultValue": "12px sans-serif, Arial",
              "description": "字体大小设置。",
              "name": "font"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "defaultValue": "__ht__function(data, gv, cache, value, extra) {}",
              "description": "变化时触发。\n<br>初始加载会发生。",
              "group": "事件",
              "name": "onChange"
            },
            {
              "attr": "onOpen",
              "valueType": "Function",
              "description": "打开时触发。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "name": "onOpen"
            },
            {
              "attr": "onClose",
              "valueType": "Function",
              "description": "关闭时触发。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "name": "onClose"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>\n一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，\n<br>不会作为数组的索引，而会当成常量值对外赋值。\n<br>\n二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会\n<br>将待输出的值作为被操作数组指定索引的值来传入，而不是整体\n<br>覆盖。\n<br>\n情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>\n情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>\n三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框",
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "name": "popTriggerEvent",
              "dynamicCreate": true
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/开关.json",
          "onUp": "__ht__function(event, data, view, point, width, height) {\ndata.ca('open',!data.ca('open'));\n}",
          "onEnter": "__ht__function(event, data, view, point, width, height) {\nview.getView().style.cursor = 'pointer'\n}",
          "onLeave": "__ht__function(event, data, view, point, width, height) {\nview.getView().style.cursor = 'default'\n}",
          "renderHTML": "__ht__function(data, gv, cache) {__switch_lite(data,gv,cache);}",
          "width": 82,
          "height": 35,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "roundRect",
              "background": {
                "func": "attr@background",
                "value": "rgb(0,199,7)"
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 1
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(0,199,7)"
              },
              "borderWidthAbsolute": true,
              "cornerRadius": {
                "func": "attr@radius",
                "value": 18
              },
              "layoutH": "center",
              "layoutV": "center",
              "prefix": "back",
              "displayName": "n（n1）",
              "rect": [
                2.59922,
                1,
                76.80155,
                33
              ]
            },
            {
              "type": "oval",
              "background": {
                "func": "attr@background",
                "value": "rgb(255,255,255)"
              },
              "borderColor": "#979797",
              "layoutH": "center",
              "layoutV": "center",
              "prefix": "dot",
              "scaleX": {
                "func": "attr@dotScale",
                "value": 1
              },
              "scaleY": {
                "func": "attr@dotScale",
                "value": 1
              },
              "rect": {
                "func": "attr@rect",
                "value": [
                  48.5,
                  5,
                  25,
                  25
                ]
              }
            },
            {
              "type": "text",
              "text": {
                "func": "attr@text",
                "value": "开启"
              },
              "align": "center",
              "color": {
                "func": "attr@textColor",
                "value": "rgb(255,255,255)"
              },
              "font": {
                "func": "attr@font",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@textVisible",
                "value": true
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "打开",
              "scaleX": {
                "func": "attr@textScale",
                "value": 1
              },
              "scaleY": {
                "func": "attr@textScale",
                "value": 1
              },
              "rect": {
                "func": "attr@textRect",
                "value": [
                  15.44891,
                  9.5,
                  30,
                  18
                ]
              }
            }
          ],
          "uuid": "B19E2F32-97DB-4022-89AD-1994F1ADFE4F"
        },
        "position": {
          "x": 341,
          "y": 291
        },
        "width": 80,
        "height": 35
      },
      "s": {
        "interactive": true,
        "image.stretch": "uniform",
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "label.opacity": 0
      },
      "a": {
        "back.background": "rgb(0,199,7)",
        "dot.background": "white",
        "text": "开启",
        "textColor": "white",
        "textRect": [
          15,
          8.5,
          30,
          18
        ],
        "back.borderColor": "rgb(0,199,7)",
        "dot.rect": [
          47.5,
          5,
          25,
          25
        ],
        "open": true,
        "bindEvents": [
          "*",
          "onChange",
          "onOpen"
        ],
        "gapsAdjust": [
          0,
          0
        ],
        "symbol": "symbols/admin/uiotos/base/switch-lite.json"
      }
    }
  ],
  "modified": "Thu Jun 13 2024 10:44:50 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": 301,
    "y": 273.5,
    "width": 80,
    "height": 54.34766
  }
}