{
  "v": "8.0.1",
  "p": {
    "background": "#20252e",
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "gridAngle": 1.5708,
    "connectActionType": null,
    "fitContent": true,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_pageCompress": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 52462,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv1）",
        "tag": "gv1",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "vt": "URL",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "vt": "String",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "vt": null,
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:onReceived": {
              "id": "iotos.formReset",
              "vt": "Function",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:url": {
              "id": "iotos.formReset",
              "vt": "ObjectArray",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:defaultOpen": {
              "id": "iotos.formReset",
              "vt": "Boolean",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:comment": {
              "id": "iotos.formReset",
              "vt": "Multiline",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:enableLoading": {
              "id": "iotos.formReset",
              "vt": "Boolean",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:fakeRecvEnabled": {
              "id": "iotos.formReset",
              "vt": "Boolean",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:fakeReturnDelay": {
              "id": "iotos.formReset",
              "vt": "PositiveNumber",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>api1>a:fakeApiReceived": {
              "id": "iotos.formReset",
              "vt": "Object",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "httpAlert>0>输出>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:paramValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:requesting": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:jsonFormat": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:response": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:_function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__queryCount>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:paramKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:dataIsJsonString": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:contentType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:dataType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:download": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:bindControlsVal": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:tokenType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:authToken": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:tokenFieldParsed": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:type": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_type": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_title": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_region": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_duration": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_fixedWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:_fixedHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>__optAlert>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>func7>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:_function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>输出>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:noteTips": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>ifAlert>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "httpAlert>0>api1>a:httpType": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Mar 18 2024 21:04:52 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "defaultValue": "",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "name": "innerLayoutMode"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "useOriginSize"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "defaultValue": false,
              "name": "isLoadingGet"
            },
            {
              "attr": "reset",
              "valueType": "Level2",
              "defaultValue": 0,
              "name": "reset"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ]
              },
              "description": "加载完成后初始化。",
              "name": "onPostDeserialize"
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "group": "数据",
              "name": "userData"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "加载完成后初始化。",
              "name": "pureFormValues"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "内嵌页背景色。",
              "name": "innerBackground"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "显示Json。",
              "name": "displayJson"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。",
              "group": "事件",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "httpAlert>0>__queryCount>a:userData",
              "name": ".用户数据",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:output",
              "name": ".输出",
              "valueType": "Object",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:inputs",
              "name": ".输入（组）",
              "valueType": "Object",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n自定义函数的传入参数。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:exec",
              "name": ".执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:arrExec",
              "name": ".遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:noteTips",
              "name": ".别名注释",
              "valueType": "Multiline",
              "defaultValue": "获取返回记录的条数",
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:function",
              "name": ".功能选项",
              "valueType": "ToolFunction",
              "defaultValue": "codeBlock",
              "extraInfo": "*",
              "description": "代码模块（高级）",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:onOutput",
              "name": ".输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:_function",
              "name": ".自定义代码 ☆",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "description": "自定义工具函数功能代码。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#mbNJh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:outputByEvent",
              "name": ".输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:inputKeys",
              "name": ".输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>__queryCount>a:inputValues",
              "name": ".输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__queryCount"
            },
            {
              "attr": "httpAlert>0>api1>a:paramKeys",
              "name": ".参数键组 ★",
              "valueType": "StringArray",
              "defaultValue": [],
              "extraInfo": "★",
              "description": "与参数对象对应的字段键组。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#u6buE' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:paramValues",
              "name": ".参数值组 ★",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "★",
              "description": "与参数对象对应的字段值组。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#PAnHH' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:jsonFormat",
              "name": ".参数对象",
              "valueType": "Object",
              "defaultValue": {},
              "description": "接口的参数对象。与键组、值组对应。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#lcwQZ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:dataIsJsonString",
              "name": ".用作文本",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "*",
              "description": "勾选时，参数对象将为文本传参。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#N8jdC' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:contentType",
              "name": ".发送类型 *",
              "valueType": "ContentType",
              "defaultValue": "application/json",
              "extraInfo": "*",
              "description": "HTTP发送的ContentType类型。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#snC59' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:dataType",
              "name": ".返回类型 *",
              "valueType": "DateType",
              "defaultValue": "JSON",
              "extraInfo": "*",
              "description": "HTTP返回的DateType类型。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#PTGeY' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:response",
              "name": ".返回",
              "valueType": "ObjectArray",
              "defaultValue": [
                "",
                ""
              ],
              "description": "接口请求返回状态和数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#Lh7Qu' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:requesting",
              "name": ".请求",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "执行接口调用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#XHdkQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:download",
              "name": ".下载 *",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "下载链接文件（或打开页面）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#KmDge' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:onReceived",
              "name": ".返回事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:url",
              "name": ".接口地址",
              "valueType": "ObjectArray",
              "defaultValue": [
                "http://14.22.85.37:19999/",
                ""
              ],
              "description": "服务器接口请求地址URL。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#dBRGh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:enableLoading",
              "name": ".加载动画 ★",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "执行请求过程中，开启过度旋转动画。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#Y3X9o' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:defaultOpen",
              "name": ".默认打开 ★",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "页面初始加载时，自动执行接口请求。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#NHHLf' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:comment",
              "name": ".接口注释",
              "valueType": "Multiline",
              "defaultValue": "接口名称",
              "description": "接口名称和用途备注。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#FBsQy' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:bindControlsVal",
              "name": ".解析赋值",
              "valueType": "ObjectArray",
              "defaultValue": [
                "result",
                "message",
                null,
                null,
                "result"
              ],
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:tokenType",
              "name": ".鉴权类型 *",
              "valueType": "String",
              "defaultValue": "X-Access-Token",
              "extraInfo": {
                "enum": {
                  "values": [
                    "JWT",
                    "X-Access-Token",
                    "custom"
                  ]
                },
                "classify": "*"
              },
              "description": "接口请求时的Token鉴权方式。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#FNsDK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:authToken",
              "name": ".鉴权Token *",
              "valueType": "String",
              "defaultValue": "",
              "extraInfo": "*",
              "description": "鉴权token，用于需要接口调用传入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#jG3jj' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:tokenFieldParsed",
              "name": ".Token字段 ★",
              "valueType": "String",
              "defaultValue": "",
              "extraInfo": "★",
              "description": "提取返回数据中token的解析字符串。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#dn0ZD' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:type",
              "name": ".接口类型",
              "valueType": "InterfaceType",
              "defaultValue": "http",
              "description": "接口类型选项。\n<br>选择HTTP、MQTT或WebSocket。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#wKQSX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:fakeRecvEnabled",
              "name": ".开启模拟",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否启用接口数据模拟。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#QR7qt' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:fakeReturnDelay",
              "name": ".模拟延迟 ★",
              "valueType": "PositiveNumber",
              "defaultValue": 400,
              "extraInfo": "★",
              "description": "模拟接口请求过程的延时。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#V0c1Y' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:fakeApiReceived",
              "name": ".模拟返回",
              "valueType": "Object",
              "defaultValue": {},
              "description": "开启模拟后，用于对外输出的模拟数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#IbRhv' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:response",
              "name": ".返回",
              "valueType": "ObjectArray",
              "defaultValue": [
                "",
                ""
              ],
              "description": "接口请求返回状态和数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#Lh7Qu' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>api1>a:httpType",
              "name": ".请求类型",
              "valueType": "HttpType",
              "defaultValue": 0,
              "description": "选择GET、POST、PUT或DELETE。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#crgbh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>api1"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:inputs",
              "name": ".输入（组）",
              "valueType": "Object",
              "defaultValue": [
                ""
              ],
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n用于设置信息内容。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:exec",
              "name": ".执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:arrExec",
              "name": ".遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_type",
              "name": ".提示类型 ☆",
              "valueType": "MessageType",
              "defaultValue": "alert",
              "description": "选择提示的类型，包括错误、警告等。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#xjFTO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_title",
              "name": ".标题文字 ☆",
              "valueType": "String",
              "defaultValue": "操作结果",
              "description": "显示标题。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#RZSQ9' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_region",
              "name": ".显示位置 ☆",
              "valueType": "Region",
              "defaultValue": "top",
              "description": "信息显示在屏幕的相对位置。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#jtgSW' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_duration",
              "name": ".持续时间 ☆",
              "valueType": "PositiveNumber",
              "defaultValue": 1000,
              "description": "信息停留的时长，0为不自动消失。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#BdQHk' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_fixedWidth",
              "name": ".固定宽度 ☆",
              "valueType": "PositiveNumber",
              "defaultValue": 300,
              "description": "提示区域宽度（提示条或对话框）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#lVQFA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:noteTips",
              "name": ".别名注释",
              "valueType": "Multiline",
              "defaultValue": "弹窗提示message",
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:onOutput",
              "name": ".输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:_fixedHeight",
              "name": ".固定高度 ☆",
              "valueType": "PositiveNumber",
              "defaultValue": 160,
              "description": "固定高度（仅对弹窗确认选项有效）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#ZJQFE' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:outputByEvent",
              "name": ".输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:inputKeys",
              "name": ".输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>__optAlert>a:inputValues",
              "name": ".输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>__optAlert"
            },
            {
              "attr": "httpAlert>0>func7>a:userData",
              "name": ".用户数据",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:output",
              "name": ".输出",
              "valueType": "Object",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:inputs",
              "name": ".输入（组）",
              "valueType": "Object",
              "defaultValue": "接口名称",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n用于被连线操作。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:exec",
              "name": ".执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:arrExec",
              "name": ".遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:onOutput",
              "name": ".输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:outputByEvent",
              "name": ".输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:inputKeys",
              "name": ".输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>func7>a:inputValues",
              "name": ".输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>func7"
            },
            {
              "attr": "httpAlert>0>输出>a:userData",
              "name": ".用户数据",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:output",
              "name": ".输出",
              "valueType": "Object",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:inputs",
              "name": ".输入（组）",
              "valueType": "Object",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n自定义函数的传入参数。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:exec",
              "name": ".执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:arrExec",
              "name": ".遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:onOutput",
              "name": ".输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:_function",
              "name": ".自定义代码 ☆",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "description": "自定义工具函数功能代码。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#mbNJh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:outputByEvent",
              "name": ".输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:inputKeys",
              "name": ".输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>输出>a:inputValues",
              "name": ".输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>输出"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:userData",
              "name": ".用户数据",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:output",
              "name": ".输出",
              "valueType": "Object",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:inputs",
              "name": ".输入（组）",
              "valueType": "Object",
              "defaultValue": true,
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:exec",
              "name": ".执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:arrExec",
              "name": ".遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:noteTips",
              "name": ".别名注释",
              "valueType": "Multiline",
              "defaultValue": "是否弹窗？",
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:onOutput",
              "name": ".输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:inputKeys",
              "name": ".输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:inputValues",
              "name": ".输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "httpAlert>0>ifAlert"
            },
            {
              "attr": "httpAlert>0>ifAlert>a:outputByEvent",
              "name": ".输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "httpAlert>0>ifAlert"
            }
          ],
          "snapshotURL": "icon.base.graphView",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText') && data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "CF13410B-DE64-41A5-A56B-8A3C37451902"
        },
        "position": {
          "x": 1102.94585,
          "y": 489.83177
        },
        "width": 992.76394,
        "height": 699.71972
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(51,153,255)",
        "interactive": true,
        "image.stretch": "uniform",
        "label": "固定参数查询或提交",
        "label.font": "26px arial, sans-serif",
        "label.align": "left"
      },
      "a": {
        "display": "./httpAlert.json",
        "symbol": "symbols/develop/uiotos/base/graphView.json",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "httpAlert>0>api1>a:onReceived"
        ],
        "bindControlsTag": [
          "func2"
        ],
        "bindControlsAttr": [
          "inputs"
        ],
        "bindControlsVal": [
          "a:httpAlert>0>api1>a:response.1.result"
        ],
        "innerLayoutMode": "fitContent",
        "isLoadingGet": false,
        "__loadingStatus": false,
        "httpAlert>0>api1>a:url": [
          "http://14.22.85.37:19999/",
          ""
        ],
        "httpAlert>0>api1>a:enableLoading": true,
        "httpAlert>0>api1>a:defaultOpen": false,
        "httpAlert>0>api1>a:comment": "接口名称",
        "httpAlert>0>api1>a:fakeRecvEnabled": false,
        "httpAlert>0>api1>a:fakeReturnDelay": 400,
        "httpAlert>0>api1>a:fakeApiReceived": {},
        "httpAlert>0>api1>a:paramValues": [],
        "httpAlert>0>api1>a:jsonFormat": {},
        "httpAlert>0>api1>a:response": [
          "",
          ""
        ],
        "httpAlert>0>api1>a:requesting": false,
        "httpAlert>0>__queryCount>a:userData": [],
        "httpAlert>0>__queryCount>a:exec": false,
        "httpAlert>0>__queryCount>a:arrExec": false,
        "httpAlert>0>__queryCount>a:noteTips": "获取返回记录的条数",
        "httpAlert>0>__queryCount>a:function": "codeBlock",
        "httpAlert>0>__queryCount>a:outputByEvent": true,
        "httpAlert>0>__queryCount>a:inputKeys": [],
        "httpAlert>0>__queryCount>a:inputValues": [],
        "httpAlert>0>api1>a:paramKeys": [],
        "httpAlert>0>api1>a:dataIsJsonString": true,
        "httpAlert>0>api1>a:contentType": "application/json",
        "httpAlert>0>api1>a:dataType": "JSON",
        "httpAlert>0>api1>a:download": false,
        "httpAlert>0>api1>a:bindControlsVal": [
          "result",
          "message",
          null,
          null,
          "result"
        ],
        "httpAlert>0>api1>a:tokenType": "X-Access-Token",
        "httpAlert>0>api1>a:authToken": "",
        "httpAlert>0>api1>a:tokenFieldParsed": "",
        "httpAlert>0>api1>a:type": "http",
        "httpAlert>0>__optAlert>a:userData": [],
        "httpAlert>0>__optAlert>a:inputs": [
          ""
        ],
        "httpAlert>0>__optAlert>a:exec": false,
        "httpAlert>0>__optAlert>a:arrExec": false,
        "httpAlert>0>__optAlert>a:_type": "alert",
        "httpAlert>0>__optAlert>a:_title": "操作结果",
        "httpAlert>0>__optAlert>a:_region": "top",
        "httpAlert>0>__optAlert>a:_duration": 1000,
        "httpAlert>0>__optAlert>a:_fixedWidth": 300,
        "httpAlert>0>__optAlert>a:noteTips": "弹窗提示message",
        "httpAlert>0>__optAlert>a:_fixedHeight": 160,
        "httpAlert>0>__optAlert>a:outputByEvent": true,
        "httpAlert>0>__optAlert>a:inputKeys": [],
        "httpAlert>0>__optAlert>a:inputValues": [],
        "httpAlert>0>func7>a:userData": [],
        "httpAlert>0>func7>a:inputs": "接口名称",
        "httpAlert>0>func7>a:exec": false,
        "httpAlert>0>func7>a:arrExec": false,
        "httpAlert>0>func7>a:outputByEvent": true,
        "httpAlert>0>func7>a:inputKeys": [],
        "httpAlert>0>func7>a:inputValues": [],
        "httpAlert>0>输出>a:userData": [],
        "httpAlert>0>输出>a:exec": false,
        "httpAlert>0>输出>a:arrExec": false,
        "httpAlert>0>输出>a:outputByEvent": true,
        "httpAlert>0>输出>a:inputKeys": [],
        "httpAlert>0>输出>a:inputValues": [],
        "httpAlert>0>ifAlert>a:userData": [],
        "httpAlert>0>ifAlert>a:inputs": true,
        "httpAlert>0>ifAlert>a:exec": false,
        "httpAlert>0>ifAlert>a:arrExec": false,
        "httpAlert>0>ifAlert>a:noteTips": "是否弹窗？",
        "httpAlert>0>ifAlert>a:inputKeys": [],
        "httpAlert>0>ifAlert>a:inputValues": [],
        "httpAlert>0>ifAlert>a:outputByEvent": true
      }
    },
    {
      "c": "ht.Edge",
      "i": 52463,
      "p": {
        "name": "edge",
        "displayName": "0（edge5）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：httpAlert&gt;0&gt;api1&gt;返回事件@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：a:httpAlert&gt;0&gt;api1&gt;a:response.1.result</li>\n                                                    </div>",
        "parent": {
          "__i": 52462
        },
        "tag": "edge5",
        "source": {
          "__i": 52462
        },
        "target": {
          "__i": 52467
        }
      },
      "s": {
        "label": "",
        "edge.color": "#D99E91",
        "edge.type": "flex",
        "edge.gap": 16,
        "edge.width.absolute": true,
        "note.border.width": 0,
        "note.position": 7,
        "note.opacity": 0.85,
        "note.background": "#D99E91",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "note.expanded": false
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：httpAlert&gt;0&gt;api1&gt;返回事件@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：a:httpAlert&gt;0&gt;api1&gt;a:response.1.result</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 52464,
      "p": {
        "name": "func",
        "displayName": "工具函数（paramValues）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>旧版的传参方式，保留兼容，不太建议再使用。</span>",
        "tag": "paramValues",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputs": {
              "id": "iotos.form",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false,
              "alias": ""
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "_rawForm": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "_pureFormValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "获取组件属性值。\n                主动获取任意组件的任意属性值，通过连线连入操作自身的输入组（inputs）属性。\n                与常规的连线连出操作不一样，常规是通过组件自身的事件触发连线执行动作，而\n                本函数是主动查取属性值并输出，而连线操作和配置规则都一样，包括连线方向、数\n                据赋值解析等。\n                注意，连入本函数输出入组的线默认为虚线样式。此外，支持多个不同组件的不同属\n                性同时连入当前函数输入组，输出时会自动将这些值进行合并，合并规则如下：\n                1）多条连线分别输入的最终值都是数组时，将数组合并成一个大数组输出，比如三\n                条连线分别传入[1,2],[3],[4,5,6]，那么最终输出[1,2,3,4,5,6]。\n                2）多条连线分别输入的最终值都是对象时，将对象合并成一个大对象输出，比如3\n                条连线分别传入{a:1},{b:2,c:3},{d:4,e:5,f:6}，合并输出为{a:1,b:2,c:3,d:4,\n                e:5,f:6}。\n                3）其他情况下将输出对象，以各自组件的标签tag为key，传入的值为value组成对象。\n                比如4条连线分别传入值为1,{a:2},3,[4,5,6]，分别标签为tag1、tag2、tag3、tag4，\n                那么将输出对象：{tag1:1, tag2:{a:2}, tag3:3, tag4:[4,5,6]}\n                4）如果只有一条连线输入，那么输出就是这条连线的输入值，不会作任何转换处理。\n                同时，还支持对容器组件以表单操作方式连入，关联为空（不选择属性），此时默认获\n                取其formValue表单对象。如果勾选了_rawForm，那么获取完整表单对象作为输入。\n                _rawForm属性的勾选与否，仅对\n                "
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n用于被连线操作。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "_pureFormValues",
              "valueType": "Boolean",
              "name": "纯表单 ☆",
              "defaultValue": true,
              "description": "是否仅采用纯表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#QmIFV' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_rawForm",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "原始属性表单。\n                    包含所有做了form、 formReset、 formValue绑定的属性。",
              "extraInfo": "~",
              "name": "_rawForm",
              "dynamicCreate": true
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#wtjRK style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "D3D502E3-7532-4951-AF81-DD6A2A8DC8AE"
        },
        "position": {
          "x": 497.27173,
          "y": 801.26251
        }
      },
      "s": {
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "获取组件属性值。",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "fullscreen.gap": 0,
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "note": "[func8] 您是否忘记勾选“输入时执行（exeWhenInput）\n”属性，或者需要连线操作执行属性，避免函数无法触发\n执行。                                            ",
        "label.align": "left",
        "label.opacity": 1
      },
      "a": {
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>旧版的传参方式，保留兼容，不太建议再使用。</span>",
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "function": "formValues",
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          "output",
          "output"
        ],
        "bindControlsTag": [
          "gv1",
          "gv1"
        ],
        "bindControlsAttr": [
          "httpAlert>0>api1>a:paramValues",
          "httpAlert>0>api1>a:requesting"
        ],
        "bindControlsVal": [
          null,
          null
        ],
        "paramBindEvent": [],
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "noteTips": "获取组件属性值。",
        "inputs": [
          "",
          "",
          1,
          100
        ],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "_bindEvents_1-list": [
          "*",
          "onOutput"
        ],
        "stripSingleInput": false,
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "_forbidInherit": false,
        "arrExec": false,
        "jsonStruct": 1
      }
    },
    {
      "c": "ht.Edge",
      "i": 52465,
      "p": {
        "name": "edge",
        "displayName": "0（edge2）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:paramValues@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@paramValues</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>",
        "parent": {
          "__i": 52464
        },
        "tag": "edge2",
        "source": {
          "__i": 52464
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "#AAA6E2",
        "edge.type": "ortho",
        "edge.gap": 16,
        "edge.width.absolute": true,
        "note.border.width": 0,
        "note.position": 7,
        "note.opacity": 0.85,
        "note.background": "#AAA6E2",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 3,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:paramValues@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@paramValues</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 52466,
      "p": {
        "name": "edge",
        "displayName": "1（edge3）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;请求@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：输出@paramValues</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>",
        "parent": {
          "__i": 52464
        },
        "tag": "edge3",
        "source": {
          "__i": 52464
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "#48215F",
        "edge.type": "h.v",
        "edge.gap": 16,
        "edge.width.absolute": true,
        "note.border.width": 0,
        "note.position": 7,
        "note.opacity": 0.85,
        "note.background": "#48215F",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1,
        "label.position": 32
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;请求@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：输出@paramValues</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 52467,
      "p": {
        "name": "func",
        "displayName": "工具函数（func2）",
        "toolTip": "代码模块（高级）<br>codeBlock",
        "tag": "func2",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputs": {
              "id": "iotos.form",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false,
              "alias": ""
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "_function": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "代码模块（高级）"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n自定义函数的传入参数。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "_function",
              "valueType": "Function",
              "name": "自定义代码 ☆",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "bindIgnored": true,
              "description": "自定义工具函数功能代码。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#mbNJh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "defaultValue": "__ht__function(data, gv, cache, inputs) {return inputs;}",
              "dynamicCreate": true
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "D3D502E3-7532-4951-AF81-DD6A2A8DC8AE"
        },
        "position": {
          "x": 1102.94585,
          "y": 901.04583
        }
      },
      "s": {
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": " ",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "inputs": {
          "a:inputs": [
            {
              "readyState": 4,
              "getResponseHeader": "__ht__function(e) {\r\n                        var t;\r\n                        if (h) {\r\n                            if (!n) { n = {}; while (t = Wt.exec(p)) n[t[1].toLowerCase() + \" \"] = (n[t[1].toLowerCase() + \" \"] || []).concat(t[2]) }\r\n                            t = n[e.toLowerCase() + \" \"]\r\n                        }\r\n                        return null == t ? null : t.join(\", \")\r\n                    }",
              "getAllResponseHeaders": "__ht__function() { return h ? p : null }",
              "setRequestHeader": "__ht__function(e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }",
              "overrideMimeType": "__ht__function(e) { return null == h && (v.mimeType = e), this }",
              "statusCode": "__ht__function(e) {\r\n                        var t;\r\n                        if (e)\r\n                            if (h) T.always(e[T.status]);\r\n                            else\r\n                                for (t in e) w[t] = [w[t], e[t]];\r\n                        return this\r\n                    }",
              "abort": "__ht__function(e) { var t = e || u; return c && c.abort(t), l(0, t), this }",
              "state": "__ht__function() { return i }",
              "always": "__ht__function() { return s.done(arguments).fail(arguments), this }",
              "catch": "__ht__function(e) { return a.then(null, e) }",
              "pipe": "__ht__function() {\r\n                        var i = arguments;\r\n                        return ce.Deferred(function(r) {\r\n                            ce.each(o, function(e, t) {\r\n                                var n = v(i[t[4]]) && i[t[4]];\r\n                                s[t[1]](function() {\r\n                                    var e = n && n.apply(this, arguments);\r\n                                    e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + \"With\"](this, n ? [e] : arguments)\r\n                                })\r\n                            }), i = null\r\n                        }).promise()\r\n                    }",
              "then": "__ht__function(t, n, r) {\r\n                        var u = 0;\r\n\r\n                        function l(i, o, a, s) {\r\n                            return function() {\r\n                                var n = this,\r\n                                    r = arguments,\r\n                                    e = function() {\r\n                                        var e, t;\r\n                                        if (!(i < u)) {\r\n                                            if ((e = a.apply(n, r)) === o.promise()) throw new TypeError(\"Thenable self-resolution\");\r\n                                            t = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0, r = [e]), (s || o.resolveWith)(n, r))\r\n                                        }\r\n                                    },\r\n                                    t = s ? e : function() { try { e() } catch (e) { ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && (n = void 0, r = [e]), o.rejectWith(n, r)) } };\r\n                                i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t))\r\n                            }\r\n                        }\r\n                        return ce.Deferred(function(e) { o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q)) }).promise()\r\n                    }",
              "promise": "__ht__function(e) { return null != e ? ce.extend(e, a) : a }",
              "progress": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "done": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "fail": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "responseText": "{\"timestamp\":\"2023-08-11T21:55:25.946+00:00\",\"status\":400,\"error\":\"Bad Request\",\"path\":\"/get\"}",
              "responseJSON": {
                "timestamp": "2023-08-11T21:55:25.946+00:00",
                "status": 400,
                "error": "Bad Request",
                "path": "/get"
              },
              "status": 400,
              "statusText": "error"
            },
            0
          ],
          "a:exec": false
        },
        "fields": [
          "job_number",
          "name",
          "phone",
          "account_name",
          "job_title",
          "account_state",
          "user_role"
        ],
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "label.align": "left",
        "note": "[func1] 函数组件通常关联\"输出（output）\"属性对外操\n作，而索引为0的连线关联了fields                   ",
        "label.opacity": 0,
        "label.position": 17
      },
      "a": {
        "function": "codeBlock",
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "exeWhenInput": true,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "output"
        ],
        "bindControlsTag": [
          "datas"
        ],
        "bindControlsAttr": [
          "inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "inputs": [],
        "paramBindEvent": [],
        "resetAfterInput": true,
        "stripSingleInput": false,
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "_forbidInherit": false,
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "noteTips": " ",
        "_function": "__ht__function(data, gv, cache, inputs) {if(isArrayFn(inputs)) return inputs;\r\nelse if(isArrayFn(inputs.records)) return inputs.records;\r\n//240310，对于停车场数据报表接口反话格式存在result下面直接是对象key-value的情况，并非记录集，因此return undefined即可，否则会被当作树表格数据格式解析！\r\nelse if(isObject(inputs) && !i.isObjEmpty(inputs)) return undefined; \r\nelse console.assert(0);}",
        "toolTipRaw": "代码模块（高级）<br>codeBlock",
        "arrExec": false,
        "jsonStruct": 1,
        "old.label.position": 31
      }
    },
    {
      "c": "ht.Edge",
      "i": 52468,
      "p": {
        "name": "edge",
        "displayName": "0（edge5'）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@datas</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52467
        },
        "tag": "edge5'",
        "source": {
          "__i": 52467
        },
        "target": {
          "__i": 52469
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@datas</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 52469,
      "p": {
        "name": "func",
        "displayName": "工具函数（datas）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>查询返给给树表格时才需要用到这里的输出。</span>",
        "tag": "datas",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputs": {
              "id": "iotos.form",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false,
              "alias": ""
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "fields": {
              "id": "iotos.form",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false,
              "alias": ""
            },
            "keyId": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "keyParent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "keyChildren": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "appendTo": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "查询返回转换成树表"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n输入待转换的对象。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "fields",
              "valueType": "ObjectArray",
              "defaultValue": [
                "name"
              ],
              "name": "数据字段 ☆",
              "bindIgnored": true,
              "description": "对象数组中指定字段，与树表格各列对应。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#YjfGl' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "keyId",
              "valueType": "String",
              "defaultValue": "id",
              "name": "主键字段 ☆",
              "bindIgnored": true,
              "description": "数据集中的主键字段。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#l8mgQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "keyParent",
              "valueType": "String",
              "defaultValue": "parent",
              "name": "父级字段 ☆",
              "bindIgnored": true,
              "description": "指向数据父级节点的字段名称。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#X8LHC' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "keyChildren",
              "valueType": "String",
              "defaultValue": "children",
              "name": "子级字段 ☆",
              "bindIgnored": true,
              "description": "指向数据子级节点的字段名称。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#VDsp4' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "appendTo",
              "valueType": "Object",
              "name": "追加到 ☆",
              "bindIgnored": true,
              "description": "指定树表格行ID，将数据追加到节点下。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#WzolJ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#GAkdk style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "D3D502E3-7532-4951-AF81-DD6A2A8DC8AE"
        },
        "position": {
          "x": 1291.03869,
          "y": 901.04583
        }
      },
      "s": {
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "查询返回转换成树表，其中按照顺序规定好字段，\n可以有多出的字段用于点击交互接口传参，不用\n于表格显示。",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "inputs": {
          "a:inputs": [
            {
              "readyState": 4,
              "getResponseHeader": "__ht__function(e) {\r\n                        var t;\r\n                        if (h) {\r\n                            if (!n) { n = {}; while (t = Wt.exec(p)) n[t[1].toLowerCase() + \" \"] = (n[t[1].toLowerCase() + \" \"] || []).concat(t[2]) }\r\n                            t = n[e.toLowerCase() + \" \"]\r\n                        }\r\n                        return null == t ? null : t.join(\", \")\r\n                    }",
              "getAllResponseHeaders": "__ht__function() { return h ? p : null }",
              "setRequestHeader": "__ht__function(e, t) { return null == h && (e = s[e.toLowerCase()] = s[e.toLowerCase()] || e, a[e] = t), this }",
              "overrideMimeType": "__ht__function(e) { return null == h && (v.mimeType = e), this }",
              "statusCode": "__ht__function(e) {\r\n                        var t;\r\n                        if (e)\r\n                            if (h) T.always(e[T.status]);\r\n                            else\r\n                                for (t in e) w[t] = [w[t], e[t]];\r\n                        return this\r\n                    }",
              "abort": "__ht__function(e) { var t = e || u; return c && c.abort(t), l(0, t), this }",
              "state": "__ht__function() { return i }",
              "always": "__ht__function() { return s.done(arguments).fail(arguments), this }",
              "catch": "__ht__function(e) { return a.then(null, e) }",
              "pipe": "__ht__function() {\r\n                        var i = arguments;\r\n                        return ce.Deferred(function(r) {\r\n                            ce.each(o, function(e, t) {\r\n                                var n = v(i[t[4]]) && i[t[4]];\r\n                                s[t[1]](function() {\r\n                                    var e = n && n.apply(this, arguments);\r\n                                    e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + \"With\"](this, n ? [e] : arguments)\r\n                                })\r\n                            }), i = null\r\n                        }).promise()\r\n                    }",
              "then": "__ht__function(t, n, r) {\r\n                        var u = 0;\r\n\r\n                        function l(i, o, a, s) {\r\n                            return function() {\r\n                                var n = this,\r\n                                    r = arguments,\r\n                                    e = function() {\r\n                                        var e, t;\r\n                                        if (!(i < u)) {\r\n                                            if ((e = a.apply(n, r)) === o.promise()) throw new TypeError(\"Thenable self-resolution\");\r\n                                            t = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, v(t) ? s ? t.call(e, l(u, o, N, s), l(u, o, q, s)) : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith))) : (a !== N && (n = void 0, r = [e]), (s || o.resolveWith)(n, r))\r\n                                        }\r\n                                    },\r\n                                    t = s ? e : function() { try { e() } catch (e) { ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && (n = void 0, r = [e]), o.rejectWith(n, r)) } };\r\n                                i ? t() : (ce.Deferred.getErrorHook ? t.error = ce.Deferred.getErrorHook() : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t))\r\n                            }\r\n                        }\r\n                        return ce.Deferred(function(e) { o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q)) }).promise()\r\n                    }",
              "promise": "__ht__function(e) { return null != e ? ce.extend(e, a) : a }",
              "progress": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "done": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "fail": "__ht__function() { return s && (t && !i && (l = s.length - 1, u.push(t)), function n(e) { ce.each(e, function(e, t) { v(t) ? r.unique && f.has(t) || s.push(t) : t && t.length && \"string\" !== x(t) && n(t) }) }(arguments), t && !i && c()), this }",
              "responseText": "{\"timestamp\":\"2023-08-11T21:55:25.946+00:00\",\"status\":400,\"error\":\"Bad Request\",\"path\":\"/get\"}",
              "responseJSON": {
                "timestamp": "2023-08-11T21:55:25.946+00:00",
                "status": 400,
                "error": "Bad Request",
                "path": "/get"
              },
              "status": 400,
              "statusText": "error"
            },
            0
          ],
          "a:exec": false
        },
        "fields": [
          "job_number",
          "name",
          "phone",
          "account_name",
          "job_title",
          "account_state",
          "user_role"
        ],
        "note.font": "22px arial, sans-serif",
        "note.color": "rgb(212,0,0)",
        "note.background": "rgb(255,235,195)",
        "note.position": 3,
        "note.offset.x": 0,
        "note.offset.y": -5,
        "note.border.width": 10,
        "note.border.color": "rgb(255,235,195)",
        "note.opacity": 0,
        "note.align": "left",
        "label.align": "left",
        "note": "[func1] 函数组件通常关联\"输出（output）\"属性对外操\n作，而索引为0的连线关联了fields                   ",
        "label.opacity": 1
      },
      "a": {
        "function": "dbQueryToTreeTable",
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "exeWhenInput": true,
        "paramControlTag": [],
        "paramControlAttr": [],
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "fields": [
          "facialAccessId",
          "facialAccessName",
          "facialAccessPosition",
          "authPersonnel",
          "generalPersonnel"
        ],
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "paramBindEvent": [],
        "noteTips": "查询返回转换成树表，其中按照顺序规定好字段，\n可以有多出的字段用于点击交互接口传参，不用\n于表格显示。",
        "resetAfterInput": true,
        "stripSingleInput": false,
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>查询返给给树表格时才需要用到这里的输出。</span>",
        "arrExec": false,
        "jsonStruct": 1
      }
    },
    {
      "c": "ht.Node",
      "i": 52470,
      "p": {
        "name": "func",
        "displayName": "工具函数（输入Values）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>用于操作内嵌API组件的“paramValues”\n<br>数组属性，并且默认勾选了输入时执行\n<br>且操作API组件赋值后立即对requesting\n<br>属性触发请求，上层连线操作本组件的\n<br>inputs输入组属性即可实现对内嵌API组\n<br>件的赋值和执行。</span>",
        "tag": "输入Values",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputs": {
              "id": "iotos.form",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false,
              "alias": ""
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "bindControlsVal": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "D3D502E3-7532-4951-AF81-DD6A2A8DC8AE"
        },
        "position": {
          "x": 497.27173,
          "y": 219.68073
        }
      },
      "s": {
        "label.position": 32,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "1-输入Values",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "label.opacity": 1
      },
      "a": {
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>用于操作内嵌API组件的“paramValues”\n<br>数组属性，并且默认勾选了输入时执行\n<br>且操作API组件赋值后立即对requesting\n<br>属性触发请求，上层连线操作本组件的\n<br>inputs输入组属性即可实现对内嵌API组\n<br>件的赋值和执行。</span>",
        "noteTips": "1-输入Values",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          "output",
          null
        ],
        "bindControlsTag": [
          "gv1",
          "gv1"
        ],
        "bindControlsAttr": [
          "httpAlert>0>api1>a:paramValues",
          "httpAlert>0>api1>a:requesting"
        ],
        "bindControlsVal": [
          0,
          null
        ],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "_bindEvents_1-list": [
          "*",
          "onOutput"
        ],
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "arrExec": false,
        "jsonStruct": 1
      }
    },
    {
      "c": "ht.Edge",
      "i": 52471,
      "p": {
        "name": "edge",
        "displayName": "0（edge6）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:paramValues@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@输入Values</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52470
        },
        "tag": "edge6",
        "source": {
          "__i": 52470
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:paramValues@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@输入Values</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 52472,
      "p": {
        "name": "edge",
        "displayName": "1（edge7）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;请求@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52470
        },
        "tag": "edge7",
        "source": {
          "__i": 52470
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;请求@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 52473,
      "p": {
        "name": "func",
        "displayName": "工具函数（输入Json）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>这里是对API组件的jsonFormat属性进行赋值，\n<br>直接设置要提交的表单对象。作为另一种传参\n<br>设置方式。同时也是做了输入赋值时执行，并\n<br>且操作了内嵌API组件赋值和请求，简化操作。\n</span>",
        "tag": "输入Json",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            }
          }
        },
        "image": {
          "modified": "Thu Dec 14 2023 10:11:29 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "transfer",
              "name": "功能选项",
              "description": "透明传递"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "convertFlatToTree",
              "valueType": "Boolean",
              "name": "输入扁平结构化",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#TWkHe style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 45,
          "height": 40,
          "comps": [
            {
              "type": "image",
              "color": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                "value": "rgb(51,153,255)"
              },
              "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0.53882,
                4.53779,
                43.92236,
                30.92443
              ]
            }
          ],
          "uuid": "D3D502E3-7532-4951-AF81-DD6A2A8DC8AE"
        },
        "position": {
          "x": 497.27173,
          "y": 489.83177
        }
      },
      "s": {
        "label.position": 32,
        "label.offset.y": 0,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "2-输入Json",
        "label.font": "26px Microsoft YaHei",
        "label.color": "rgb(51,153,255)",
        "label.align": "left",
        "label.opacity": 1
      },
      "a": {
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>这里是对API组件的jsonFormat属性进行赋值，\n<br>直接设置要提交的表单对象。作为另一种传参\n<br>设置方式。同时也是做了输入赋值时执行，并\n<br>且操作了内嵌API组件赋值和请求，简化操作。\n</span>",
        "noteTips": "2-输入Json",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/base/__convertor.json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          "output",
          null
        ],
        "bindControlsTag": [
          "gv1",
          "gv1"
        ],
        "bindControlsAttr": [
          "httpAlert>0>api1>a:jsonFormat",
          "httpAlert>0>api1>a:requesting"
        ],
        "bindControlsVal": [
          null,
          null
        ],
        "_bindEvents_0-list": [
          "*",
          "onOutput"
        ],
        "_bindEvents_1-list": [
          "*",
          "onOutput"
        ],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "exeWhenInput": true,
        "resetAfterInput": true,
        "stripSingleInput": false,
        "arrExec": false,
        "jsonStruct": 1
      }
    },
    {
      "c": "ht.Edge",
      "i": 52474,
      "p": {
        "name": "edge",
        "displayName": "0（edge8）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:jsonFormat@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@输入Json</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52473
        },
        "tag": "edge8",
        "source": {
          "__i": 52473
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:jsonFormat@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@输入Json</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 52475,
      "p": {
        "name": "edge",
        "displayName": "1（edge9）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:requesting@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52473
        },
        "tag": "edge9",
        "source": {
          "__i": 52473
        },
        "target": {
          "__i": 52462
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：httpAlert&gt;0&gt;api1&gt;a:requesting@gv1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 52476,
      "p": {
        "name": "input",
        "displayName": "输入框（操作索引）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>对于“1-输入Values”操作内嵌API组件的\n<br>paramValues属性时，该输入框组件的\n<br>value值属性可用于设置要操作的数组属\n<br>性的索引，省去上层连线解析赋值填写。</span>",
        "tag": "操作索引",
        "dataBindings": {
          "a": {
            "value": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "instantTrigger": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "initialTrigger": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onChange": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "onEnter": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "readOnly": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri Feb 16 2024 09:48:58 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "group": "功能（关键）",
              "description": "组件源（备选）。\n<br>当组件源（image）为非字符串格式，显示\n<br>[Object]时，可以通过这里备选地址，双击\n<br>打开组件配置。",
              "name": "symbol"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35,
              "description": "固定高度。\n<br>部分组件比如下拉框以及这里的输入框，拖拽或布局时，\n<br>高度默认会保持不变，只是宽度能够变化。高度可以在\n<br>当前页面全局自定义，也能通过当前属性对当个组件设\n<br>定。全局设置为页面的公共属性组中的“组件默认固定高\n<br>度”属性。",
              "name": "fixedHeight"
            },
            {
              "attr": "activeBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "激活时边框颜色。\n<br>通常是选中输入状态时的边框色。",
              "name": "activeBorderColor"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "背景颜色。",
              "name": "background"
            },
            {
              "attr": "readOnlyBackground",
              "valueType": "Color",
              "defaultValue": "rgb(247,247,247)",
              "description": "只读时的背景颜色。\n<br>注意，区别于禁用（暂未开放配置）。",
              "name": "readOnlyBackground"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "defaultValue": "symbols/demo/uiotos/icons/light/search.json",
              "description": "图标地址。\n<br>输入框默左侧为“搜索”图标。",
              "name": "iconPath"
            },
            {
              "attr": "iconColor",
              "valueType": "Color",
              "defaultValue": "rgb(213,213,213)",
              "description": "输入框图标颜色。\n<br>对于内置部件中通过工具转换成的图标，\n<br>为支持动态修改背景颜色的矢量形式。",
              "name": "iconColor"
            },
            {
              "attr": "iconType",
              "valueType": "Level",
              "defaultValue": 1,
              "description": "图标类型。\n<br>相同名称图标的不同风格，已弃用，\n<br>当前属性目前作为备用。",
              "name": "iconType"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                15
              ],
              "description": "图标尺寸。\n<br>数组形式，索引依次为宽度、高度值。",
              "name": "iconSize"
            },
            {
              "attr": "iconTextGap",
              "valueType": "Number",
              "defaultValue": 5,
              "description": "图标文字间距。",
              "name": "iconTextGap"
            },
            {
              "attr": "hoverIcon",
              "valueType": "Image",
              "description": "鼠标滑过时的图标。",
              "name": "hoverIcon"
            },
            {
              "attr": "borderRadius",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "边框圆角。",
              "name": "borderRadius"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 1,
              "description": "边框宽度。",
              "name": "borderWidth"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgb(213,213,213)",
              "description": "边框颜色。",
              "name": "borderColor"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "description": "字体。",
              "name": "font"
            },
            {
              "attr": "readOnly",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否只读。",
              "name": "readOnly"
            },
            {
              "attr": "placeholder",
              "valueType": "Object",
              "defaultValue": "请输入",
              "description": "未输入时默认占位符文字。",
              "name": "placeholder"
            },
            {
              "attr": "color",
              "valueType": "Color",
              "defaultValue": "rgb(0,0,0)",
              "description": "文字颜色。",
              "name": "color"
            },
            {
              "attr": "labelColor",
              "valueType": "Color",
              "defaultValue": "rgb(0,0,0)",
              "description": "标签文字颜色。",
              "name": "labelColor"
            },
            {
              "attr": "labelText",
              "valueType": "String",
              "defaultValue": "标签",
              "description": "标签文字。",
              "name": "labelText"
            },
            {
              "attr": "gap",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "标签与组件的间距。\n<br>注意，仅在标签内嵌模式（layoutVertical）下，\n<br>改配置参数才有用。",
              "name": "gap"
            },
            {
              "attr": "layoutVertical",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "标签与组件的布局模式。\n<br>水平左右，或者垂直上下。",
              "name": "layoutVertical"
            },
            {
              "attr": "labelEmbeded",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "标签是否内嵌。\n<br>不内嵌时，组件的宽度不包含标签。\n<br>选择内嵌时，组件的宽度包含标签文字宽度。",
              "name": "labelEmbeded"
            },
            {
              "attr": "type",
              "valueType": "FormType",
              "defaultValue": "text",
              "description": "输入框表单类型。\n<br>包括密码、文本等类型。",
              "name": "type"
            },
            {
              "attr": "instantTrigger",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否即时触发。\n<br>勾选后，输入时就会对外触发onChange变化事件。",
              "name": "instantTrigger"
            },
            {
              "attr": "initialTrigger",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "初始触发连线操作。\n<br>默认不勾选，勾选后初始加载值时，如果对外有连线，\n<br>并且初始值为非空时，也会触发对外的赋值连线操作。",
              "name": "initialTrigger"
            },
            {
              "attr": "emptyTrigger",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "emptyTrigger"
            },
            {
              "attr": "value",
              "valueType": "Object",
              "defaultValue": "",
              "description": "当前值。\n<br>输入框的值。注意，运行时输入数字\n<br>默认会作为字符串。如果初始设定值\n<br>为数字类型（比如0），那么输入的字\n<br>符串形式的数字，会被转成数字。",
              "name": "value"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "description": "操作的目标组件（标签）。\n<br>连线A → B，那么B就是目标组件。",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "description": "操作目标组件的属性。\n<br>比如A.x→B.y时，x就是当前的关联\n<br>属性，y即为操作属性，A的x属性值\n<br>通过连线赋值给B的y属性。",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "description": "操作关联的来源组件（标签）。\n<br>连线A → B，那么A就是来源组件。\n<br>注意，为空不用填或者填写A的标\n<br>签效果一样，也可以填入其他组件\n<br>的标签（非正常操作）。",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "description": "关联属性。\n<br>关联的来源组件的指定属性，比如\n<br>A.x→B.y时，x就是当前的关联属性，\n<br>y为操作属性，A的x属性值通过连线\n<br>赋值给B的y属性。",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form"
                ]
              },
              "description": "操作过滤函数。\n<br>所有连线对外操作执行之前，都会经过该函数\n<br>过滤处理，通常无需操作。可以做自定义逻辑。\n<br>其中对相应索引index下直接return返回undefined\n<br>时，将忽略掉指定索引连线的执行触发。",
              "name": "paramsGenerator"
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "Direction",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "变化事件函数。\n<br>默认为内容改变才触发，当勾选即时触发\n<br>（instantTrigger）时，输入时就会触发本\n<br>事件。",
              "name": "onChange"
            },
            {
              "attr": "onEnter",
              "valueType": "Function",
              "description": "回车事件。\n<br>输入完毕后回车触发，并且传入当前值。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onEnter"
            }
          ],
          "snapshotURL": "symbols/admin/uiotos/icons/snapshot/input.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __input_ui(data, gv, cache);}",
          "width": 180,
          "height": 35,
          "scrollable": true,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "A54D9916-845D-487A-9194-82652F736D88"
        },
        "position": {
          "x": 497.27173,
          "y": 157.47191
        },
        "width": 114.06765,
        "height": 35
      },
      "s": {
        "label.opacity": 1,
        "label": "数组索引",
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform"
      },
      "a": {
        "bindEvents": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "value": 0,
        "labelText": "数组索引",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "value"
        ],
        "bindControlsTag": [
          "输入Values"
        ],
        "bindControlsAttr": [
          "bindControlsVal"
        ],
        "bindControlsVal": [
          0
        ],
        "_bindEvents_0-list": [
          "*",
          "onChange",
          "onClear",
          "onEnter"
        ],
        "symbol": "symbols/develop/uiotos/base/input-ui.json",
        "labelColor": "rgb(51,153,255)",
        "color": [
          "rgb(61,61,61)",
          "rgb(61,61,61)"
        ],
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>对于“1-输入Values”操作内嵌API组件的\n<br>paramValues属性时，该输入框组件的\n<br>value值属性可用于设置要操作的数组属\n<br>性的索引，省去上层连线解析赋值填写。</span>",
        "_debugPointAttr": "value",
        "iconPath": "symbols/demo/uiotos/icons/light/search.json",
        "background": [
          null,
          "rgb(247,247,247)"
        ],
        "colors": [
          "rgb(61,61,61)",
          "rgb(61,61,61)"
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 52477,
      "p": {
        "name": "edge",
        "displayName": "0（edge10）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：bindControlsVal@输入Values</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：0;...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@操作索引</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：0</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>",
        "parent": {
          "__i": 52476
        },
        "tag": "edge10",
        "source": {
          "__i": 52476
        },
        "target": {
          "__i": 52470
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "ortho",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 3,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：bindControlsVal@输入Values</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：0;...</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@操作索引</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：0</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：0</li>\n                                                        <li style=\"list-style-type:disc;\">注释：undefined</li>\n                                                    </div>"
      }
    }
  ],
  "modified": "Fri Aug 16 2024 11:14:18 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": 219.60864,
    "y": 99.05199,
    "width": 1379.71918,
    "height": 922.50556
  }
}