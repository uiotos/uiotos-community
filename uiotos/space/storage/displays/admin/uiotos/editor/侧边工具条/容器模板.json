{
  "v": "8.0.1",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "connectActionType": null,
    "fitContent": false,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 40253,
      "p": {
        "name": "base",
        "displayName": "底板（_base）",
        "tag": "_base",
        "position": {
          "x": 18,
          "y": 309.94107
        },
        "width": 62,
        "height": 617.88215
      },
      "s": {
        "shape": "rect",
        "shape.background": "rgb(47,55,70)",
        "fullscreen": "fill",
        "fullscreen.gap": 0,
        "2d.movable": false,
        "label.opacity": 0,
        "interactive": true,
        "label.position": 17,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.UNode",
      "i": 40254,
      "p": {
        "name": "bus",
        "displayName": "事件总线（bus1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "bus1",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "triggerSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "callerRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "waitingRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPostMessage": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri May 03 2024 21:40:54 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "addressLocal",
              "valueType": "Object",
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#HFw93' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addressLocal",
              "dynamicCreate": true
            },
            {
              "attr": "mode",
              "valueType": "EventBusMode",
              "defaultValue": "both",
              "description": "三种模式选择，包括\n接收器、发送器、收发器\n",
              "name": "mode"
            },
            {
              "attr": "callRecv.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "收发器背景颜色",
              "name": "callRecv.icon-background"
            },
            {
              "attr": "call.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "description": "发送器背景颜色",
              "name": "call.icon-background"
            },
            {
              "attr": "recv.icon-background",
              "valueType": "Color",
              "defaultValue": "#FF7C7C",
              "description": "组件的外观颜色。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qoGQI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "name": "recv.icon-background",
              "dynamicCreate": true
            },
            {
              "attr": "addrsRemote",
              "valueType": "ObjectArray",
              "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
              "group": "send",
              "defaultValue": [
                "*"
              ],
              "name": "addrsRemote"
            },
            {
              "attr": "topicSend",
              "valueType": "Object",
              "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。",
              "name": "topicSend"
            },
            {
              "attr": "contentSend",
              "valueType": "Object",
              "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。",
              "name": "contentSend"
            },
            {
              "attr": "triggerSend",
              "valueType": "Boolean",
              "description": "执行发送",
              "defaultValue": false,
              "name": "triggerSend"
            },
            {
              "attr": "triggerInit",
              "valueType": "Boolean",
              "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送",
              "name": "triggerInit"
            },
            {
              "attr": "cacheDisabled",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否禁止缓存队列。\n<br>默认情况下，发送器发送的内容会追加到全局\n<br>异步队列中，当其他接收器动态初始化启动接\n<br>收时，当前发送存放到队列中的数据，会被接\n<br>收处理。\n<br>实现对话框内嵌接收器后启动并响应此前先发\n<br>送的消息，不会导致因为发送执行和启动接收\n<br>先后顺序不一致导致接收不到的问题。\n<br>勾选本属性，将禁止默认追加到缓存队列，可\n<br>以避免某些误操作。",
              "name": "cacheDisabled"
            },
            {
              "attr": "addrsWhiteList",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "允许通过的发送器地址（列表）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#RxJCO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addrsWhiteList",
              "dynamicCreate": true
            },
            {
              "attr": "topicsWhiteList",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "允许通过的消息主题（列表）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qSpxG' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "topicsWhiteList",
              "dynamicCreate": true
            },
            {
              "attr": "topicsExtraInfo",
              "valueType": "ObjectArray",
              "description": "与主题白名单索引对应的自定义数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#flykN' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "topicsExtraInfo",
              "dynamicCreate": true
            },
            {
              "attr": "callerRemote",
              "valueType": "Object",
              "description": "消息完全通过时的来源发送器对象。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#KGpY1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "callerRemote",
              "dynamicCreate": true
            },
            {
              "attr": "",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "代码调用postMessage网页通信时。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#w19ww' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "",
              "dynamicCreate": true
            },
            {
              "attr": "topicRecv",
              "valueType": "Object",
              "description": "接收到数据对应的主题Topic。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#wMKti' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "topicRecv",
              "dynamicCreate": true
            },
            {
              "attr": "contentRecv",
              "valueType": "Object",
              "description": "与收到主题对应收到的内容。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qKUx1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "contentRecv",
              "dynamicCreate": true
            },
            {
              "attr": "waitingRecv",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "开启监听，准备好接收发送器的消息。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#p62R1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "★",
              "bindIgnored": true,
              "name": "waitingRecv",
              "dynamicCreate": true
            },
            {
              "attr": "messagPostGet",
              "valueType": "Object",
              "description": "js代码postMessage发送的数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#mo692' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "messagPostGet",
              "dynamicCreate": true
            },
            {
              "attr": "waitingMsgPost",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启监听网页postMessage数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#uZLa6' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "waitingMsgPost",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "onEvent",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "onEvent",
              "dynamicCreate": true
            },
            {
              "attr": "onPostMessage",
              "valueType": "Function",
              "description": "收到跨网页iframe事件消息。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "name": "onPostMessage"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true,
              "name": "_bindEvents_0"
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "visible": {
            "func": "attr@visible",
            "value": true
          },
          "comps": [
            {
              "type": "rect",
              "background": "rgba(33,33,33,0.01)",
              "borderColor": "#979797",
              "displayName": "矩形",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
              "visible": false,
              "prefix": "recv",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
              "visible": false,
              "prefix": "call",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0,
                37.47666,
                64.0735,
                66.39302
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rotation": 5.69426,
              "rect": [
                56.75093,
                4.67922,
                58.13316,
                65.5949
              ]
            }
          ],
          "uuid": "6E448449-2AA3-4E7C-804C-9F35CAB1C7C6"
        },
        "host": {
          "__i": 40253
        },
        "position": {
          "x": -169.67843,
          "y": 285.03653
        },
        "width": 100,
        "height": 100
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "左侧动态二级菜单",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "layout.h": "left",
        "layout.v": "topbottom"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
        "triggerSend": false,
        "call.visible": false,
        "recv.visible": true,
        "callRecv.visible": false,
        "mode": "recv",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "contentRecv"
        ],
        "bindControlsTag": [
          "tab2"
        ],
        "bindControlsAttr": [
          "index"
        ],
        "bindControlsVal": [
          null
        ],
        "topicsWhiteList": [
          "容器模板-二级菜单"
        ],
        "topicRecv": "容器模板-二级菜单",
        "contentRecv": 0,
        "addrTarget": "*",
        "bindEvents": [
          "*",
          "onEvent"
        ],
        "callerRemote": "bus2",
        "_bindEvents_0-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_0": "*",
        "userData": []
      }
    },
    {
      "c": "ht.Edge",
      "i": 40255,
      "p": {
        "name": "edge",
        "displayName": "0（edge2）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：当前索引@tab2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：接收到内容@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 40254
        },
        "tag": "edge2",
        "source": {
          "__i": 40254
        },
        "target": {
          "__i": 40256
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：当前索引@tab2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：接收到内容@bus1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.UNode",
      "i": 40256,
      "p": {
        "name": "tab",
        "displayName": "TAB页签（tab2）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "tab2",
        "dataBindings": {
          "a": {
            "index": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "displays": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "relativePath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:autoFillMinWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:onScrollEnded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:select": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:buttons": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:direction": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:btnData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_1": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bts1>p:height": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:triggerSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:callerRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:waitingRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onPostMessage": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:autoFillMinWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:onScrollEnded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:select": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:buttons": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:direction": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:btnData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>p:height": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:contentSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:triggerSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:callerRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:contentRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:waitingRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onPostMessage": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:output": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:outputByEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputs": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:exec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:arrExec": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:onOutput": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:_function": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:convertFlatToTree": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputKeys": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputValues": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:autoFillMinWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:onScrollEnded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:select": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:buttons": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:direction": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:btnData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>p:height": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:triggerSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:callerRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:waitingRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onPostMessage": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:autoFillMinWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:onScrollEnded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:select": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:buttons": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:direction": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:btnData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>p:height": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:triggerSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:callerRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:waitingRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onPostMessage": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:autoFillMinWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:onScrollEnded": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:innerLayoutMode": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:select": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:buttons": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:direction": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:initialTrigger": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:onChange": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:display": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popDirection": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBackground": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popPadding": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popHeight": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderColor": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderWidth": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderRadius": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popTriggerEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:btnData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_1": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bts1>p:height": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:userData": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:triggerSend": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:callerRemote": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:waitingRecv": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsWhiteList": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onEvent": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onPostMessage": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_1": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_0": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_1": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerBackground": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            }
          }
        },
        "image": {
          "modified": "Sun Jun 09 2024 08:09:43 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "displays",
              "valueType": "ObjectArray",
              "description": "多页地址。\n<br>tab页签按照顺序多页。注意，参考相对路径\n<br>（relativePath），并且可以省去.json后缀。\n<br>因此，当相对路径指向多页共同所在目录后，\n<br>当前属性只需要依次填入各个内嵌页面的名\n<br>称即可。",
              "group": "功能",
              "name": "displays"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "defaultValue": "",
              "description": "当前Tab页签内嵌页。\n<br>绝对路径（URL），通常是只读，具体各个页签\n<br>配置由相对路径属性（relativePath）和多页地址\n<br>属性（displays）来配置。\n<br>确定当前索引（index）时，当前页属性（display）\n<br>会动态展示页面的绝对路径。\n<br>在编辑配置时，页可以设置页面的绝对路径，回车\n<br>时会自动添加到多页地址属性（displays）中。",
              "name": "display"
            },
            {
              "attr": "relativePath",
              "valueType": "URL",
              "description": "相对路径。",
              "name": "relativePath"
            },
            {
              "attr": "index",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "当前显示页面对应的索引。",
              "name": "index"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "String",
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。模式none\n<br>表示未设定，取决于内嵌的布局模式，\n<br>并且将内嵌模式回写设置过来，相当\n<br>于只读。\n<br>注意，本属性起到读写作用，可以表\n<br>示当前页面的状态，也可以进行设置。\n<br>none为只读，fullScreen/fitContent\n<br>为可读写。\n<br>其中设置全屏填充fullScreen时，自动\n<br>选择最底层图元组件作为底板。新建页\n<br>面默认为基于有底板的全屏填充布局，\n<br>而非缩放。\n",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "name": "innerLayoutMode"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "name": "innerBackground"
            },
            {
              "attr": "initialTrigger",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "initialTrigger"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "useOriginSize"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "description": "加载完成后初始化。",
              "name": "onPostDeserialize"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "所有内嵌页面逐层加载完毕后回调（注意，作为顶层页面时才会触发）。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0.",
              "name": "isLoadingGet"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "onChange",
              "valueType": "String",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "事件",
              "name": "onChange"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, controlVal, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn controlVal;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:display",
              "name": ".页面地址",
              "valueType": "URL",
              "defaultValue": "./_素材.json",
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:autoFillMinWidth",
              "name": ".autoFillMinWidth",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:onScrollEnded",
              "name": ".onScrollEnded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:userData",
              "name": ".userData",
              "valueType": "ObjectArray",
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:select",
              "name": "..select",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:buttons",
              "name": "..buttons",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:direction",
              "name": "..direction",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:initialTrigger",
              "name": "..initialTrigger",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:onChange",
              "name": "..onChange",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:display",
              "name": "..页面地址",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popDirection",
              "name": "..popDirection",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBackground",
              "name": "..popBackground",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popPadding",
              "name": "..popPadding",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popWidth",
              "name": "..popWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popHeight",
              "name": "..popHeight",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderColor",
              "name": "..popBorderColor",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderWidth",
              "name": "..popBorderWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderRadius",
              "name": "..popBorderRadius",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popTriggerEvent",
              "name": "..popTriggerEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:btnData",
              "name": "..btnData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_1",
              "name": ".._bindEvents_1",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bts1>p:height",
              "name": "..height",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:userData",
              "name": "..userData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsRemote",
              "name": "..addrsRemote",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicSend",
              "name": "..topicSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentSend",
              "name": "..contentSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:triggerSend",
              "name": "..triggerSend",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:callerRemote",
              "name": "..callerRemote",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicRecv",
              "name": "..topicRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentRecv",
              "name": "..contentRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:waitingRecv",
              "name": "..waitingRecv",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicsWhiteList",
              "name": "..topicsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsWhiteList",
              "name": "..addrsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onEvent",
              "name": "..onEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onPostMessage",
              "name": "..onPostMessage",
              "valueType": "String",
              "extraInfo": null,
              "group": "_素材_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:display",
              "name": ".页面地址",
              "valueType": "URL",
              "defaultValue": "./_模板.json",
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:autoFillMinWidth",
              "name": ".autoFillMinWidth",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:onScrollEnded",
              "name": ".onScrollEnded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当滚动结束时对外触发。",
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:userData",
              "name": ".userData",
              "valueType": "ObjectArray",
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:select",
              "name": "..select",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:buttons",
              "name": "..buttons",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:direction",
              "name": "..direction",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:initialTrigger",
              "name": "..initialTrigger",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:onChange",
              "name": "..onChange",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:display",
              "name": "..页面地址",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popDirection",
              "name": "..popDirection",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBackground",
              "name": "..popBackground",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popPadding",
              "name": "..popPadding",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popWidth",
              "name": "..popWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popHeight",
              "name": "..popHeight",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderColor",
              "name": "..popBorderColor",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderWidth",
              "name": "..popBorderWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderRadius",
              "name": "..popBorderRadius",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popTriggerEvent",
              "name": "..popTriggerEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:btnData",
              "name": "..btnData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_1",
              "name": ".._bindEvents_1",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bts1>p:height",
              "name": "..height",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:userData",
              "name": "..userData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsRemote",
              "name": "..addrsRemote",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicSend",
              "name": "..topicSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentSend",
              "name": "..contentSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:triggerSend",
              "name": "..triggerSend",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:callerRemote",
              "name": "..callerRemote",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicRecv",
              "name": "..topicRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentRecv",
              "name": "..contentRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:waitingRecv",
              "name": "..waitingRecv",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicsWhiteList",
              "name": "..topicsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsWhiteList",
              "name": "..addrsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onEvent",
              "name": "..onEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onPostMessage",
              "name": "..onPostMessage",
              "valueType": "String",
              "extraInfo": null,
              "group": "_模板_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:display",
              "name": ".页面地址",
              "valueType": "URL",
              "defaultValue": "./_示例.json",
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:autoFillMinWidth",
              "name": ".autoFillMinWidth",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:onScrollEnded",
              "name": ".onScrollEnded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:userData",
              "name": ".userData",
              "valueType": "ObjectArray",
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:select",
              "name": "..select",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:buttons",
              "name": "..buttons",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:direction",
              "name": "..direction",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:initialTrigger",
              "name": "..initialTrigger",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:onChange",
              "name": "..onChange",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:display",
              "name": "..页面地址",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popDirection",
              "name": "..popDirection",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBackground",
              "name": "..popBackground",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popPadding",
              "name": "..popPadding",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popWidth",
              "name": "..popWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popHeight",
              "name": "..popHeight",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderColor",
              "name": "..popBorderColor",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderWidth",
              "name": "..popBorderWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderRadius",
              "name": "..popBorderRadius",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popTriggerEvent",
              "name": "..popTriggerEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:btnData",
              "name": "..btnData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_1",
              "name": ".._bindEvents_1",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bts1>p:height",
              "name": "..height",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:userData",
              "name": "..userData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsRemote",
              "name": "..addrsRemote",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicSend",
              "name": "..topicSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentSend",
              "name": "..contentSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:triggerSend",
              "name": "..triggerSend",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:callerRemote",
              "name": "..callerRemote",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicRecv",
              "name": "..topicRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentRecv",
              "name": "..contentRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:waitingRecv",
              "name": "..waitingRecv",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicsWhiteList",
              "name": "..topicsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsWhiteList",
              "name": "..addrsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onEvent",
              "name": "..onEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onPostMessage",
              "name": "..onPostMessage",
              "valueType": "String",
              "extraInfo": null,
              "group": "_示例_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:display",
              "name": ".页面地址",
              "valueType": "Image",
              "defaultValue": "./_组件.json",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:autoFillMinWidth",
              "name": ".自动填充宽度",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:onScrollEnded",
              "name": ".滚动到底事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当滚动结束时对外触发。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:userData",
              "name": ".用户数据",
              "valueType": "ObjectArray",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:select",
              "name": "..当前索引",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "当前选中的索引。\n<br>可读写。从0开始，第几个按钮当前选中，\n<br>或者设置第几个按钮选中。-1表示都不选中。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:buttons",
              "name": "..各按钮文字",
              "valueType": "ObjectArray",
              "defaultValue": [
                "绘图",
                "图表",
                "表单",
                "容器",
                "函数",
                "通信",
                "地图",
                "视频",
                "其他"
              ],
              "description": "按钮显示文字。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:direction",
              "name": "..方向",
              "valueType": "String",
              "defaultValue": "vertical",
              "extraInfo": {
                "enum": {
                  "values": [
                    "horizontal",
                    "vertical"
                  ]
                }
              },
              "description": "horizontal：水平按钮组；\nvertical：垂直按钮组。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:initialTrigger",
              "name": "..加载时触发",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "划过时即点击。\n<br>默认需要点击才能切换，勾选本属性后，\n<br>鼠标划过即切换，省去鼠标点击操作。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:onChange",
              "name": "..值改变事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "param",
                  "extra"
                ]
              },
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:display",
              "name": "..页面路径",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popDirection",
              "name": "..提示方向",
              "valueType": "SideDirection",
              "defaultValue": "bottomLeft",
              "description": "提示显示位置。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBackground",
              "name": "..提示背景色",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popPadding",
              "name": "..四周边距",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popWidth",
              "name": "..提示区宽度",
              "valueType": "Number",
              "defaultValue": 200,
              "description": "弹出框宽度。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popHeight",
              "name": "..提示区高度",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderColor",
              "name": "..提示边框色",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderWidth",
              "name": "..提示边框宽",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderRadius",
              "name": "..提示圆角",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popTriggerEvent",
              "name": "..提示触发事件",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:btnData",
              "name": "..当前数据",
              "valueType": "Object",
              "defaultValue": "draws",
              "description": "当前选中的内容。\n<br>可读写。匹配按钮数据属性（btnDatas），\n<br>当前属性值是对应按钮数据的第几个，则\n<br>第几个按钮选中。\n<br>如果按钮数据没有对应的，则从按钮显示\n<br>文字去匹配。注意，与当前选中索引（sel-\n<br>ected）属性自动保持同步。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bts1>p:height",
              "name": "..height",
              "valueType": "Number",
              "defaultValue": 471.33606,
              "extraInfo": null,
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:userData",
              "name": "..用户数据",
              "valueType": "ObjectArray",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsRemote",
              "name": "..远程地址",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicSend",
              "name": "..发送主题",
              "valueType": "Object",
              "defaultValue": "容器模板-菜单内容",
              "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:contentSend",
              "name": "..发送内容",
              "valueType": "Object",
              "defaultValue": "/controls/draws",
              "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:triggerSend",
              "name": "..执行发送",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "执行发送",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:callerRemote",
              "name": "..接收来源",
              "valueType": "Object",
              "description": "当前消息来源，即发送者，对象格式",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicRecv",
              "name": "..收到主题",
              "valueType": "Object",
              "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:contentRecv",
              "name": "..收到内容",
              "valueType": "Object",
              "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:waitingRecv",
              "name": "..启动接收",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "启动监听，等待接收外部发送器\n的数据",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicsWhiteList",
              "name": "..主题白名单",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsWhiteList",
              "name": "..地址白名单",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onEvent",
              "name": "..触发事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "description": "收到总线事件消息。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onPostMessage",
              "name": "..网页事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "description": "收到跨网页iframe事件消息。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:userData",
              "name": "..用户数据",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:output",
              "name": "..输出",
              "valueType": "Object",
              "defaultValue": "/controls/draws",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:outputByEvent",
              "name": "..输出经事件返回",
              "valueType": "Boolean",
              "defaultValue": true,
              "extraInfo": "★",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputs",
              "name": "..输入（组）",
              "valueType": "Object",
              "defaultValue": {},
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n自定义函数的传入参数。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:exec",
              "name": "..执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:arrExec",
              "name": "..遍历执行",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "*",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:onOutput",
              "name": "..输出事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:_function",
              "name": "..自定义代码 ☆",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "description": "自定义工具函数功能代码。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#mbNJh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:convertFlatToTree",
              "name": "..输入扁平结构化",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "JSON扁平化与结构化的对应通常如\n                        {a.b.0.c:10}与{a:{b:[{c:10}]}}。\n                        勾选后，如果输入键值组是扁平化形式，那么会将\n                        输入组数据转成结构化。\n                        注意，在输入键组（inputKeys）字段固定，试图\n                        在输入值组（inputValues）指定索引插入对象或\n                        数组结构时，一定要去掉本属性勾选，否则会自动\n                        将对象或数组扁平化展开，整个输入键值组都会被\n                        扁平化。",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputKeys",
              "name": "..输入键组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputValues",
              "name": "..输入值组",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "extraInfo": "*",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "group": "_组件_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:display",
              "name": ".页面地址",
              "valueType": "URL",
              "defaultValue": "./_图标.json",
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:autoFillMinWidth",
              "name": ".autoFillMinWidth",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:onScrollEnded",
              "name": ".onScrollEnded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:userData",
              "name": ".userData",
              "valueType": "ObjectArray",
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:innerLayoutMode",
              "name": ".内嵌布局",
              "valueType": "String",
              "defaultValue": "fullScreen",
              "extraInfo": {
                "enum": {
                  "values": [
                    "fitContent",
                    "fullScreen",
                    "none"
                  ]
                }
              },
              "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:select",
              "name": "..select",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:buttons",
              "name": "..buttons",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:direction",
              "name": "..direction",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:initialTrigger",
              "name": "..initialTrigger",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:onChange",
              "name": "..onChange",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:display",
              "name": "..页面地址",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popDirection",
              "name": "..popDirection",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBackground",
              "name": "..popBackground",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popPadding",
              "name": "..popPadding",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popWidth",
              "name": "..popWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popHeight",
              "name": "..popHeight",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderColor",
              "name": "..popBorderColor",
              "valueType": "Color",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderWidth",
              "name": "..popBorderWidth",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderRadius",
              "name": "..popBorderRadius",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popTriggerEvent",
              "name": "..popTriggerEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:btnData",
              "name": "..btnData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_0",
              "name": ".._bindEvents_0",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_1",
              "name": ".._bindEvents_1",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bts1>p:height",
              "name": "..height",
              "valueType": "Number",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:userData",
              "name": "..userData",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsRemote",
              "name": "..addrsRemote",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicSend",
              "name": "..topicSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentSend",
              "name": "..contentSend",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:triggerSend",
              "name": "..triggerSend",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:callerRemote",
              "name": "..callerRemote",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicRecv",
              "name": "..topicRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentRecv",
              "name": "..contentRecv",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:waitingRecv",
              "name": "..waitingRecv",
              "valueType": "Boolean",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicsWhiteList",
              "name": "..topicsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsWhiteList",
              "name": "..addrsWhiteList",
              "valueType": "ObjectArray",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onEvent",
              "name": "..onEvent",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            },
            {
              "attr": "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onPostMessage",
              "name": "..onPostMessage",
              "valueType": "String",
              "extraInfo": null,
              "group": "_图标_滚动>0>scroll1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers _icon/TAB页签.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __tabView(data,gv,cache);}",
          "width": 300,
          "height": 200,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "228ABF30-341F-41F2-AC64-6CD42574D634"
        },
        "host": {
          "__i": 40253
        },
        "position": {
          "x": 18,
          "y": 285.03653
        },
        "width": 62,
        "height": 568.07308
      },
      "s": {
        "label.opacity": 0,
        "pixelPerfect": false,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "topbottom",
        "opacity": 1
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/tabView.json",
        "relativePath": "./",
        "displays": [
          null,
          "_模板_滚动",
          "_示例_滚动",
          null,
          "_组件_滚动",
          "_图标_滚动",
          "_素材_滚动",
          "displays/develop/uiotos/editor/syspages/404_lite"
        ],
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "index": 0,
        "bindEvents": [
          "*",
          "onChange"
        ],
        "display": "displays/develop/uiotos/editor/syspages/404_lite.json",
        "_示例_滚动>0>scroll1>a:display": "./_示例.json",
        "_示例_滚动>0>scroll1>a:autoFillMinWidth": true,
        "_示例_滚动>0>scroll1>a:innerLayoutMode": "fullScreen",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:select": 0,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:buttons": [
          "全部示例",
          "常见图标",
          "工具软件",
          "后台管理",
          "音视频",
          "工业设备",
          "大屏装饰",
          "组态图标",
          "其他"
        ],
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:direction": "vertical",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:initialTrigger": false,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:onChange": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:display": "",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popDirection": "bottomLeft",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBackground": "white",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popWidth": 200,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popHeight": 300,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderColor": "rgb(51,51,51)",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderWidth": 0,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popBorderRadius": 0,
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:popTriggerEvent": "hover",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:btnData": "全部示例",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_0": "*",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>a:_bindEvents_1": "*",
        "_示例_滚动>0>scroll1>a:_示例>0>bts1>p:height": 445.72515,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsRemote": [
          "*"
        ],
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicSend": "容器模板-菜单内容",
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentSend": "全部示例",
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:triggerSend": false,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:waitingRecv": true,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicsWhiteList": [
          "*"
        ],
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:addrsWhiteList": [
          "*"
        ],
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onEvent": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:onPostMessage": null,
        "_组件_滚动>0>scroll1>a:display": "./_组件.json",
        "_组件_滚动>0>scroll1>a:autoFillMinWidth": true,
        "_组件_滚动>0>scroll1>a:innerLayoutMode": "fullScreen",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:select": 0,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:buttons": true,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:direction": "vertical",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:initialTrigger": true,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:onChange": null,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:display": "",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popDirection": "bottomLeft",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBackground": "white",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popWidth": 200,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popHeight": 300,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderColor": "rgb(51,51,51)",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderWidth": 0,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popBorderRadius": 0,
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:popTriggerEvent": "hover",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:btnData": "draws",
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>p:height": 471.33606,
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsRemote": [
          "*"
        ],
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicSend": "容器模板-菜单内容",
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:contentSend": "/controls/draws",
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:triggerSend": true,
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:waitingRecv": true,
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:topicsWhiteList": [
          "*"
        ],
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:addrsWhiteList": [
          "*"
        ],
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onEvent": null,
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:onPostMessage": null,
        "_组件_滚动>0>scroll1>a:_组件>0>bus1>a:_bindEvents_0": "*",
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:userData": [],
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:output": "/controls/draws",
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:outputByEvent": true,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputs": {},
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:exec": false,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:arrExec": false,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:onOutput": null,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:_function": null,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:convertFlatToTree": false,
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputKeys": [],
        "_组件_滚动>0>scroll1>a:_组件>0>func1>a:inputValues": [],
        "_图标_滚动>0>scroll1>a:display": "./_图标.json",
        "_图标_滚动>0>scroll1>a:autoFillMinWidth": true,
        "_图标_滚动>0>scroll1>a:innerLayoutMode": "fullScreen",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:select": 0,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:buttons": [
          "全部图标",
          "常见图标",
          "工具软件",
          "后台管理",
          "音视频",
          "工业设备",
          "大屏装饰",
          "组态图标",
          "其他"
        ],
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:direction": "vertical",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:initialTrigger": false,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:onChange": null,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:display": "",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popDirection": "bottomLeft",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBackground": "white",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popWidth": 200,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popHeight": 300,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderColor": "rgb(51,51,51)",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderWidth": 0,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popBorderRadius": 0,
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:popTriggerEvent": "hover",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:btnData": "全部图标",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>p:height": 445.72515,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsRemote": [
          "*"
        ],
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicSend": "容器模板-菜单内容",
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentSend": "全部图标",
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:triggerSend": false,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:waitingRecv": true,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicsWhiteList": [
          "*"
        ],
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:addrsWhiteList": [
          "*"
        ],
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onEvent": null,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:onPostMessage": null,
        "_素材_滚动>0>scroll1>a:display": "./_素材.json",
        "_素材_滚动>0>scroll1>a:autoFillMinWidth": true,
        "_素材_滚动>0>scroll1>a:innerLayoutMode": "fullScreen",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:select": 0,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:buttons": [
          "全部素材",
          "常见图标",
          "工具软件",
          "后台管理",
          "音视频",
          "工业设备",
          "大屏装饰",
          "组态图标",
          "其他"
        ],
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:direction": "vertical",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:initialTrigger": false,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:onChange": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:display": "",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popDirection": "bottomLeft",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBackground": "white",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popWidth": 200,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popHeight": 300,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderColor": "rgb(51,51,51)",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderWidth": 0,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popBorderRadius": 0,
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:popTriggerEvent": "hover",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:btnData": "全部素材",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>p:height": 445.72515,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsRemote": [
          "*"
        ],
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicSend": "容器模板-菜单内容",
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentSend": "全部素材",
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:triggerSend": false,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:waitingRecv": true,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicsWhiteList": [
          "*"
        ],
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:addrsWhiteList": [
          "*"
        ],
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onEvent": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:onPostMessage": null,
        "shadowEnabled": false,
        "_模板_滚动>0>scroll1>a:display": "./_模板.json",
        "_模板_滚动>0>scroll1>a:autoFillMinWidth": true,
        "_模板_滚动>0>scroll1>a:innerLayoutMode": "fullScreen",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:select": 0,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:buttons": [
          "全部模板",
          "常见图标",
          "工具软件",
          "后台管理",
          "音视频",
          "工业设备",
          "大屏装饰",
          "组态图标",
          "其他"
        ],
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:direction": "vertical",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:initialTrigger": false,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:onChange": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:display": "",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popDirection": "bottomLeft",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBackground": "white",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popPadding": [
          2,
          2,
          2,
          2
        ],
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popWidth": 200,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popHeight": 300,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderColor": "rgb(51,51,51)",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderWidth": 0,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popBorderRadius": 0,
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:popTriggerEvent": "hover",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:btnData": "全部模板",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_0": "*",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>a:_bindEvents_1": "*",
        "_模板_滚动>0>scroll1>a:_模板>0>bts1>p:height": 445.72515,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsRemote": [
          "*"
        ],
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicSend": "容器模板-菜单内容",
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentSend": "全部模板",
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:triggerSend": false,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:waitingRecv": true,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicsWhiteList": [
          "*"
        ],
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:addrsWhiteList": [
          "*"
        ],
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onEvent": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:onPostMessage": null,
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:userData": null,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:callerRemote": null,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:topicRecv": null,
        "_图标_滚动>0>scroll1>a:_图标>0>bus1>a:contentRecv": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:userData": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:callerRemote": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:topicRecv": null,
        "_素材_滚动>0>scroll1>a:_素材>0>bus1>a:contentRecv": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:userData": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:callerRemote": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:topicRecv": null,
        "_模板_滚动>0>scroll1>a:_模板>0>bus1>a:contentRecv": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:userData": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:callerRemote": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:topicRecv": null,
        "_示例_滚动>0>scroll1>a:_示例>0>bus1>a:contentRecv": null,
        "pageAbsUrls": [
          "displays/develop/uiotos/editor/syspages/404_lite.json",
          "displays/develop/uiotos/editor/侧边工具条/_模板_滚动.json",
          "displays/develop/uiotos/editor/侧边工具条/_示例_滚动.json",
          "displays/develop/uiotos/editor/syspages/404_lite.json",
          "displays/develop/uiotos/editor/侧边工具条/_组件_滚动.json",
          "displays/develop/uiotos/editor/侧边工具条/_图标_滚动.json",
          "displays/develop/uiotos/editor/侧边工具条/_素材_滚动.json"
        ],
        "_组件_滚动>0>scroll1>a:_组件>0>bts1>a:_bindEvents_0": "*",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_0": "*",
        "_图标_滚动>0>scroll1>a:_图标>0>bts1>a:_bindEvents_1": "*",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_0": "*",
        "_素材_滚动>0>scroll1>a:_素材>0>bts1>a:_bindEvents_1": "*"
      }
    },
    {
      "c": "ht.UNode",
      "i": 40257,
      "p": {
        "name": "sw",
        "displayName": "开关（sw1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "sw1",
        "dataBindings": {
          "a": {
            "open": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onChange": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textClose": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "textOpen": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "isLoadingGet": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        console.error(11111111,rawData)\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue May 14 2024 20:22:31 GMT+0800 (中国标准时间)",
          "background": "rgb(61,61,61)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "URL",
              "name": "symbol"
            },
            {
              "attr": "open",
              "valueType": "Boolean",
              "defaultValue": true,
              "group": "功能（关键）",
              "name": "open"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "name": "background"
            },
            {
              "attr": "closedColor",
              "valueType": "Color",
              "defaultValue": null,
              "name": "closedColor"
            },
            {
              "attr": "back.borderWidth",
              "valueType": "Number",
              "defaultValue": 1,
              "name": "back.borderWidth"
            },
            {
              "attr": "back.radius",
              "valueType": "Number",
              "defaultValue": 18,
              "name": "back.radius"
            },
            {
              "attr": "dot.dotScale",
              "valueType": "Number",
              "defaultValue": 1,
              "name": "dot.dotScale"
            },
            {
              "attr": "textScale",
              "valueType": "Number",
              "defaultValue": 1,
              "name": "textScale"
            },
            {
              "attr": "textOpen",
              "valueType": "String",
              "defaultValue": "开启",
              "name": "textOpen"
            },
            {
              "attr": "textClose",
              "valueType": "String",
              "defaultValue": "关闭",
              "name": "textClose"
            },
            {
              "attr": "textVisible",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "textVisible"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "defaultValue": "12px sans-serif, Arial",
              "name": "font"
            },
            {
              "attr": "gapsAdjust",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0
              ],
              "name": "gapsAdjust"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>\n一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，\n<br>不会作为数组的索引，而会当成常量值对外赋值。\n<br>\n二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会\n<br>将待输出的值作为被操作数组指定索引的值来传入，而不是整体\n<br>覆盖。\n<br>\n情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>\n情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>\n三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "name": "userData"
            },
            {
              "attr": "display",
              "name": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "name": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "name": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "name": "padding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "name": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "name": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "name": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "name": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "name": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "name": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "dynamicCreate": true
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "defaultValue": "__ht__function(data, gv, cache, value, extra) {}",
              "name": "onChange"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "name": "isLoadingGet"
            }
          ],
          "snapshotURL": "symbols\\develop\\uiotos\\arranged\\controls\\forms_icon\\开关.json",
          "onUp": "__ht__function(event, data, view, point, width, height) {\ndata.ca('open',!data.ca('open'));\n}",
          "onEnter": "__ht__function(event, data, view, point, width, height) {\nview.getView().style.cursor = 'pointer'\n}",
          "onLeave": "__ht__function(event, data, view, point, width, height) {\nview.getView().style.cursor = 'default'\n}",
          "renderHTML": "__ht__function(data, gv, cache) {__switch_lite(data,gv,cache);}",
          "width": 82,
          "height": 35,
          "comps": [
            {
              "type": "roundRect",
              "background": {
                "func": "attr@background",
                "value": "rgb(0,199,7)"
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 1
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(0,199,7)"
              },
              "borderWidthAbsolute": true,
              "cornerRadius": {
                "func": "attr@radius",
                "value": 18
              },
              "layoutH": "center",
              "layoutV": "center",
              "prefix": "back",
              "rect": [
                2.59922,
                1,
                76.80155,
                33
              ]
            },
            {
              "type": "oval",
              "background": {
                "func": "attr@background",
                "value": "rgb(255,255,255)"
              },
              "borderColor": "#979797",
              "layoutH": "center",
              "layoutV": "center",
              "prefix": "dot",
              "scaleX": {
                "func": "attr@dotScale",
                "value": 1
              },
              "scaleY": {
                "func": "attr@dotScale",
                "value": 1
              },
              "rect": {
                "func": "attr@rect",
                "value": [
                  48.5,
                  5,
                  25,
                  25
                ]
              }
            },
            {
              "type": "text",
              "text": {
                "func": "attr@text",
                "value": "开启"
              },
              "align": "center",
              "color": {
                "func": "attr@textColor",
                "value": "rgb(255,255,255)"
              },
              "font": {
                "func": "attr@font",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@textVisible",
                "value": true
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "打开",
              "scaleX": {
                "func": "attr@textScale",
                "value": 1
              },
              "scaleY": {
                "func": "attr@textScale",
                "value": 1
              },
              "rect": {
                "func": "attr@textRect",
                "value": [
                  15.44891,
                  9.5,
                  30,
                  18
                ]
              }
            }
          ],
          "uuid": "02084725-E900-4142-A82B-F9D3E489C063"
        },
        "host": {
          "__i": 40253
        },
        "position": {
          "x": 18,
          "y": 604.0232
        },
        "width": 62,
        "height": 24.56105
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "bottom"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/forms/01-按钮点击/开关.json",
        "open": true,
        "bindEvents": [
          "*",
          "onChange",
          "onOpen"
        ],
        "back.background": "rgb(32,37,46)",
        "dot.background": "white",
        "text": "抽屉",
        "textColor": "white",
        "textRect": [
          11,
          8.5,
          30,
          18
        ],
        "back.borderColor": "rgb(32,37,46)",
        "dot.rect": [
          47.5,
          5,
          25,
          25
        ],
        "background": "rgb(32,37,46)",
        "visible": true,
        "textOpen": "抽屉",
        "textClose": "目录",
        "font": "17px sans-serif, Arial",
        "closedColor": null,
        "back.radius": 4,
        "gapsAdjust": [
          4,
          0
        ],
        "paramControlTag": [
          null,
          null
        ],
        "paramControlAttr": [
          null,
          "open"
        ],
        "bindControlsTag": [
          "bus2",
          "bus2"
        ],
        "bindControlsAttr": [
          "triggerSend",
          "contentSend"
        ],
        "bindControlsVal": [
          null,
          null
        ],
        "_bindEvents_0-list": [
          "*",
          "onChange"
        ],
        "_bindEvents_1-list": [
          "*",
          "onChange"
        ],
        "toolTipRaw": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "isLoadingGet": false
      }
    },
    {
      "c": "ht.Edge",
      "i": 40258,
      "p": {
        "name": "edge",
        "displayName": "0（edge3）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行发送@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 40257
        },
        "tag": "edge3",
        "source": {
          "__i": 40257
        },
        "target": {
          "__i": 40260
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行发送@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Edge",
      "i": 40259,
      "p": {
        "name": "edge",
        "displayName": "1（edge4）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：发送内容@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：打开@sw1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 40257
        },
        "tag": "edge4",
        "source": {
          "__i": 40257
        },
        "target": {
          "__i": 40260
        }
      },
      "s": {
        "label": "",
        "edge.color": "#FF7C7C",
        "edge.width": 3,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "#FF7C7C",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 1
      },
      "a": {
        "index": 1,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：1 | 总共2条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：发送内容@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：打开@sw1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：undefined</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">1。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.UNode",
      "i": 40260,
      "p": {
        "name": "bus",
        "displayName": "事件总线（bus2）",
        "tag": "bus2",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "triggerSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "callerRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "waitingRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPostMessage": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri May 03 2024 21:40:54 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "addressLocal",
              "valueType": "Object",
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#HFw93' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addressLocal",
              "dynamicCreate": true
            },
            {
              "attr": "mode",
              "valueType": "EventBusMode",
              "defaultValue": "both",
              "description": "三种模式选择，包括\n接收器、发送器、收发器\n",
              "name": "mode"
            },
            {
              "attr": "callRecv.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "收发器背景颜色",
              "name": "callRecv.icon-background"
            },
            {
              "attr": "call.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "description": "组件的外观颜色。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qoGQI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "name": "call.icon-background",
              "dynamicCreate": true
            },
            {
              "attr": "recv.icon-background",
              "valueType": "Color",
              "defaultValue": "#FF7C7C",
              "description": "发送器背景颜色",
              "name": "recv.icon-background"
            },
            {
              "attr": "addrsRemote",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "目标接收器的地址（列表）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#Ds6hp' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addrsRemote",
              "dynamicCreate": true
            },
            {
              "attr": "topicSend",
              "valueType": "Object",
              "description": "发送内容对应的主题Topic。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#HRvPB' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "topicSend",
              "dynamicCreate": true
            },
            {
              "attr": "contentSend",
              "valueType": "Object",
              "description": "发送主题对应的内容。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#gmgbO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "contentSend",
              "dynamicCreate": true
            },
            {
              "attr": "triggerSend",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "发送器触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#sVBxx' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "triggerSend",
              "dynamicCreate": true
            },
            {
              "attr": "triggerInit",
              "valueType": "Boolean",
              "description": "加载初始化时执行发送。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#AiKol' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "★",
              "bindIgnored": true,
              "name": "triggerInit",
              "dynamicCreate": true
            },
            {
              "attr": "cacheDisabled",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "不缓存消息，接收器页面后加载时不处理。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#oGLqa' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "cacheDisabled",
              "dynamicCreate": true
            },
            {
              "attr": "addrsWhiteList",
              "valueType": "ObjectArray",
              "group": "recv",
              "description": "消息源地址白名单。当消息目标地址与当前收发器匹配，\n但消息来源地址不在白名单内时，丢弃该消息，也不进行\n主题topic识别。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制消息源，所有来源的\n消息都会放行通过白名单。",
              "defaultValue": [
                "*"
              ],
              "name": "addrsWhiteList"
            },
            {
              "attr": "",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "代码调用postMessage网页通信时。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#w19ww' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "",
              "dynamicCreate": true
            },
            {
              "attr": "topicsWhiteList",
              "valueType": "ObjectArray",
              "description": "消息主题白名单。当消息目标地址与当前收发器匹配，\n且消息来源地址在白名单内时，再判断消息主题是否\n在白名单内，是则接受，否则丢弃。\n\n注意，当属性值为空（长度为0）或为默认的*时（有\n一项或多项值设置为*），表明不限制主题，所有topic\n的消息都会放行通过白名单。",
              "defaultValue": [
                "*"
              ],
              "name": "topicsWhiteList"
            },
            {
              "attr": "topicsExtraInfo",
              "valueType": "ObjectArray",
              "description": "主题列表各自对应的描述信息。",
              "name": "topicsExtraInfo"
            },
            {
              "attr": "callerRemote",
              "valueType": "Object",
              "description": "当前消息来源，即发送者，对象格式",
              "name": "callerRemote"
            },
            {
              "attr": "topicRecv",
              "valueType": "Object",
              "description": "当前接收到的消息主题，任意字符串格式，\n相当于key。",
              "name": "topicRecv"
            },
            {
              "attr": "contentRecv",
              "valueType": "Object",
              "description": "当前接收到的内容，可以是字符串、普通js对象，\n或图元对象。默认数组格式。对应收发器发送内容\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息过来。",
              "name": "contentRecv"
            },
            {
              "attr": "waitingRecv",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "启动监听，等待接收外部发送器\n的数据",
              "name": "waitingRecv"
            },
            {
              "attr": "messagPostGet",
              "valueType": "Object",
              "description": "接收到原生的postMessage消息，\n不能传递图元对象，有别于收发器方式。",
              "name": "messagPostGet"
            },
            {
              "attr": "waitingMsgPost",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "启动监听等待接收原生postMessage\n消息，不能传递图元对象，有别于收发器方式。",
              "name": "waitingMsgPost"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "onEvent",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "onEvent",
              "dynamicCreate": true
            },
            {
              "attr": "onPostMessage",
              "valueType": "Function",
              "description": "收到跨网页iframe事件消息。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "name": "onPostMessage"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true,
              "name": "_bindEvents_0"
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "visible": {
            "func": "attr@visible",
            "value": true
          },
          "comps": [
            {
              "type": "rect",
              "background": "rgba(33,33,33,0.01)",
              "borderColor": "#979797",
              "displayName": "矩形",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
              "visible": false,
              "prefix": "recv",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
              "visible": false,
              "prefix": "call",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0,
                37.47666,
                64.0735,
                66.39302
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rotation": 5.69426,
              "rect": [
                56.75093,
                4.67922,
                58.13316,
                65.5949
              ]
            }
          ],
          "uuid": "6E448449-2AA3-4E7C-804C-9F35CAB1C7C6"
        },
        "position": {
          "x": 184.63351,
          "y": 604.0232
        },
        "width": 100,
        "height": 100
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "切换目录和抽屉",
        "label.font": "26px arial, sans-serif",
        "label.align": "left"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
        "triggerSend": false,
        "call.visible": true,
        "recv.visible": false,
        "callRecv.visible": false,
        "mode": "send",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "contentSend"
        ],
        "bindControlsTag": [
          "代码模块1"
        ],
        "bindControlsAttr": [
          "inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "topicsWhiteList": [
          "容器模板-二级菜单"
        ],
        "topicRecv": "切换目录和抽屉",
        "contentRecv": 4,
        "addrTarget": "*",
        "bindEvents": [
          "*",
          "onEvent"
        ],
        "callerRemote": "displays/develop/uiotos/uiotos.json>0>scroll1>a:displays/develop/uiotos/editor/侧边工具条.json>0>bus2",
        "_bindEvents_0-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_0": "*",
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "contentSend": true,
        "topicSend": "切换目录和抽屉",
        "addrsRemote": [
          "*"
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 40261,
      "p": {
        "name": "edge",
        "displayName": "0（edge5）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@代码模块1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：发送内容@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 40260
        },
        "tag": "edge5",
        "source": {
          "__i": 40260
        },
        "target": {
          "__i": 40262
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@代码模块1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：发送内容@bus2</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 40262,
      "p": {
        "name": "代码模块",
        "displayName": "代码模块（代码模块1）",
        "toolTip": "代码模块（高级）<br>codeBlock",
        "tag": "代码模块1",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popDirection": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBackground": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popPadding": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderColor": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popBorderRadius": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "popTriggerEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_function": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "convertFlatToTree": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputKeys": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputValues": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Tue Jul 30 2024 12:36:18 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "codeBlock",
              "group": "功能",
              "name": "功能选项",
              "description": "代码模块（高级）",
              "extraInfo": "*"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "Object",
              "name": "输入（组）",
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n自定义函数的传入参数。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "jsonStruct",
              "valueType": "JsonStruct",
              "name": "转换方式",
              "defaultValue": 1,
              "description": "输入与参数键值组的对应关系选项。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#pK7XI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "inputKeys",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入键组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入值组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#CSjM8' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputValues",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "name": "输入值组",
              "description": "输入组扁平化后的值列表，双向同步。\n                        与输入键组配合使用。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#oXg9Q' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "_function",
              "valueType": "Function",
              "name": "自定义代码 ☆",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "inputs"
                ]
              },
              "bindIgnored": true,
              "description": "自定义工具函数功能代码。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#mbNJh' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "defaultValue": "__ht__function(data, gv, cache, inputs) {return inputs;}",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#CE3nV style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "comps": [
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "displayName": "Shape（Shape1）",
              "points": "__ht__list[\n  {\n    \"x\": 52.75427,\n    \"y\": 68.39499\n  },\n  {\n    \"x\": 52.63693,\n    \"y\": 68.39499\n  },\n  {\n    \"x\": 52.51863,\n    \"y\": 68.38158\n  },\n  {\n    \"x\": 52.40225,\n    \"y\": 68.35381\n  },\n  {\n    \"x\": 50.27248,\n    \"y\": 67.85141\n  },\n  {\n    \"x\": 48.24661,\n    \"y\": 67.01138\n  },\n  {\n    \"x\": 46.37976,\n    \"y\": 65.85717\n  },\n  {\n    \"x\": 46.02282,\n    \"y\": 65.63641\n  },\n  {\n    \"x\": 45.77175,\n    \"y\": 65.27843\n  },\n  {\n    \"x\": 45.68579,\n    \"y\": 64.86761\n  },\n  {\n    \"x\": 45.59982,\n    \"y\": 64.45682\n  },\n  {\n    \"x\": 45.68629,\n    \"y\": 64.02821\n  },\n  {\n    \"x\": 45.92478,\n    \"y\": 63.68284\n  },\n  {\n    \"x\": 46.7179,\n    \"y\": 62.53391\n  },\n  {\n    \"x\": 46.57565,\n    \"y\": 60.98266\n  },\n  {\n    \"x\": 45.58715,\n    \"y\": 59.99368\n  },\n  {\n    \"x\": 44.59816,\n    \"y\": 59.00518\n  },\n  {\n    \"x\": 43.04693,\n    \"y\": 58.86294\n  },\n  {\n    \"x\": 41.89798,\n    \"y\": 59.65604\n  },\n  {\n    \"x\": 41.55262,\n    \"y\": 59.89454\n  },\n  {\n    \"x\": 41.12402,\n    \"y\": 59.981\n  },\n  {\n    \"x\": 40.71321,\n    \"y\": 59.89504\n  },\n  {\n    \"x\": 40.3024,\n    \"y\": 59.80907\n  },\n  {\n    \"x\": 39.94441,\n    \"y\": 59.55802\n  },\n  {\n    \"x\": 39.72367,\n    \"y\": 59.20106\n  },\n  {\n    \"x\": 38.56944,\n    \"y\": 57.3347\n  },\n  {\n    \"x\": 37.72941,\n    \"y\": 55.30836\n  },\n  {\n    \"x\": 37.22702,\n    \"y\": 53.17857\n  },\n  {\n    \"x\": 37.13063,\n    \"y\": 52.77004\n  },\n  {\n    \"x\": 37.20617,\n    \"y\": 52.33933\n  },\n  {\n    \"x\": 37.43583,\n    \"y\": 51.98797\n  },\n  {\n    \"x\": 37.66572,\n    \"y\": 51.63644\n  },\n  {\n    \"x\": 38.02971,\n    \"y\": 51.39458\n  },\n  {\n    \"x\": 38.44301,\n    \"y\": 51.31939\n  },\n  {\n    \"x\": 39.81705,\n    \"y\": 51.06843\n  },\n  {\n    \"x\": 40.81417,\n    \"y\": 49.87063\n  },\n  {\n    \"x\": 40.81417,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 40.81417,\n    \"y\": 47.07275\n  },\n  {\n    \"x\": 39.81705,\n    \"y\": 45.87497\n  },\n  {\n    \"x\": 38.44301,\n    \"y\": 45.62401\n  },\n  {\n    \"x\": 38.03004,\n    \"y\": 45.54859\n  },\n  {\n    \"x\": 37.66566,\n    \"y\": 45.30672\n  },\n  {\n    \"x\": 37.43583,\n    \"y\": 44.95542\n  },\n  {\n    \"x\": 37.20599,\n    \"y\": 44.60415\n  },\n  {\n    \"x\": 37.13043,\n    \"y\": 44.17335\n  },\n  {\n    \"x\": 37.22702,\n    \"y\": 43.76482\n  },\n  {\n    \"x\": 37.72941,\n    \"y\": 41.63504\n  },\n  {\n    \"x\": 38.56944,\n    \"y\": 39.6087\n  },\n  {\n    \"x\": 39.72367,\n    \"y\": 37.74233\n  },\n  {\n    \"x\": 39.94441,\n    \"y\": 37.38536\n  },\n  {\n    \"x\": 40.3024,\n    \"y\": 37.13431\n  },\n  {\n    \"x\": 40.71321,\n    \"y\": 37.04836\n  },\n  {\n    \"x\": 41.12402,\n    \"y\": 36.96238\n  },\n  {\n    \"x\": 41.55262,\n    \"y\": 37.04884\n  },\n  {\n    \"x\": 41.89798,\n    \"y\": 37.28734\n  },\n  {\n    \"x\": 43.04693,\n    \"y\": 38.08044\n  },\n  {\n    \"x\": 44.59816,\n    \"y\": 37.93821\n  },\n  {\n    \"x\": 45.58715,\n    \"y\": 36.9497\n  },\n  {\n    \"x\": 46.57613,\n    \"y\": 35.96072\n  },\n  {\n    \"x\": 46.7179,\n    \"y\": 34.40948\n  },\n  {\n    \"x\": 45.92478,\n    \"y\": 33.26054\n  },\n  {\n    \"x\": 45.68645,\n    \"y\": 32.91507\n  },\n  {\n    \"x\": 45.6,\n    \"y\": 32.48652\n  },\n  {\n    \"x\": 45.68581,\n    \"y\": 32.07568\n  },\n  {\n    \"x\": 45.77201,\n    \"y\": 31.66476\n  },\n  {\n    \"x\": 46.02297,\n    \"y\": 31.30701\n  },\n  {\n    \"x\": 46.37976,\n    \"y\": 31.08621\n  },\n  {\n    \"x\": 48.24614,\n    \"y\": 29.93201\n  },\n  {\n    \"x\": 50.27248,\n    \"y\": 29.09197\n  },\n  {\n    \"x\": 52.40225,\n    \"y\": 28.58959\n  },\n  {\n    \"x\": 52.81079,\n    \"y\": 28.493\n  },\n  {\n    \"x\": 53.24159,\n    \"y\": 28.56855\n  },\n  {\n    \"x\": 53.59287,\n    \"y\": 28.79839\n  },\n  {\n    \"x\": 53.9444,\n    \"y\": 29.02827\n  },\n  {\n    \"x\": 54.18626,\n    \"y\": 29.39227\n  },\n  {\n    \"x\": 54.26145,\n    \"y\": 29.80557\n  },\n  {\n    \"x\": 54.5124,\n    \"y\": 31.17961\n  },\n  {\n    \"x\": 55.71019,\n    \"y\": 32.17673\n  },\n  {\n    \"x\": 57.10913,\n    \"y\": 32.17673\n  },\n  {\n    \"x\": 58.50809,\n    \"y\": 32.17673\n  },\n  {\n    \"x\": 59.70587,\n    \"y\": 31.17961\n  },\n  {\n    \"x\": 59.95683,\n    \"y\": 29.80557\n  },\n  {\n    \"x\": 60.03223,\n    \"y\": 29.3926\n  },\n  {\n    \"x\": 60.27411,\n    \"y\": 29.02822\n  },\n  {\n    \"x\": 60.62541,\n    \"y\": 28.79839\n  },\n  {\n    \"x\": 60.97669,\n    \"y\": 28.56855\n  },\n  {\n    \"x\": 61.40749,\n    \"y\": 28.493\n  },\n  {\n    \"x\": 61.81602,\n    \"y\": 28.58959\n  },\n  {\n    \"x\": 63.9458,\n    \"y\": 29.09197\n  },\n  {\n    \"x\": 65.97165,\n    \"y\": 29.93201\n  },\n  {\n    \"x\": 67.83851,\n    \"y\": 31.08621\n  },\n  {\n    \"x\": 68.19546,\n    \"y\": 31.30698\n  },\n  {\n    \"x\": 68.44653,\n    \"y\": 31.66496\n  },\n  {\n    \"x\": 68.53248,\n    \"y\": 32.07577\n  },\n  {\n    \"x\": 68.61844,\n    \"y\": 32.48658\n  },\n  {\n    \"x\": 68.53198,\n    \"y\": 32.91518\n  },\n  {\n    \"x\": 68.29348,\n    \"y\": 33.26054\n  },\n  {\n    \"x\": 67.50038,\n    \"y\": 34.40948\n  },\n  {\n    \"x\": 67.64263,\n    \"y\": 35.96072\n  },\n  {\n    \"x\": 68.63112,\n    \"y\": 36.9497\n  },\n  {\n    \"x\": 69.6201,\n    \"y\": 37.93868\n  },\n  {\n    \"x\": 71.17134,\n    \"y\": 38.08044\n  },\n  {\n    \"x\": 72.32028,\n    \"y\": 37.28734\n  },\n  {\n    \"x\": 72.66564,\n    \"y\": 37.04884\n  },\n  {\n    \"x\": 73.09426,\n    \"y\": 36.96238\n  },\n  {\n    \"x\": 73.50507,\n    \"y\": 37.04836\n  },\n  {\n    \"x\": 73.91588,\n    \"y\": 37.13431\n  },\n  {\n    \"x\": 74.27385,\n    \"y\": 37.38536\n  },\n  {\n    \"x\": 74.49461,\n    \"y\": 37.74233\n  },\n  {\n    \"x\": 75.64882,\n    \"y\": 39.6087\n  },\n  {\n    \"x\": 76.48886,\n    \"y\": 41.63504\n  },\n  {\n    \"x\": 76.99125,\n    \"y\": 43.76482\n  },\n  {\n    \"x\": 77.08751,\n    \"y\": 44.17382\n  },\n  {\n    \"x\": 77.01232,\n    \"y\": 44.60389\n  },\n  {\n    \"x\": 76.78244,\n    \"y\": 44.95542\n  },\n  {\n    \"x\": 76.55275,\n    \"y\": 45.30687\n  },\n  {\n    \"x\": 76.18831,\n    \"y\": 45.54877\n  },\n  {\n    \"x\": 75.77525,\n    \"y\": 45.62401\n  },\n  {\n    \"x\": 74.40122,\n    \"y\": 45.87497\n  },\n  {\n    \"x\": 73.4041,\n    \"y\": 47.07275\n  },\n  {\n    \"x\": 73.4041,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 73.4041,\n    \"y\": 49.31795\n  },\n  {\n    \"x\": 72.7178,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 71.87154,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 71.02527,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 70.33897,\n    \"y\": 49.31795\n  },\n  {\n    \"x\": 70.33897,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 70.33897,\n    \"y\": 46.1647\n  },\n  {\n    \"x\": 71.65745,\n    \"y\": 44.12353\n  },\n  {\n    \"x\": 73.63734,\n    \"y\": 43.13695\n  },\n  {\n    \"x\": 73.35135,\n    \"y\": 42.24948\n  },\n  {\n    \"x\": 72.99354,\n    \"y\": 41.38678\n  },\n  {\n    \"x\": 72.56741,\n    \"y\": 40.55745\n  },\n  {\n    \"x\": 70.4702,\n    \"y\": 41.2586\n  },\n  {\n    \"x\": 68.09521,\n    \"y\": 40.74759\n  },\n  {\n    \"x\": 66.46398,\n    \"y\": 39.11684\n  },\n  {\n    \"x\": 64.83325,\n    \"y\": 37.4861\n  },\n  {\n    \"x\": 64.32175,\n    \"y\": 35.11111\n  },\n  {\n    \"x\": 65.02338,\n    \"y\": 33.0139\n  },\n  {\n    \"x\": 64.19395,\n    \"y\": 32.58799\n  },\n  {\n    \"x\": 63.33128,\n    \"y\": 32.23017\n  },\n  {\n    \"x\": 62.44389,\n    \"y\": 31.94397\n  },\n  {\n    \"x\": 61.4573,\n    \"y\": 33.92386\n  },\n  {\n    \"x\": 59.41612,\n    \"y\": 35.24234\n  },\n  {\n    \"x\": 57.10913,\n    \"y\": 35.24234\n  },\n  {\n    \"x\": 54.80216,\n    \"y\": 35.24234\n  },\n  {\n    \"x\": 52.76097,\n    \"y\": 33.92386\n  },\n  {\n    \"x\": 51.77439,\n    \"y\": 31.94397\n  },\n  {\n    \"x\": 50.88699,\n    \"y\": 32.23017\n  },\n  {\n    \"x\": 50.02433,\n    \"y\": 32.58799\n  },\n  {\n    \"x\": 49.1949,\n    \"y\": 33.0139\n  },\n  {\n    \"x\": 49.89653,\n    \"y\": 35.11111\n  },\n  {\n    \"x\": 49.38502,\n    \"y\": 37.4861\n  },\n  {\n    \"x\": 47.75428,\n    \"y\": 39.11733\n  },\n  {\n    \"x\": 46.60056,\n    \"y\": 40.27105\n  },\n  {\n    \"x\": 45.07374,\n    \"y\": 40.86444\n  },\n  {\n    \"x\": 43.53686,\n    \"y\": 40.86444\n  },\n  {\n    \"x\": 42.90133,\n    \"y\": 40.86444\n  },\n  {\n    \"x\": 42.26436,\n    \"y\": 40.76291\n  },\n  {\n    \"x\": 41.65086,\n    \"y\": 40.55793\n  },\n  {\n    \"x\": 41.22494,\n    \"y\": 41.38736\n  },\n  {\n    \"x\": 40.86712,\n    \"y\": 42.25003\n  },\n  {\n    \"x\": 40.58094,\n    \"y\": 43.13742\n  },\n  {\n    \"x\": 42.56081,\n    \"y\": 44.12401\n  },\n  {\n    \"x\": 43.87929,\n    \"y\": 46.16519\n  },\n  {\n    \"x\": 43.87929,\n    \"y\": 48.47218\n  },\n  {\n    \"x\": 43.87929,\n    \"y\": 50.77915\n  },\n  {\n    \"x\": 42.56081,\n    \"y\": 52.82034\n  },\n  {\n    \"x\": 40.58094,\n    \"y\": 53.80692\n  },\n  {\n    \"x\": 40.86693,\n    \"y\": 54.69439\n  },\n  {\n    \"x\": 41.22474,\n    \"y\": 55.55707\n  },\n  {\n    \"x\": 41.65086,\n    \"y\": 56.38641\n  },\n  {\n    \"x\": 43.74807,\n    \"y\": 55.68527\n  },\n  {\n    \"x\": 46.12306,\n    \"y\": 56.19628\n  },\n  {\n    \"x\": 47.75428,\n    \"y\": 57.82703\n  },\n  {\n    \"x\": 49.38502,\n    \"y\": 59.45777\n  },\n  {\n    \"x\": 49.89653,\n    \"y\": 61.83324\n  },\n  {\n    \"x\": 49.1949,\n    \"y\": 63.93045\n  },\n  {\n    \"x\": 50.02535,\n    \"y\": 64.35669\n  },\n  {\n    \"x\": 50.88742,\n    \"y\": 64.71446\n  },\n  {\n    \"x\": 51.77439,\n    \"y\": 65.00037\n  },\n  {\n    \"x\": 52.76097,\n    \"y\": 63.0205\n  },\n  {\n    \"x\": 54.80216,\n    \"y\": 61.70202\n  },\n  {\n    \"x\": 57.10913,\n    \"y\": 61.70202\n  },\n  {\n    \"x\": 57.95539,\n    \"y\": 61.70202\n  },\n  {\n    \"x\": 58.64169,\n    \"y\": 62.38832\n  },\n  {\n    \"x\": 58.64169,\n    \"y\": 63.23458\n  },\n  {\n    \"x\": 58.64169,\n    \"y\": 64.08084\n  },\n  {\n    \"x\": 57.95539,\n    \"y\": 64.76714\n  },\n  {\n    \"x\": 57.10913,\n    \"y\": 64.76714\n  },\n  {\n    \"x\": 55.71019,\n    \"y\": 64.76714\n  },\n  {\n    \"x\": 54.5124,\n    \"y\": 65.76426\n  },\n  {\n    \"x\": 54.26145,\n    \"y\": 67.1383\n  },\n  {\n    \"x\": 54.18603,\n    \"y\": 67.55127\n  },\n  {\n    \"x\": 53.94416,\n    \"y\": 67.91565\n  },\n  {\n    \"x\": 53.59287,\n    \"y\": 68.14548\n  },\n  {\n    \"x\": 53.34348,\n    \"y\": 68.3082\n  },\n  {\n    \"x\": 53.05205,\n    \"y\": 68.3949\n  },\n  {\n    \"x\": 52.75427,\n    \"y\": 68.39499\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 37.13043,
                "y": 28.493,
                "width": 39.95708,
                "height": 39.90199
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 57.10962,\n    \"y\": 59.92711\n  },\n  {\n    \"x\": 54.04977,\n    \"y\": 59.92711\n  },\n  {\n    \"x\": 51.17286,\n    \"y\": 58.73555\n  },\n  {\n    \"x\": 49.00954,\n    \"y\": 56.57177\n  },\n  {\n    \"x\": 46.84576,\n    \"y\": 54.40798\n  },\n  {\n    \"x\": 45.6542,\n    \"y\": 51.53154\n  },\n  {\n    \"x\": 45.6542,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 45.6542,\n    \"y\": 45.41184\n  },\n  {\n    \"x\": 46.84576,\n    \"y\": 42.53493\n  },\n  {\n    \"x\": 49.00954,\n    \"y\": 40.37163\n  },\n  {\n    \"x\": 51.17333,\n    \"y\": 38.20784\n  },\n  {\n    \"x\": 54.04977,\n    \"y\": 37.01628\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 37.01628\n  },\n  {\n    \"x\": 60.16947,\n    \"y\": 37.01628\n  },\n  {\n    \"x\": 63.04638,\n    \"y\": 38.20784\n  },\n  {\n    \"x\": 65.20969,\n    \"y\": 40.37163\n  },\n  {\n    \"x\": 67.37347,\n    \"y\": 42.53542\n  },\n  {\n    \"x\": 68.56503,\n    \"y\": 45.41184\n  },\n  {\n    \"x\": 68.56503,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 68.56503,\n    \"y\": 49.31795\n  },\n  {\n    \"x\": 67.87873,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 67.03247,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 66.18621,\n    \"y\": 50.00425\n  },\n  {\n    \"x\": 65.49991,\n    \"y\": 49.31795\n  },\n  {\n    \"x\": 65.49991,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 65.49991,\n    \"y\": 43.84527\n  },\n  {\n    \"x\": 61.73604,\n    \"y\": 40.0814\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 40.0814\n  },\n  {\n    \"x\": 52.4832,\n    \"y\": 40.0814\n  },\n  {\n    \"x\": 48.71932,\n    \"y\": 43.84527\n  },\n  {\n    \"x\": 48.71932,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 48.71932,\n    \"y\": 53.09811\n  },\n  {\n    \"x\": 52.4832,\n    \"y\": 56.86199\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 56.86199\n  },\n  {\n    \"x\": 57.95588,\n    \"y\": 56.86199\n  },\n  {\n    \"x\": 58.64218,\n    \"y\": 57.54829\n  },\n  {\n    \"x\": 58.64218,\n    \"y\": 58.39455\n  },\n  {\n    \"x\": 58.64218,\n    \"y\": 59.24081\n  },\n  {\n    \"x\": 57.95588,\n    \"y\": 59.92711\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 59.92711\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 45.6542,
                "y": 37.01628,
                "width": 22.91083,
                "height": 22.91083
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 57.10962,\n    \"y\": 53.02771\n  },\n  {\n    \"x\": 54.59765,\n    \"y\": 53.02771\n  },\n  {\n    \"x\": 52.5536,\n    \"y\": 50.98413\n  },\n  {\n    \"x\": 52.5536,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 52.5536,\n    \"y\": 45.95925\n  },\n  {\n    \"x\": 54.59718,\n    \"y\": 43.91568\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 43.91568\n  },\n  {\n    \"x\": 59.62206,\n    \"y\": 43.91568\n  },\n  {\n    \"x\": 61.66563,\n    \"y\": 45.95925\n  },\n  {\n    \"x\": 61.66563,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 61.66563,\n    \"y\": 50.98413\n  },\n  {\n    \"x\": 59.62159,\n    \"y\": 53.02771\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 53.02771\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 46.9808\n  },\n  {\n    \"x\": 56.28778,\n    \"y\": 46.9808\n  },\n  {\n    \"x\": 55.61872,\n    \"y\": 47.64939\n  },\n  {\n    \"x\": 55.61872,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 55.61872,\n    \"y\": 49.29401\n  },\n  {\n    \"x\": 56.2873,\n    \"y\": 49.96259\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 49.96259\n  },\n  {\n    \"x\": 57.93194,\n    \"y\": 49.96259\n  },\n  {\n    \"x\": 58.60051,\n    \"y\": 49.29401\n  },\n  {\n    \"x\": 58.60051,\n    \"y\": 48.47169\n  },\n  {\n    \"x\": 58.60051,\n    \"y\": 47.64939\n  },\n  {\n    \"x\": 57.93145,\n    \"y\": 46.9808\n  },\n  {\n    \"x\": 57.10962,\n    \"y\": 46.9808\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 52.5536,
                "y": 43.91568,
                "width": 9.11203,
                "height": 9.11203
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 55.57706,\n    \"y\": 51.1848\n  },\n  {\n    \"x\": 58.64218,\n    \"y\": 51.1848\n  },\n  {\n    \"x\": 58.64218,\n    \"y\": 58.39264\n  },\n  {\n    \"x\": 55.57706,\n    \"y\": 58.39264\n  },\n  {\n    \"x\": 58.69242,\n    \"y\": 45.78737\n  },\n  {\n    \"x\": 64.93397,\n    \"y\": 42.18369\n  },\n  {\n    \"x\": 66.46653,\n    \"y\": 44.83808\n  },\n  {\n    \"x\": 60.22498,\n    \"y\": 48.44175\n  },\n  {\n    \"x\": 47.75112,\n    \"y\": 44.8389\n  },\n  {\n    \"x\": 49.28368,\n    \"y\": 42.1845\n  },\n  {\n    \"x\": 55.52523,\n    \"y\": 45.78817\n  },\n  {\n    \"x\": 53.99267,\n    \"y\": 48.44257\n  },\n  {\n    \"x\": 71.78724,\n    \"y\": 71.46011\n  },\n  {\n    \"x\": 71.53587,\n    \"y\": 71.46005\n  },\n  {\n    \"x\": 71.28988,\n    \"y\": 71.38681\n  },\n  {\n    \"x\": 71.07939,\n    \"y\": 71.24939\n  },\n  {\n    \"x\": 70.783,\n    \"y\": 71.05553\n  },\n  {\n    \"x\": 70.5789,\n    \"y\": 70.74817\n  },\n  {\n    \"x\": 70.51523,\n    \"y\": 70.39978\n  },\n  {\n    \"x\": 70.43524,\n    \"y\": 69.96348\n  },\n  {\n    \"x\": 70.05449,\n    \"y\": 69.64643\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 69.64643\n  },\n  {\n    \"x\": 69.16465,\n    \"y\": 69.64643\n  },\n  {\n    \"x\": 68.7839,\n    \"y\": 69.96348\n  },\n  {\n    \"x\": 68.70393,\n    \"y\": 70.39978\n  },\n  {\n    \"x\": 68.64022,\n    \"y\": 70.7482\n  },\n  {\n    \"x\": 68.43606,\n    \"y\": 71.05559\n  },\n  {\n    \"x\": 68.1396,\n    \"y\": 71.24942\n  },\n  {\n    \"x\": 67.84314,\n    \"y\": 71.44325\n  },\n  {\n    \"x\": 67.47969,\n    \"y\": 71.507\n  },\n  {\n    \"x\": 67.13496,\n    \"y\": 71.42563\n  },\n  {\n    \"x\": 66.01533,\n    \"y\": 71.16164\n  },\n  {\n    \"x\": 64.94576,\n    \"y\": 70.71816\n  },\n  {\n    \"x\": 63.96782,\n    \"y\": 70.11242\n  },\n  {\n    \"x\": 63.66669,\n    \"y\": 69.92616\n  },\n  {\n    \"x\": 63.45482,\n    \"y\": 69.62421\n  },\n  {\n    \"x\": 63.38211,\n    \"y\": 69.27766\n  },\n  {\n    \"x\": 63.30979,\n    \"y\": 68.93092\n  },\n  {\n    \"x\": 63.38258,\n    \"y\": 68.56932\n  },\n  {\n    \"x\": 63.58373,\n    \"y\": 68.27814\n  },\n  {\n    \"x\": 63.83565,\n    \"y\": 67.9132\n  },\n  {\n    \"x\": 63.79062,\n    \"y\": 67.4199\n  },\n  {\n    \"x\": 63.47598,\n    \"y\": 67.10525\n  },\n  {\n    \"x\": 63.16131,\n    \"y\": 66.7906\n  },\n  {\n    \"x\": 62.66802,\n    \"y\": 66.74558\n  },\n  {\n    \"x\": 62.30309,\n    \"y\": 66.9975\n  },\n  {\n    \"x\": 62.01165,\n    \"y\": 67.19851\n  },\n  {\n    \"x\": 61.65014,\n    \"y\": 67.27144\n  },\n  {\n    \"x\": 61.30356,\n    \"y\": 67.19912\n  },\n  {\n    \"x\": 60.95702,\n    \"y\": 67.12639\n  },\n  {\n    \"x\": 60.65507,\n    \"y\": 66.91453\n  },\n  {\n    \"x\": 60.4688,\n    \"y\": 66.61339\n  },\n  {\n    \"x\": 59.862,\n    \"y\": 65.63159\n  },\n  {\n    \"x\": 59.41995,\n    \"y\": 64.56598\n  },\n  {\n    \"x\": 59.15559,\n    \"y\": 63.44626\n  },\n  {\n    \"x\": 59.07421,\n    \"y\": 63.10153\n  },\n  {\n    \"x\": 59.13796,\n    \"y\": 62.73808\n  },\n  {\n    \"x\": 59.3318,\n    \"y\": 62.44162\n  },\n  {\n    \"x\": 59.52564,\n    \"y\": 62.14517\n  },\n  {\n    \"x\": 59.83302,\n    \"y\": 61.94101\n  },\n  {\n    \"x\": 60.18145,\n    \"y\": 61.8773\n  },\n  {\n    \"x\": 60.61775,\n    \"y\": 61.79731\n  },\n  {\n    \"x\": 60.9348,\n    \"y\": 61.41658\n  },\n  {\n    \"x\": 60.9348,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 60.9348,\n    \"y\": 60.52672\n  },\n  {\n    \"x\": 60.61775,\n    \"y\": 60.14599\n  },\n  {\n    \"x\": 60.18145,\n    \"y\": 60.066\n  },\n  {\n    \"x\": 59.83302,\n    \"y\": 60.0023\n  },\n  {\n    \"x\": 59.52564,\n    \"y\": 59.79814\n  },\n  {\n    \"x\": 59.3318,\n    \"y\": 59.50169\n  },\n  {\n    \"x\": 59.13796,\n    \"y\": 59.20522\n  },\n  {\n    \"x\": 59.07421,\n    \"y\": 58.84177\n  },\n  {\n    \"x\": 59.15559,\n    \"y\": 58.49705\n  },\n  {\n    \"x\": 59.41958,\n    \"y\": 57.37741\n  },\n  {\n    \"x\": 59.86307,\n    \"y\": 56.30785\n  },\n  {\n    \"x\": 60.4688,\n    \"y\": 55.32991\n  },\n  {\n    \"x\": 60.65507,\n    \"y\": 55.02877\n  },\n  {\n    \"x\": 60.95702,\n    \"y\": 54.81691\n  },\n  {\n    \"x\": 61.30356,\n    \"y\": 54.74418\n  },\n  {\n    \"x\": 61.65014,\n    \"y\": 54.67162\n  },\n  {\n    \"x\": 62.01174,\n    \"y\": 54.74456\n  },\n  {\n    \"x\": 62.30309,\n    \"y\": 54.94581\n  },\n  {\n    \"x\": 62.66802,\n    \"y\": 55.19772\n  },\n  {\n    \"x\": 63.16131,\n    \"y\": 55.15223\n  },\n  {\n    \"x\": 63.47598,\n    \"y\": 54.83805\n  },\n  {\n    \"x\": 63.79062,\n    \"y\": 54.52339\n  },\n  {\n    \"x\": 63.83565,\n    \"y\": 54.03059\n  },\n  {\n    \"x\": 63.58373,\n    \"y\": 53.66516\n  },\n  {\n    \"x\": 63.38271,\n    \"y\": 53.37372\n  },\n  {\n    \"x\": 63.30979,\n    \"y\": 53.01222\n  },\n  {\n    \"x\": 63.38211,\n    \"y\": 52.66564\n  },\n  {\n    \"x\": 63.45482,\n    \"y\": 52.3191\n  },\n  {\n    \"x\": 63.66669,\n    \"y\": 52.01715\n  },\n  {\n    \"x\": 63.96782,\n    \"y\": 51.83088\n  },\n  {\n    \"x\": 64.94963,\n    \"y\": 51.22408\n  },\n  {\n    \"x\": 66.01524,\n    \"y\": 50.78202\n  },\n  {\n    \"x\": 67.13496,\n    \"y\": 50.51767\n  },\n  {\n    \"x\": 67.47969,\n    \"y\": 50.43621\n  },\n  {\n    \"x\": 67.84319,\n    \"y\": 50.49993\n  },\n  {\n    \"x\": 68.13967,\n    \"y\": 50.69377\n  },\n  {\n    \"x\": 68.43615,\n    \"y\": 50.88762\n  },\n  {\n    \"x\": 68.6403,\n    \"y\": 51.19505\n  },\n  {\n    \"x\": 68.70393,\n    \"y\": 51.54353\n  },\n  {\n    \"x\": 68.7839,\n    \"y\": 51.97983\n  },\n  {\n    \"x\": 69.16465,\n    \"y\": 52.29687\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 52.29687\n  },\n  {\n    \"x\": 70.05449,\n    \"y\": 52.29687\n  },\n  {\n    \"x\": 70.43524,\n    \"y\": 51.97983\n  },\n  {\n    \"x\": 70.51523,\n    \"y\": 51.54353\n  },\n  {\n    \"x\": 70.57893,\n    \"y\": 51.1951\n  },\n  {\n    \"x\": 70.78309,\n    \"y\": 50.88771\n  },\n  {\n    \"x\": 71.07954,\n    \"y\": 50.69388\n  },\n  {\n    \"x\": 71.37599,\n    \"y\": 50.50005\n  },\n  {\n    \"x\": 71.73946,\n    \"y\": 50.4363\n  },\n  {\n    \"x\": 72.08418,\n    \"y\": 50.51767\n  },\n  {\n    \"x\": 73.20382,\n    \"y\": 50.78166\n  },\n  {\n    \"x\": 74.27338,\n    \"y\": 51.22514\n  },\n  {\n    \"x\": 75.25131,\n    \"y\": 51.83088\n  },\n  {\n    \"x\": 75.55246,\n    \"y\": 52.01715\n  },\n  {\n    \"x\": 75.76432,\n    \"y\": 52.3191\n  },\n  {\n    \"x\": 75.83704,\n    \"y\": 52.66564\n  },\n  {\n    \"x\": 75.90936,\n    \"y\": 53.01238\n  },\n  {\n    \"x\": 75.83656,\n    \"y\": 53.37398\n  },\n  {\n    \"x\": 75.63541,\n    \"y\": 53.66516\n  },\n  {\n    \"x\": 75.38349,\n    \"y\": 54.0301\n  },\n  {\n    \"x\": 75.42851,\n    \"y\": 54.52339\n  },\n  {\n    \"x\": 75.74317,\n    \"y\": 54.83805\n  },\n  {\n    \"x\": 76.05782,\n    \"y\": 55.1527\n  },\n  {\n    \"x\": 76.55111,\n    \"y\": 55.19821\n  },\n  {\n    \"x\": 76.91607,\n    \"y\": 54.94581\n  },\n  {\n    \"x\": 77.20741,\n    \"y\": 54.74456\n  },\n  {\n    \"x\": 77.56904,\n    \"y\": 54.67161\n  },\n  {\n    \"x\": 77.91563,\n    \"y\": 54.74418\n  },\n  {\n    \"x\": 78.26222,\n    \"y\": 54.81677\n  },\n  {\n    \"x\": 78.5642,\n    \"y\": 55.02866\n  },\n  {\n    \"x\": 78.75035,\n    \"y\": 55.32991\n  },\n  {\n    \"x\": 79.35715,\n    \"y\": 56.31171\n  },\n  {\n    \"x\": 79.79919,\n    \"y\": 57.37732\n  },\n  {\n    \"x\": 80.06356,\n    \"y\": 58.49705\n  },\n  {\n    \"x\": 80.14493,\n    \"y\": 58.84177\n  },\n  {\n    \"x\": 80.08118,\n    \"y\": 59.20522\n  },\n  {\n    \"x\": 79.88735,\n    \"y\": 59.50169\n  },\n  {\n    \"x\": 79.6935,\n    \"y\": 59.79814\n  },\n  {\n    \"x\": 79.38613,\n    \"y\": 60.0023\n  },\n  {\n    \"x\": 79.0377,\n    \"y\": 60.066\n  },\n  {\n    \"x\": 78.6014,\n    \"y\": 60.14599\n  },\n  {\n    \"x\": 78.28435,\n    \"y\": 60.52672\n  },\n  {\n    \"x\": 78.28435,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 78.28435,\n    \"y\": 61.41658\n  },\n  {\n    \"x\": 78.6014,\n    \"y\": 61.79731\n  },\n  {\n    \"x\": 79.0377,\n    \"y\": 61.8773\n  },\n  {\n    \"x\": 79.38613,\n    \"y\": 61.94101\n  },\n  {\n    \"x\": 79.6935,\n    \"y\": 62.14517\n  },\n  {\n    \"x\": 79.88735,\n    \"y\": 62.44162\n  },\n  {\n    \"x\": 80.08118,\n    \"y\": 62.73808\n  },\n  {\n    \"x\": 80.14493,\n    \"y\": 63.10153\n  },\n  {\n    \"x\": 80.06356,\n    \"y\": 63.44626\n  },\n  {\n    \"x\": 79.79957,\n    \"y\": 64.56589\n  },\n  {\n    \"x\": 79.35608,\n    \"y\": 65.63545\n  },\n  {\n    \"x\": 78.75035,\n    \"y\": 66.61339\n  },\n  {\n    \"x\": 78.56406,\n    \"y\": 66.91453\n  },\n  {\n    \"x\": 78.26213,\n    \"y\": 67.12639\n  },\n  {\n    \"x\": 77.91557,\n    \"y\": 67.19912\n  },\n  {\n    \"x\": 77.569,\n    \"y\": 67.27148\n  },\n  {\n    \"x\": 77.20747,\n    \"y\": 67.19856\n  },\n  {\n    \"x\": 76.91607,\n    \"y\": 66.9975\n  },\n  {\n    \"x\": 76.55111,\n    \"y\": 66.74558\n  },\n  {\n    \"x\": 76.05782,\n    \"y\": 66.7906\n  },\n  {\n    \"x\": 75.74317,\n    \"y\": 67.10525\n  },\n  {\n    \"x\": 75.42851,\n    \"y\": 67.4199\n  },\n  {\n    \"x\": 75.38349,\n    \"y\": 67.9132\n  },\n  {\n    \"x\": 75.63541,\n    \"y\": 68.27814\n  },\n  {\n    \"x\": 75.83656,\n    \"y\": 68.56981\n  },\n  {\n    \"x\": 75.90936,\n    \"y\": 68.93092\n  },\n  {\n    \"x\": 75.83704,\n    \"y\": 69.27766\n  },\n  {\n    \"x\": 75.76432,\n    \"y\": 69.62421\n  },\n  {\n    \"x\": 75.55246,\n    \"y\": 69.92616\n  },\n  {\n    \"x\": 75.25131,\n    \"y\": 70.11242\n  },\n  {\n    \"x\": 74.26952,\n    \"y\": 70.71922\n  },\n  {\n    \"x\": 73.20391,\n    \"y\": 71.16126\n  },\n  {\n    \"x\": 72.08418,\n    \"y\": 71.42563\n  },\n  {\n    \"x\": 71.986,\n    \"y\": 71.44863\n  },\n  {\n    \"x\": 71.88638,\n    \"y\": 71.46011\n  },\n  {\n    \"x\": 71.78724,\n    \"y\": 71.46011\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 67.05976\n  },\n  {\n    \"x\": 70.80258,\n    \"y\": 67.05976\n  },\n  {\n    \"x\": 71.87489,\n    \"y\": 67.65889\n  },\n  {\n    \"x\": 72.51138,\n    \"y\": 68.59519\n  },\n  {\n    \"x\": 72.65888,\n    \"y\": 68.53916\n  },\n  {\n    \"x\": 72.80449,\n    \"y\": 68.47832\n  },\n  {\n    \"x\": 72.94864,\n    \"y\": 68.41368\n  },\n  {\n    \"x\": 72.73696,\n    \"y\": 67.3016\n  },\n  {\n    \"x\": 73.07124,\n    \"y\": 66.1201\n  },\n  {\n    \"x\": 73.91463,\n    \"y\": 65.27624\n  },\n  {\n    \"x\": 74.75802,\n    \"y\": 64.43285\n  },\n  {\n    \"x\": 75.94001,\n    \"y\": 64.09856\n  },\n  {\n    \"x\": 77.0516,\n    \"y\": 64.31024\n  },\n  {\n    \"x\": 77.11625,\n    \"y\": 64.16608\n  },\n  {\n    \"x\": 77.17659,\n    \"y\": 64.02049\n  },\n  {\n    \"x\": 77.23311,\n    \"y\": 63.87299\n  },\n  {\n    \"x\": 76.29728,\n    \"y\": 63.23649\n  },\n  {\n    \"x\": 75.69767,\n    \"y\": 62.16417\n  },\n  {\n    \"x\": 75.69767,\n    \"y\": 60.97117\n  },\n  {\n    \"x\": 75.69767,\n    \"y\": 59.77816\n  },\n  {\n    \"x\": 76.29681,\n    \"y\": 58.70586\n  },\n  {\n    \"x\": 77.23311,\n    \"y\": 58.06936\n  },\n  {\n    \"x\": 77.17688,\n    \"y\": 57.92187\n  },\n  {\n    \"x\": 77.11635,\n    \"y\": 57.77605\n  },\n  {\n    \"x\": 77.0516,\n    \"y\": 57.6321\n  },\n  {\n    \"x\": 75.93953,\n    \"y\": 57.84378\n  },\n  {\n    \"x\": 74.75802,\n    \"y\": 57.5095\n  },\n  {\n    \"x\": 73.91463,\n    \"y\": 56.66611\n  },\n  {\n    \"x\": 73.07124,\n    \"y\": 55.82272\n  },\n  {\n    \"x\": 72.73647,\n    \"y\": 54.64073\n  },\n  {\n    \"x\": 72.94864,\n    \"y\": 53.52914\n  },\n  {\n    \"x\": 72.80449,\n    \"y\": 53.46449\n  },\n  {\n    \"x\": 72.65888,\n    \"y\": 53.40415\n  },\n  {\n    \"x\": 72.51138,\n    \"y\": 53.34763\n  },\n  {\n    \"x\": 71.87489,\n    \"y\": 54.28346\n  },\n  {\n    \"x\": 70.80258,\n    \"y\": 54.88307\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 54.88307\n  },\n  {\n    \"x\": 68.41657,\n    \"y\": 54.88307\n  },\n  {\n    \"x\": 67.34425,\n    \"y\": 54.28393\n  },\n  {\n    \"x\": 66.70776,\n    \"y\": 53.34763\n  },\n  {\n    \"x\": 66.56027,\n    \"y\": 53.40386\n  },\n  {\n    \"x\": 66.41445,\n    \"y\": 53.46439\n  },\n  {\n    \"x\": 66.2705,\n    \"y\": 53.52914\n  },\n  {\n    \"x\": 66.48219,\n    \"y\": 54.64121\n  },\n  {\n    \"x\": 66.14789,\n    \"y\": 55.82272\n  },\n  {\n    \"x\": 65.30452,\n    \"y\": 56.66611\n  },\n  {\n    \"x\": 64.46113,\n    \"y\": 57.5095\n  },\n  {\n    \"x\": 63.27914,\n    \"y\": 57.84378\n  },\n  {\n    \"x\": 62.16755,\n    \"y\": 57.6321\n  },\n  {\n    \"x\": 62.10278,\n    \"y\": 57.77605\n  },\n  {\n    \"x\": 62.04225,\n    \"y\": 57.92187\n  },\n  {\n    \"x\": 61.98604,\n    \"y\": 58.06936\n  },\n  {\n    \"x\": 62.92185,\n    \"y\": 58.70586\n  },\n  {\n    \"x\": 63.52147,\n    \"y\": 59.77816\n  },\n  {\n    \"x\": 63.52147,\n    \"y\": 60.97117\n  },\n  {\n    \"x\": 63.52147,\n    \"y\": 62.16417\n  },\n  {\n    \"x\": 62.92234,\n    \"y\": 63.23649\n  },\n  {\n    \"x\": 61.98604,\n    \"y\": 63.87299\n  },\n  {\n    \"x\": 62.04207,\n    \"y\": 64.02049\n  },\n  {\n    \"x\": 62.10289,\n    \"y\": 64.16608\n  },\n  {\n    \"x\": 62.16755,\n    \"y\": 64.31024\n  },\n  {\n    \"x\": 63.27914,\n    \"y\": 64.09856\n  },\n  {\n    \"x\": 64.46113,\n    \"y\": 64.43285\n  },\n  {\n    \"x\": 65.30452,\n    \"y\": 65.27624\n  },\n  {\n    \"x\": 66.14789,\n    \"y\": 66.11963\n  },\n  {\n    \"x\": 66.48266,\n    \"y\": 67.3016\n  },\n  {\n    \"x\": 66.2705,\n    \"y\": 68.41368\n  },\n  {\n    \"x\": 66.41466,\n    \"y\": 68.47832\n  },\n  {\n    \"x\": 66.56025,\n    \"y\": 68.53867\n  },\n  {\n    \"x\": 66.70776,\n    \"y\": 68.59519\n  },\n  {\n    \"x\": 67.34425,\n    \"y\": 67.65937\n  },\n  {\n    \"x\": 68.41657,\n    \"y\": 67.05976\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 67.05976\n  }\n]",
              "segments": "__ht__list[\n  1,\n  2,\n  2,\n  2,\n  5,\n  1,\n  2,\n  2,\n  2,\n  5,\n  1,\n  2,\n  2,\n  2,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 47.75112,
                "y": 42.18369,
                "width": 32.39381,
                "height": 29.32331
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 69.60958,\n    \"y\": 66.81454\n  },\n  {\n    \"x\": 66.38784,\n    \"y\": 66.81454\n  },\n  {\n    \"x\": 63.76669,\n    \"y\": 64.19339\n  },\n  {\n    \"x\": 63.76669,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 63.76669,\n    \"y\": 57.74991\n  },\n  {\n    \"x\": 66.38784,\n    \"y\": 55.12876\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 55.12876\n  },\n  {\n    \"x\": 72.8313,\n    \"y\": 55.12876\n  },\n  {\n    \"x\": 75.45246,\n    \"y\": 57.74991\n  },\n  {\n    \"x\": 75.45246,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 75.45246,\n    \"y\": 64.19339\n  },\n  {\n    \"x\": 72.8313,\n    \"y\": 66.81454\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 66.81454\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 57.52339\n  },\n  {\n    \"x\": 67.70823,\n    \"y\": 57.52339\n  },\n  {\n    \"x\": 66.1613,\n    \"y\": 59.07031\n  },\n  {\n    \"x\": 66.1613,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 66.1613,\n    \"y\": 62.87298\n  },\n  {\n    \"x\": 67.70823,\n    \"y\": 64.41991\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 64.41991\n  },\n  {\n    \"x\": 71.5109,\n    \"y\": 64.41991\n  },\n  {\n    \"x\": 73.05783,\n    \"y\": 62.87298\n  },\n  {\n    \"x\": 73.05783,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 73.05783,\n    \"y\": 59.07031\n  },\n  {\n    \"x\": 71.5109,\n    \"y\": 57.52339\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 57.52339\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 63.76669,
                "y": 55.12876,
                "width": 11.68577,
                "height": 11.68578
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 69.60958,\n    \"y\": 63.67279\n  },\n  {\n    \"x\": 68.12011,\n    \"y\": 63.67279\n  },\n  {\n    \"x\": 66.90844,\n    \"y\": 62.4611\n  },\n  {\n    \"x\": 66.90844,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 66.90844,\n    \"y\": 59.4822\n  },\n  {\n    \"x\": 68.12011,\n    \"y\": 58.27051\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 58.27051\n  },\n  {\n    \"x\": 71.09903,\n    \"y\": 58.27051\n  },\n  {\n    \"x\": 72.31071,\n    \"y\": 59.4822\n  },\n  {\n    \"x\": 72.31071,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 72.31071,\n    \"y\": 62.4611\n  },\n  {\n    \"x\": 71.09903,\n    \"y\": 63.67279\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 63.67279\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 60.66515\n  },\n  {\n    \"x\": 69.44052,\n    \"y\": 60.66515\n  },\n  {\n    \"x\": 69.30305,\n    \"y\": 60.80259\n  },\n  {\n    \"x\": 69.30305,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 69.30305,\n    \"y\": 61.14071\n  },\n  {\n    \"x\": 69.44052,\n    \"y\": 61.27816\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 61.27816\n  },\n  {\n    \"x\": 69.77863,\n    \"y\": 61.27816\n  },\n  {\n    \"x\": 69.91608,\n    \"y\": 61.14071\n  },\n  {\n    \"x\": 69.91608,\n    \"y\": 60.97165\n  },\n  {\n    \"x\": 69.91608,\n    \"y\": 60.80259\n  },\n  {\n    \"x\": 69.77863,\n    \"y\": 60.66515\n  },\n  {\n    \"x\": 69.60958,\n    \"y\": 60.66515\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 66.90844,
                "y": 58.27051,
                "width": 5.40227,
                "height": 5.40228
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "points": "__ht__list[\n  {\n    \"x\": 68.41226,\n    \"y\": 62.32126\n  },\n  {\n    \"x\": 70.80689,\n    \"y\": 62.32126\n  },\n  {\n    \"x\": 70.80689,\n    \"y\": 65.90651\n  },\n  {\n    \"x\": 68.41226,\n    \"y\": 65.90651\n  },\n  {\n    \"x\": 70.17883,\n    \"y\": 59.25949\n  },\n  {\n    \"x\": 73.28321,\n    \"y\": 57.46712\n  },\n  {\n    \"x\": 74.48053,\n    \"y\": 59.54086\n  },\n  {\n    \"x\": 71.37614,\n    \"y\": 61.33323\n  },\n  {\n    \"x\": 64.73656,\n    \"y\": 59.54206\n  },\n  {\n    \"x\": 65.93387,\n    \"y\": 57.46832\n  },\n  {\n    \"x\": 69.03826,\n    \"y\": 59.26065\n  },\n  {\n    \"x\": 67.84094,\n    \"y\": 61.33439\n  }\n]",
              "segments": "__ht__list[\n  1,\n  2,\n  2,\n  2,\n  5,\n  1,\n  2,\n  2,\n  2,\n  5,\n  1,\n  2,\n  2,\n  2,\n  5\n]",
              "unionRect": {
                "x": 64.73656,
                "y": 57.46712,
                "width": 9.74397,
                "height": 8.43939
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "points": "__ht__list[\n  {\n    \"x\": 37.99236,\n    \"y\": 23.6093\n  },\n  {\n    \"x\": 36.69569,\n    \"y\": 22.19018\n  },\n  {\n    \"x\": 35.96431,\n    \"y\": 21.38852\n  },\n  {\n    \"x\": 34.89152,\n    \"y\": 21.59925\n  },\n  {\n    \"x\": 34.37387,\n    \"y\": 22.69269\n  },\n  {\n    \"x\": 30.59331,\n    \"y\": 30.69456\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 40.29829\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 59.70319\n  },\n  {\n    \"x\": 30.59331,\n    \"y\": 69.30691\n  },\n  {\n    \"x\": 34.37387,\n    \"y\": 77.30583\n  },\n  {\n    \"x\": 34.89152,\n    \"y\": 78.40074\n  },\n  {\n    \"x\": 35.96431,\n    \"y\": 78.61\n  },\n  {\n    \"x\": 36.69569,\n    \"y\": 77.80834\n  },\n  {\n    \"x\": 37.99236,\n    \"y\": 76.38922\n  },\n  {\n    \"x\": 38.68524,\n    \"y\": 75.63177\n  },\n  {\n    \"x\": 38.81188,\n    \"y\": 74.24655\n  },\n  {\n    \"x\": 38.32462,\n    \"y\": 73.20763\n  },\n  {\n    \"x\": 35.13261,\n    \"y\": 66.39646\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 58.23986\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 41.76014\n  },\n  {\n    \"x\": 35.13261,\n    \"y\": 33.60354\n  },\n  {\n    \"x\": 38.32462,\n    \"y\": 26.78942\n  },\n  {\n    \"x\": 38.81086,\n    \"y\": 25.75049\n  },\n  {\n    \"x\": 38.68424,\n    \"y\": 24.36674\n  },\n  {\n    \"x\": 37.99236,\n    \"y\": 23.6093\n  }\n]",
              "segments": "__ht__list[\n  1,\n  2,\n  4,\n  4,\n  4,\n  4,\n  2,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 28.52778,
                "y": 21.38852,
                "width": 10.2841,
                "height": 57.22148
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "points": "__ht__list[\n  {\n    \"x\": 84.55899,\n    \"y\": 22.69269\n  },\n  {\n    \"x\": 84.07581,\n    \"y\": 21.59778\n  },\n  {\n    \"x\": 83.07447,\n    \"y\": 21.38852\n  },\n  {\n    \"x\": 82.39179,\n    \"y\": 22.19018\n  },\n  {\n    \"x\": 81.1815,\n    \"y\": 23.6093\n  },\n  {\n    \"x\": 80.53476,\n    \"y\": 24.36674\n  },\n  {\n    \"x\": 80.41656,\n    \"y\": 25.75197\n  },\n  {\n    \"x\": 80.87136,\n    \"y\": 26.79089\n  },\n  {\n    \"x\": 83.85076,\n    \"y\": 33.60206\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 41.75866\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 58.23839\n  },\n  {\n    \"x\": 83.85076,\n    \"y\": 66.395\n  },\n  {\n    \"x\": 80.87136,\n    \"y\": 73.20911\n  },\n  {\n    \"x\": 80.4175,\n    \"y\": 74.24803\n  },\n  {\n    \"x\": 80.5357,\n    \"y\": 75.63177\n  },\n  {\n    \"x\": 81.1815,\n    \"y\": 76.3907\n  },\n  {\n    \"x\": 82.39179,\n    \"y\": 77.80982\n  },\n  {\n    \"x\": 83.07447,\n    \"y\": 78.61148\n  },\n  {\n    \"x\": 84.07581,\n    \"y\": 78.40222\n  },\n  {\n    \"x\": 84.55899,\n    \"y\": 77.30731\n  },\n  {\n    \"x\": 88.08774,\n    \"y\": 69.30396\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 59.70024\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 40.29533\n  },\n  {\n    \"x\": 88.08774,\n    \"y\": 30.69162\n  },\n  {\n    \"x\": 84.55899,\n    \"y\": 22.69269\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  2,\n  4,\n  4,\n  4,\n  4,\n  2,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 80.41656,
                "y": 21.38852,
                "width": 9.59914,
                "height": 57.22296
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "borderWidth": 1,
              "borderColor": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "displayName": "Shape（Shape1）",
              "points": "__ht__list[\n  {\n    \"x\": 24.9843,\n    \"y\": 50.96154\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 50.43029\n  },\n  {\n    \"x\": 24.50484,\n    \"y\": 50\n  },\n  {\n    \"x\": 23.91287,\n    \"y\": 50\n  },\n  {\n    \"x\": 20.69858,\n    \"y\": 50\n  },\n  {\n    \"x\": 17.44412,\n    \"y\": 50\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 52.36779\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 55.28846\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 58.60337\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 59.13461\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 60.09616\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 60.6274\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 69.71154\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 71.03906\n  },\n  {\n    \"x\": 13.6064,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 12.12716,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 72.54567\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 73.07693\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 74.03846\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 74.56971\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 75\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 75\n  },\n  {\n    \"x\": 12.12716,\n    \"y\": 75\n  },\n  {\n    \"x\": 15.38162,\n    \"y\": 75\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 72.63221\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 69.71154\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 21.77002,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 22.36198,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 60.6274\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 60.09616\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 59.13461\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 58.60337\n  },\n  {\n    \"x\": 22.36198,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 21.77002,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 55.28846\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 53.96094\n  },\n  {\n    \"x\": 19.21935,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 20.69858,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 23.91287,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 24.50484,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 52.45433\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 51.92307\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 50.96154\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  5\n]",
              "unionRect": {
                "x": 9.9843,
                "y": 50,
                "width": 15,
                "height": 25
              }
            },
            {
              "type": "rect",
              "background": "rgba(0,0,0,0.01)",
              "borderColor": "#979797",
              "pixelPerfect": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                -0.00074,
                100,
                100
              ]
            }
          ],
          "uuid": "D9A1B51D-B391-4B4C-A975-5AC4E27C2BF9"
        },
        "position": {
          "x": 428.11056,
          "y": 604.0232
        }
      },
      "s": {
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "切换二级菜单，或者开关切换时，即时\n更新当前菜单页内容的显示模式，是用\n文件还是用抽屉。",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "label.opacity": 1
      },
      "a": {
        "toolTipRaw": "代码模块（高级）<br>codeBlock",
        "noteTips": "切换二级菜单，或者开关切换时，即时\n更新当前菜单页内容的显示模式，是用\n文件还是用抽屉。",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/arranged/controls/functions/01-常用/代码模块(高级).json",
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "resetAfterInput": true,
        "exeWhenInput": true,
        "function": "codeBlock",
        "inputs": {},
        "output": [
          {
            "title": "1-绘制",
            "children": [
              {
                "text": "不规则图形",
                "toolTip": "不规则图形",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "管道",
                "toolTip": "管道",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/管道.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/管道.png",
                  "_stretch": "uniform"
                }
              }
            ]
          },
          {
            "title": "2-规则图形",
            "children": [
              {
                "text": "三角形",
                "toolTip": "三角形",
                "icon": "symbols/develop/uiotos/base/triangle.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/三角形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "圆弧形",
                "toolTip": "圆弧形",
                "icon": "symbols/develop/uiotos/base/curve.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/圆弧形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "文字",
                "toolTip": "文字",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/文字.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/文字.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "星形",
                "toolTip": "星形",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/星形.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/星形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "椭圆",
                "toolTip": "椭圆",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/椭圆.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/椭圆.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "正多边形",
                "toolTip": "正多边形",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/正多边形.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/正多边形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "矩形",
                "toolTip": "矩形",
                "icon": "symbols/develop/uiotos/base/rect.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/矩形.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "矩形圆角",
                "toolTip": "矩形圆角",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/矩形圆角.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/矩形圆角.png",
                  "_stretch": "uniform"
                }
              }
            ]
          },
          {
            "title": "3-更多",
            "children": [
              {
                "text": "子网",
                "toolTip": "子网",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/3-更多/子网.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/3-更多/子网.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "组",
                "toolTip": "组",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/3-更多/组.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/3-更多/组.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "节点",
                "toolTip": "节点",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/3-更多/节点.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/3-更多/节点.png",
                  "_stretch": "uniform"
                }
              },
              {
                "text": "连线",
                "toolTip": "连线",
                "icon": "symbols/develop/uiotos/arranged/controls/draws/3-更多/连线.json",
                "iconDrawable": {
                  "_image": "symbols/develop/uiotos/arranged/controls/draws/3-更多/连线.png",
                  "_stretch": "uniform"
                }
              }
            ]
          }
        ],
        "exec": false,
        "stripSingleInput": false,
        "_function": "__ht__function(data, gv, cache, inputs) {let paletteItems = [],\r\n    tabIndexTmp = editor.leftTopTabView.getTabModel().toDatas().indexOf(editor.leftTopTabView.getCurrentTab()); //默认当前左上页签索引\r\n\r\n//240515，如果传入true，表名切换开关切为目录模式，此时默认tabIndexTmp索引要是2\r\nif(inputs === true){\r\n    //根据一级菜单传入过来的索引编号，对应当前实际的左上角tab页签索引，是组件、资源？切换成各自对应的顶部索引，这样在对当前索引统一为6的抽屉面板展示，切换回目录时，能切换正确！\r\n    let firstLayerMenuIndex = d(data.dm(),'bus1').ca('contentRecv');\r\n    if(firstLayerMenuIndex == 4 || firstLayerMenuIndex == 5) tabIndexTmp = 2;\r\n    else if(firstLayerMenuIndex == 6) tabIndexTmp = 5;\r\n}\r\n\r\n//收发器过来的二级菜单目录名。切换开关过来的是true/false\r\nif(typeof(inputs) == 'string' || inputs === false){ \r\n    //240514，切换开关也能进来切换目录和抽屉两种展现方式！\r\n    if(inputs == false) inputs = data._i_menuBacked;\r\n    data._i_menuBacked = inputs;\r\n\r\n    if(inputs.indexOf('controls/') != -1) tabIndexTmp = 2;//组件、图标\r\n    if(inputs.indexOf('assets/') != -1) tabIndexTmp = 5;//资源\r\n\r\n    let forbidPaletteMode = typeof(inputs) == 'string' && d(data.dm(),'sw1').ca('open') === false; //240514，如果二级菜单切换，但是开关是关闭即目录模式，那么以开关设置为准！\r\n    if(!forbidPaletteMode){\r\n        let folderNodetmp = null;\r\n        if(inputs.indexOf('assets/') != -1){\r\n            folderNodetmp = editor.assets.dataModel._dataMap['assets/' + i.user() + '/uiotos/arranged' + inputs];\r\n        }else{\r\n            folderNodetmp = editor.symbols.dataModel._dataMap['symbols/' + i.user() + '/uiotos/arranged' + inputs];\r\n        }\r\n        //tips，抽屉只显示第一层目录下第二层的文件，形成抽屉，其他不满足条件的均不显示！\r\n        let childrentmp = folderNodetmp && folderNodetmp.getChildren();\r\n        // firstFolders = [],  //第一级中所有的目录节点（第一层文件不在抽屉显示了）\r\n        // secondFiles = {}; //第二级，也就是前面目录，下面对应的直接文件（更下级目录不在抽屉显示了）\r\n        childrentmp && childrentmp.toArray().forEach(item=>{\r\n            if(item.fileType === 'dir'){\r\n                paletteItems.push({\r\n                    title: item.url && item.url.split('/').at(-1),\r\n                    children: (()=>{\r\n                        let childs = [];\r\n                        item.getChildren().toArray().forEach(child=>{\r\n                            let isJsonType = child.getId().slice(-5) === '.json';\r\n                            //要求是json文件，如果不是，那么必须当前是资源展示！\r\n                            if(child.fileType !== 'dir' && (isJsonType || tabIndexTmp == 5)){\r\n                                //.json的只保留文件名，.jpg、.png、.mp3等格式的资源文件，包括后缀也一并显示！\r\n                                //240818，发现此时hteditor不存在？？editor都有，因此此时翻译i.trans无效！！暂未深究\r\n                                let texttmp = _i.trans(isJsonType ? child.url && child.url.split('/').at(-1).slice(0,-5) : child.url && child.url.split('/').at(-1));\r\n                                childs.push({\r\n                                    text: texttmp,\r\n                                    toolTip: texttmp,\r\n                                    icon: child.getId(),    //240514，用于拖放到编辑器后实例化的！\r\n                                    //注意，这里抽屉分组，对于音视频等非图片文件暂未支持图片预览！目前的处理时间，json和非json，前者强制用.png格式的文件显示，后者直接显示文件本身！\r\n                                    iconDrawable: new ht.ui.drawable.ImageDrawable(isJsonType ? (child.getId().slice(0,-5) + '.png') : child.getId(), 'uniform'),  //显示图标！用png来显示，而不是.json，否则是渲染元素组件拖放运行后的效果而不是图片效果了！\r\n                                });\r\n                            }\r\n                        });\r\n                        return childs;\r\n                    })()\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nif(paletteItems.length){\r\n    editor.leftTopTabView.select(6);\r\n    editor.leftTopTabView.setTabHeight(0);\r\n    let palette = editor.leftTopTabView.get(6).getView();\r\n    try{\r\n        palette.getTemplateButton().setPreferredSize(65, 80); //单个按钮的宽高\r\n    }catch(e){\r\n    }\r\n    palette.getTemplateButton().setIconWidth(50);\r\n    palette.getTemplateButton().setIconHeight(50);\r\n    palette.getTemplateButton().setMargin(0);\r\n    palette.setItems(paletteItems);\r\n    palette.getTemplateButton().setBackground(null); \r\n}else{\r\n    editor.leftTopTabView.select(tabIndexTmp);\r\n    editor.leftTopTabView.setTabHeight(0);\r\n}\r\n\r\nreturn paletteItems;}",
        "inputKeys": [],
        "inputValues": [],
        "delay": 0,
        "jsonStruct": 1,
        "输出遇到空值 ~": "全部（*）",
        "输出遇到空值 ~-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ]
      }
    },
    {
      "c": "ht.UNode",
      "i": 40263,
      "p": {
        "name": "bus",
        "displayName": "事件总线（bus3）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "bus3",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "triggerSend": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "callerRemote": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "contentRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "waitingRecv": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "topicsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "addrsWhiteList": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onPostMessage": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri May 03 2024 21:40:54 GMT+0800 (中国标准时间)",
          "background": "rgb(32,37,46)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "addressLocal",
              "valueType": "Object",
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#HFw93' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addressLocal",
              "dynamicCreate": true
            },
            {
              "attr": "mode",
              "valueType": "EventBusMode",
              "defaultValue": "both",
              "description": "三种模式选择，包括\n接收器、发送器、收发器\n",
              "name": "mode"
            },
            {
              "attr": "callRecv.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(51,153,255)",
              "description": "收发器背景颜色",
              "name": "callRecv.icon-background"
            },
            {
              "attr": "call.icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(0,199,7)",
              "description": "发送器背景颜色",
              "name": "call.icon-background"
            },
            {
              "attr": "recv.icon-background",
              "valueType": "Color",
              "defaultValue": "#FF7C7C",
              "description": "组件的外观颜色。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qoGQI' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "name": "recv.icon-background",
              "dynamicCreate": true
            },
            {
              "attr": "addrsRemote",
              "valueType": "ObjectArray",
              "description": "消息接收方收发器的地址列表，字符串\n格式，可以多个，实现一对多广播发送。\n\n注意，当属性值为空（长度为0）或为默\n认的*时（有一项或多项值设置为*），表\n明是广播消息，所有接收器都会接收到，\n跳过与自身地址的匹配进行下一步处理。",
              "group": "send",
              "defaultValue": [
                "*"
              ],
              "name": "addrsRemote"
            },
            {
              "attr": "topicSend",
              "valueType": "Object",
              "description": "发送的消息主题，任意字符串格式，默认为当前收发器的全局标签（addressLocal自身地址属性也如此）。",
              "name": "topicSend"
            },
            {
              "attr": "contentSend",
              "valueType": "Object",
              "description": "发送的内容，可以是字符串、普通js对象，或图元对象。\n如果未设定值，则自动传入当前页面的window全局对象。\n默认数组格式，便于针对同一个主题TOPIC连线\n设置不同数据带不同的信息发送出去。接收器内容接收\n属性也默认是数组格式。",
              "name": "contentSend"
            },
            {
              "attr": "triggerSend",
              "valueType": "Boolean",
              "description": "执行发送",
              "defaultValue": false,
              "name": "triggerSend"
            },
            {
              "attr": "triggerInit",
              "valueType": "Boolean",
              "description": "勾选后在初始化加载时会按照配置，触发triggerSend对外消息发送",
              "name": "triggerInit"
            },
            {
              "attr": "cacheDisabled",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否禁止缓存队列。\n<br>默认情况下，发送器发送的内容会追加到全局\n<br>异步队列中，当其他接收器动态初始化启动接\n<br>收时，当前发送存放到队列中的数据，会被接\n<br>收处理。\n<br>实现对话框内嵌接收器后启动并响应此前先发\n<br>送的消息，不会导致因为发送执行和启动接收\n<br>先后顺序不一致导致接收不到的问题。\n<br>勾选本属性，将禁止默认追加到缓存队列，可\n<br>以避免某些误操作。",
              "name": "cacheDisabled"
            },
            {
              "attr": "addrsWhiteList",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "允许通过的发送器地址（列表）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#RxJCO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "addrsWhiteList",
              "dynamicCreate": true
            },
            {
              "attr": "topicsWhiteList",
              "valueType": "ObjectArray",
              "defaultValue": [
                "*"
              ],
              "description": "允许通过的消息主题（列表）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qSpxG' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "topicsWhiteList",
              "dynamicCreate": true
            },
            {
              "attr": "topicsExtraInfo",
              "valueType": "ObjectArray",
              "description": "与主题白名单索引对应的自定义数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#flykN' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "topicsExtraInfo",
              "dynamicCreate": true
            },
            {
              "attr": "callerRemote",
              "valueType": "Object",
              "description": "消息完全通过时的来源发送器对象。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#KGpY1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "callerRemote",
              "dynamicCreate": true
            },
            {
              "attr": "",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "代码调用postMessage网页通信时。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#w19ww' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "",
              "dynamicCreate": true
            },
            {
              "attr": "topicRecv",
              "valueType": "Object",
              "description": "接收到数据对应的主题Topic。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#wMKti' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "topicRecv",
              "dynamicCreate": true
            },
            {
              "attr": "contentRecv",
              "valueType": "Object",
              "description": "与收到主题对应收到的内容。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#qKUx1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "contentRecv",
              "dynamicCreate": true
            },
            {
              "attr": "waitingRecv",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "开启监听，准备好接收发送器的消息。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#p62R1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "★",
              "bindIgnored": true,
              "name": "waitingRecv",
              "dynamicCreate": true
            },
            {
              "attr": "messagPostGet",
              "valueType": "Object",
              "description": "js代码postMessage发送的数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#mo692' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "messagPostGet",
              "dynamicCreate": true
            },
            {
              "attr": "waitingMsgPost",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启监听网页postMessage数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/hf6hq3949mqpg32u#uZLa6' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "name": "waitingMsgPost",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "onEvent",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "description": "。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "bindIgnored": true,
              "name": "onEvent",
              "dynamicCreate": true
            },
            {
              "attr": "onPostMessage",
              "valueType": "Function",
              "description": "收到跨网页iframe事件消息。",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "form",
                  "extra"
                ]
              },
              "name": "onPostMessage"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true,
              "name": "_bindEvents_0"
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __eventbus_v2(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "visible": {
            "func": "attr@visible",
            "value": true
          },
          "comps": [
            {
              "type": "rect",
              "background": "rgba(33,33,33,0.01)",
              "borderColor": "#979797",
              "displayName": "矩形",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-rotary.json",
              "visible": false,
              "prefix": "recv",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/demo/uiotos/icons/light/phone-volume.json",
              "visible": false,
              "prefix": "call",
              "displayName": "node_image",
              "rect": [
                0,
                0,
                100,
                100
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-rotary.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rect": [
                0,
                37.47666,
                64.0735,
                66.39302
              ]
            },
            {
              "type": "image",
              "color": null,
              "name": "symbols/develop/uiotos/icons/editroToolBar/phone-volume.json",
              "prefix": "callRecv",
              "shadowColor": "rgb(61,61,61)",
              "displayName": "node_image",
              "rotation": 5.69426,
              "rect": [
                56.75093,
                4.67922,
                58.13316,
                65.5949
              ]
            }
          ],
          "uuid": "6E448449-2AA3-4E7C-804C-9F35CAB1C7C6"
        },
        "host": {
          "__i": 40253
        },
        "position": {
          "x": 428.11056,
          "y": 827.86719
        },
        "width": 100,
        "height": 100
      },
      "s": {
        "label.opacity": 1,
        "label.position": 2,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "容器模板菜单内容",
        "label.font": "26px arial, sans-serif",
        "label.align": "left",
        "layout.h": "right",
        "layout.v": "bottom"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/__eventbus_v2.json",
        "triggerSend": false,
        "call.visible": false,
        "recv.visible": true,
        "callRecv.visible": false,
        "mode": "recv",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          "contentRecv"
        ],
        "bindControlsTag": [
          "代码模块1"
        ],
        "bindControlsAttr": [
          "inputs"
        ],
        "bindControlsVal": [
          null
        ],
        "topicsWhiteList": [
          "容器模板-菜单内容"
        ],
        "topicRecv": "容器模板-菜单内容",
        "contentRecv": "/controls/draws",
        "addrTarget": "*",
        "bindEvents": [
          "*",
          "onEvent"
        ],
        "_bindEvents_0-list": [
          "*",
          "onEvent"
        ],
        "_bindEvents_0": "*",
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "_debugTopicRecv": false,
        "callerRemote": {
          "__i": 142125
        },
        "userData": []
      }
    },
    {
      "c": "ht.Edge",
      "i": 40264,
      "p": {
        "name": "edge",
        "displayName": "0（edge6）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@代码模块1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：接收到内容@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 40263
        },
        "tag": "edge6",
        "source": {
          "__i": 40263
        },
        "target": {
          "__i": 40262
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "flex",
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：输入（组）@代码模块1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：接收到内容@bus3</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    }
  ],
  "modified": "Sun Aug 18 2024 19:37:15 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -219.67843,
    "y": 0.99999,
    "width": 1043.78899,
    "height": 876.8672
  }
}