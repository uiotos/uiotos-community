{
  "v": "8.0.1",
  "p": {
    "autoAdjustIndex": true,
    "hierarchicalRendering": false
  },
  "a": {
    "rotateAsClock": false,
    "connectActionType": null,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 87444,
      "p": {
        "name": "ttb",
        "displayName": "树表（ttb1）",
        "toolTip": "带列内嵌页",
        "tag": "ttb1",
        "dataBindings": {
          "a": {
            "datas": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "dataAdd": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "visibleFilterInput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "dataComboType": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "checkSelected": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "checkIndexsGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "rowsExtraUserInfo": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onDatasLoaded": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onDoubleClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onCheck": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onLastButtonClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onLastButtonSelected": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "borderWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "columnFields": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "currentClicked": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "checkMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>0>Shape1>s:shape.border.width": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>0>Shape1>s:shape.border.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>0>Text1>s:text.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>0>Text1>s:text.font": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>0>Text1>s:text": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>1>Shape1>s:shape.border.width": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>1>Shape1>s:shape.border.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>1>Text1>s:text.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>1>Text1>s:text.font": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>1>Text1>s:text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(nVal, node) {\r\n    /*参数1  nVal: 属性新值 */\r\n    /*返回 return：最终赋值 */\r\n    /********* TODO **********/\r\n\r\n\r\n\r\n    /************************/\r\n    return nVal;\r\n}",
              "alias": ""
            },
            "序号数字>2>Shape1>s:shape.border.width": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>2>Shape1>s:shape.border.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>2>Text1>s:text.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>2>Text1>s:text.font": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>2>Text1>s:text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(nVal, node) {\r\n    /*参数1  nVal: 属性新值 */\r\n    /*返回 return：最终赋值 */\r\n    /********* TODO **********/\r\n\r\n\r\n\r\n    /************************/\r\n    return nVal;\r\n}",
              "alias": ""
            },
            "序号数字>3>Shape1>s:shape.border.width": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>3>Shape1>s:shape.border.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>3>Text1>s:text.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>3>Text1>s:text.font": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>3>Text1>s:text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(nVal, node) {\r\n    /*参数1  nVal: 属性新值 */\r\n    /*返回 return：最终赋值 */\r\n    /********* TODO **********/\r\n\r\n\r\n\r\n    /************************/\r\n    return nVal;\r\n}",
              "alias": ""
            },
            "序号数字>4>Shape1>s:shape.border.width": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>4>Shape1>s:shape.border.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>4>Text1>s:text.color": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>4>Text1>s:text.font": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "序号数字>4>Text1>s:text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(nVal, node) {\r\n    /*参数1  nVal: 属性新值 */\r\n    /*返回 return：最终赋值 */\r\n    /********* TODO **********/\r\n\r\n\r\n\r\n    /************************/\r\n    return nVal;\r\n}",
              "alias": ""
            }
          }
        },
        "image": {
          "modified": "Thu Aug 01 2024 16:18:45 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "reload",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "重新加载。\n<br>专业属性，通常用于连线触发表格\n<br>重新加载数据。",
              "group": "功能",
              "extraInfo": "*",
              "name": "reload"
            },
            {
              "attr": "rowsIdReset",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "<br>专业属性，通常用于连线触发表格\n<br>重新加载数据。注意，ID会按照行\n<br>索引重置。",
              "extraInfo": "*",
              "name": "rowsIdReset"
            },
            {
              "attr": "checkMode",
              "valueType": "checkMode",
              "defaultValue": 0,
              "description": "勾选类型。\n<br>高级属性，用于设置表格行是否可以勾选，\n以及勾选模式，<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#DOlqy\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>\n",
              "extraInfo": "★",
              "name": "checkMode"
            },
            {
              "attr": "selectAllSet",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "设置为全选。\n<br>专业属性，要求行选择模式为勾选模式。",
              "name": "selectAllSet"
            },
            {
              "attr": "expandAll",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "全部展开。\n<br>对于有父子节点类型的表格起作用，\n<br>对没有父子节点的表格设置无效。",
              "extraInfo": "★",
              "name": "expandAll"
            },
            {
              "attr": "dragDropEnable",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "启用拖放。\n<br>专业属性，行可以拖放位置。",
              "extraInfo": "*",
              "name": "dragDropEnable"
            },
            {
              "attr": "visibleFilterInput",
              "valueType": "Object",
              "defaultValue": "",
              "description": "行数据关键词过滤。\n将所有行列文字作为内容，按照过滤规则进\n行关键词匹配，以此实现表格行数据搜索。\n<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#x3zEX\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情参见文档</a>",
              "name": "visibleFilterInput"
            },
            {
              "attr": "disableTooltip",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "禁用鼠标悬停提示。\n<br>专业属性。开启后，当前单元格的数据，\n<br>悬停时能鼠标提示完整内容。",
              "extraInfo": "*",
              "name": "disableTooltip"
            },
            {
              "attr": "columnForTooltip",
              "valueType": "PositiveNumber",
              "defaultValue": -1,
              "description": "鼠标提示列。\n<br>专业属性。默认-1，显示当前单元格数据。\n<br>设置指定索引值后，当前行对应列的文字，\n<br>用于鼠标悬停提示。\n<br>注意，这列通常只是数据列中存在，不在\n<br>当前表格中显示。",
              "extraInfo": "*",
              "name": "columnForTooltip"
            },
            {
              "attr": "toolTipCallback",
              "valueType": "Function",
              "description": "自定义鼠标悬停提示回调函数。\n<br>专业属性。注意：返回非空内\n<br>容时，以这里设置的为准。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#bcPzP\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "rowData",
                  "colIndex",
                  "tipIndex",
                  "rowNode"
                ],
                "classify": "*"
              },
              "defaultValue": "__ht__function(data, gv, cache, rowData, colIndex, tipIndex, rowNode) {return undefined;}",
              "name": "toolTipCallback"
            },
            {
              "attr": "colorFilterFunc",
              "valueType": "Function",
              "defaultValue": "__ht__function(node, rObj, cObj, cIndex, value) {//返回null则是配置的默认字体颜色\r\nreturn cIndex == 1 || cObj.getDisplayName() == '人员类型'? \r\n    contain(value,['异常','错误','故障','非法','北']) ? \r\n    'red' : 'green' : null}",
              "extraInfo": {
                "arguments": [
                  "node",
                  "rObj",
                  "cObj",
                  "cIndex",
                  "value"
                ],
                "classify": "*"
              },
              "description": "指定行列文字的颜色。\n<br>过滤函数提供行列信息，可指定某一列，\n<br>或者某一行的某一列（单元格），根据\n<br>内容判断返回指定的颜色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#smLpL\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "colorFilterFunc"
            },
            {
              "attr": "dataFilterFunc",
              "valueType": "Function",
              "defaultValue": "__ht__function(nodeData, rowObject, columnObject, colunmIndex, value) {return value; //默认不做任何转换}",
              "description": "转换指定行列的显示内容。\n过滤函数提供行列信息，可指定某一列，\n或者某一行的某一列（单元格），根据\n内容判断返回指定的转换后的内容。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#oTfuk\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": {
                "arguments": [
                  "node",
                  "rObj",
                  "cObj",
                  "cIndex",
                  "value"
                ],
                "classify": "*"
              },
              "name": "dataFilterFunc"
            },
            {
              "attr": "btnsFilterFunc",
              "valueType": "Function",
              "description": "操作按钮列过滤。\n<br>用于针对操作列中的按钮，提供当前\n<br>行数据，自定义按钮对象的操作，包\n<br>括识别行数据的标记，对某个按钮进\n<br>行显示或隐藏等。无需返回，直接操\n<br>作按钮对象即可。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#HVpkX\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": {
                "arguments": [
                  "node",
                  "rObj",
                  "bObj",
                  "bIndex"
                ],
                "classify": "*"
              },
              "name": "btnsFilterFunc"
            },
            {
              "attr": "userDataSelfInit",
              "valueType": "Boolean",
              "description": "初始化用户数据。\n<br>专业属性，勾选后，默认以当\n<br>前组件对象，作为用户数据值。",
              "extraInfo": "*",
              "name": "userDataSelfInit"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。",
              "name": "userData"
            },
            {
              "attr": "onClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "rowData",
                  "button"
                ]
              },
              "description": "当单击行时对外触发。",
              "name": "行点击事件"
            },
            {
              "attr": "onDoubleClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "rowData",
                  "button"
                ],
                "classify": "★"
              },
              "description": "当双击行时对外触发。",
              "name": "行双击事件"
            },
            {
              "attr": "onCheck",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "selected"
                ]
              },
              "description": "当勾选时对外触发。",
              "name": "行勾选事件"
            },
            {
              "attr": "onDatasLoaded",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ],
                "classify": "*"
              },
              "description": "当表格数据加载完成时触发。",
              "name": "onDatasLoaded"
            },
            {
              "attr": "onLastButtonClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "操作按钮点击时触发。",
              "name": "onLastButtonClick"
            },
            {
              "attr": "onLastButtonSelected",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ],
                "classify": "★"
              },
              "description": "操作按钮切换选择时触发。",
              "name": "onLastButtonSelected"
            },
            {
              "attr": "datas",
              "valueType": "Object",
              "defaultValue": [
                {
                  "rowData": [
                    "设备1",
                    "南入口出入通道模块",
                    "正常通行"
                  ],
                  "children": [
                    {
                      "rowData": [
                        "子设备M",
                        "北入口通道出入模块",
                        "正常"
                      ],
                      "children": [
                        [
                          "子设备A",
                          "西门出入口",
                          "非法通行"
                        ]
                      ],
                      "id": 2
                    }
                  ],
                  "id": 1
                },
                [
                  "设备3",
                  "西门出入口",
                  "测试"
                ],
                [
                  "设备4",
                  "1门出入口",
                  "测试2"
                ],
                [
                  "设备5",
                  "北入口通道出入模块",
                  "非法通行"
                ],
                {
                  "rowData": [
                    "设备6",
                    "南入口出入通道模块",
                    "正常通行"
                  ],
                  "children": [
                    {
                      "rowData": [
                        "子设备X",
                        "北入口通道出入模块",
                        "正常"
                      ],
                      "children": [],
                      "id": 9
                    }
                  ],
                  "id": 8
                },
                [
                  "设备7",
                  "北入口通道出入模块",
                  "正常"
                ]
              ],
              "description": "树表的数据。\n支持以下三种数据格式，为别为：\n[[]]、[{},{}]和[{rowData,children:[]}]\n<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#g8dcs\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "group": "数据",
              "name": "datas"
            },
            {
              "attr": "idField",
              "valueType": "String",
              "defaultValue": "id",
              "description": "行数据的ID字段。\n<br>默认为“id”，可以指定其他。勾选行ID属性\n<br>（checkSelected）存放勾选的ID列表，以这\n<br>里确定的字段为准。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#KfNrl\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "idField"
            },
            {
              "attr": "dataAdd",
              "valueType": "Object",
              "defaultValue": null,
              "description": "添加数据。\n<br>在已有数据内容基础上，追加一行或多行。\n<br><a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#yyzK2\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "extraInfo": "★",
              "name": "dataAdd"
            },
            {
              "attr": "columns",
              "valueType": "ObjectArray",
              "defaultValue": [
                {
                  "displayName": "序号"
                },
                {
                  "displayName": "门禁名称"
                },
                {
                  "displayName": "安装位置"
                },
                {
                  "displayName": "运行状态"
                }
              ],
              "description": "表格列定义。\n<br>定义表格的列数量、数据字段，以及列的\n<br>自定义相关参数等。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#AV5L1\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "name": "columns"
            },
            {
              "attr": "columnWidths",
              "valueType": "StringArray",
              "defaultValue": [
                80,
                180,
                0,
                200
              ],
              "description": "定义各列宽度。\n<br>包括固定宽度，比例宽度，隐藏等。\n<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#B0woq\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "name": "columnWidths"
            },
            {
              "attr": "columnFields",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "列的数据字段。\n<br>用于快速定义，表格列定义（columns）\n<br>也能实现，但是这里更方便设置，通常\n<br>与特定工具函数结合使用。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#jj2Ck\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "extraInfo": "*",
              "name": "columnFields"
            },
            {
              "attr": "fieldForCombo",
              "valueType": "String",
              "description": "取指定索引列的数据.\n<br>生成下拉框所需的格式，输出给\n<br>取下拉框数据属性。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#WhEDQ\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": "1",
              "extraInfo": "*",
              "name": "fieldForCombo"
            },
            {
              "attr": "dataComboType",
              "valueType": "Object",
              "description": "取指定索引列的数据.\n<br>生成下拉框所需的格式，输出给\n<br>取下拉框数据属性。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#AV5L1\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "extraInfo": "*",
              "name": "dataComboType"
            },
            {
              "attr": "innerDisplays",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "单元格可能存在的内嵌页面。只读，从数据内容\n<br>（﻿datas﻿）属性配置中自动提取过来。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#PneUp\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "取表格内嵌页",
              "extraInfo": "*"
            },
            {
              "attr": "allRowsIdGet",
              "valueType": "StringArray",
              "description": "获取所有行id。\n<br>其中，id取决于ID字段属性。",
              "extraInfo": "*",
              "name": "allRowsIdGet"
            },
            {
              "attr": "currentIdSelect",
              "valueType": "Object",
              "description": "当前选择的ID。",
              "extraInfo": "*",
              "name": "currentIdSelect"
            },
            {
              "attr": "currentClicked",
              "valueType": "Object",
              "description": "当前点击的行。\n<br>对象格式，包含了当前行的所有信息。\n<br>注意，单击、双击、勾选、取消勾选\n<br>等都会触发当前属性更新。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#uIMBI\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": null,
              "name": "currentClicked"
            },
            {
              "attr": "checkCountGet",
              "valueType": "PositiveNumber",
              "description": "已勾选的行数。\n<br>只读属性，且勾选模式下生效。\n<br>注意，不包含节点，只统计末\n<br>端节点（无更下级节点）的行\n<br>勾选数。",
              "defaultValue": 0,
              "extraInfo": "*",
              "name": "checkCountGet"
            },
            {
              "attr": "allRowCountGet",
              "valueType": "PositiveNumber",
              "description": "所有末端行数量。\n<br>只读属性。注意，不包含节点，只统计没\n<br>有更下级节点行的总数。",
              "defaultValue": 0,
              "extraInfo": "*",
              "name": "allRowCountGet"
            },
            {
              "attr": "useTreeLined",
              "valueType": "Boolean",
              "description": "采用节点链数据。\n树表多级节点展开时，末端节点（无更下级节点）的\n文字显示，在不同节点下会重复。本属性就是为了精\n准定位某行，用于精确查找以及勾选设置等。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#A5PTR\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "useTreeLined"
            },
            {
              "attr": "treeLinedAttr2Id",
              "valueType": "Object",
              "description": "行keyURL与数据ID的键值对。\n<br>主要对于有多级节点的树表结构的数据。",
              "defaultValue": {},
              "extraInfo": "*",
              "name": "treeLinedAttr2Id"
            },
            {
              "attr": "fieldQueryRely",
              "valueType": "String",
              "description": "字段查询依赖。",
              "extraInfo": "*",
              "name": "fieldQueryRely"
            },
            {
              "attr": "queryMatched",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "查询匹配项。\n<br>与勾选行序号（checkSelected）属性双向同步，\n<br>用来设置或显示与匹配到的行。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#HOYNP\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "name": "queryMatched"
            },
            {
              "attr": "checkSelected",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "选中的行ID列表。\n<br>其中ID取决于ID字段（idField）\n<br>属性配置。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#plFb1\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详见文档</a>",
              "name": "checkSelected"
            },
            {
              "attr": "checkIndexsGet",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "选中的行序号列表。\n<br>只读属性，勾选的一行或多行数据，\n<br>以其行序号来填充本属性。",
              "extraInfo": "★",
              "name": "checkIndexsGet"
            },
            {
              "attr": "lastItems",
              "valueType": "StringArray",
              "defaultValue": [
                "添加",
                "查看",
                "编辑",
                "删除"
              ],
              "description": "操作列按钮。\n通常在最后一行。比如查看、编辑、\n删除等。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#GG35z\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "lastItems"
            },
            {
              "attr": "lastRootIgnored",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                3
              ],
              "description": "根节点按钮忽略项。\n<br>对于根节点行（无父节点，通常有子节点），\n<br>操作按钮项（﻿lastItems﻿）定义中哪些按钮不\n<br>可见，填入对应的索引列表。",
              "extraInfo": "*",
              "name": "lastRootIgnored"
            },
            {
              "attr": "lastNodeIgnored",
              "valueType": "NumberArray",
              "defaultValue": [
                3
              ],
              "description": "子节点按钮忽略项。\n<br>对于子节点行（有父节点），操作\n<br>按钮项（﻿lastItems﻿）定义中哪些按\n<br>钮不可见，填入对应的索引列表。",
              "extraInfo": "*",
              "name": "lastNodeIgnored"
            },
            {
              "attr": "lastChildIgnored",
              "valueType": "NumberArray",
              "defaultValue": [],
              "description": "末端子节点忽略项。\n<br>对于末端节点行（无子节点，通常有父节点），\n<br>操作按钮项（﻿lastItems﻿）定义中哪些按钮不可\n<br>见，填入对应的索引列表。",
              "extraInfo": "*",
              "name": "lastChildIgnored"
            },
            {
              "attr": "lastSingleIgnored",
              "valueType": "NumberArray",
              "description": "没有父子结构的节点忽略项。",
              "extraInfo": "*",
              "defaultValue": [
                1
              ],
              "name": "lastSingleIgnored"
            },
            {
              "attr": "singleRootOrChild",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "默认根节点还是子节点。\n<br>勾选时，将独节点忽略项（﻿lastSingleIgnored﻿）\n<br>视作根节点。不勾选时，视作末端节点。对应\n<br>某些场景，比如根节点不可删除，末端子节点\n<br>可删除时。",
              "extraInfo": "*",
              "name": "singleRootOrChild"
            },
            {
              "attr": "rowsExtraUserInfo",
              "valueType": "ObjectArray",
              "defaultValue": [],
              "description": "行对应的用户数据。\n<br>数组类型，索引与行序号对应。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#l5vG8\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "rowsExtraUserInfo"
            },
            {
              "attr": "lastItemRowsText",
              "valueType": "StringArray",
              "description": "操作按钮绑定文字。\n<br>比如操作按钮默认为查看、编辑，\n<br>现可指定某行的查看，显示为已\n<br>读（还是同一个按钮，只是显示\n<br>文字变化）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#fiYz0\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "lastItemRowsText"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(102,102,102,0.2)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "shadowEnabled"
            },
            {
              "attr": "lastColorsDefault",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgb(55,125,255)",
                "rgb(55,125,255)",
                "rgb(242,83,75)"
              ],
              "description": "操作按钮分别默认下的背颜色，\n<br>与操作按钮项（lastItems）保持索引对应。",
              "extraInfo": "*",
              "name": "lastColorsDefault"
            },
            {
              "attr": "lastColorsHover",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(51,153,255)",
                "rgb(51,153,255)",
                "rgb(51,153,255)",
                "#FF7C7C"
              ],
              "description": "操作按钮分别悬停时的背景色，\n<br>与操作按钮项（lastItems）保持索引对应。",
              "extraInfo": "*",
              "name": "lastColorsHover"
            },
            {
              "attr": "lastColorsActive",
              "valueType": "ColorArray",
              "defaultValue": [
                "#60ACFC",
                "#60ACFC",
                "#60ACFC",
                "rgb(241,125,164)"
              ],
              "description": "操作按钮分别按下时的背景色，\n<br>与操作按钮项（lastItems）保持索引对应。",
              "extraInfo": "*",
              "name": "lastColorsActive"
            },
            {
              "attr": "lastGap",
              "valueType": "Number",
              "defaultValue": 10,
              "description": "操作按钮项（lastItems）中\n<br>按钮之间的间距。",
              "extraInfo": "*",
              "name": "lastGap"
            },
            {
              "attr": "itemsGap",
              "valueType": "Number",
              "defaultValue": 10,
              "description": "用于在列单元格填充多个\n<br>图片或图标时，设置图片之间的间距。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#en3nZ\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "itemsGap"
            },
            {
              "attr": "dropLineColor",
              "valueType": "Color",
              "defaultValue": "rgb(55,125,255)",
              "description": "落线颜色。",
              "extraInfo": "~",
              "name": "dropLineColor"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)"
              ],
              "description": "表格背景色。\n<br>索引0：表格内容区背景色。\n<br>索引1：表格头背景色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#hurgq\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "background"
            },
            {
              "attr": "rowBackground",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgba(55,125,255,0.05)",
                "rgba(55,125,255,0.1)"
              ],
              "description": "表格行背景颜色。\n<br>索引0、1、2，分别代表行的默认、\n<br>悬停和选中背景色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#TPuaL\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "rowBackground"
            },
            {
              "attr": "stripeColors",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgba(255,255,255)",
                "rgba(245,245,245,1)"
              ],
              "description": "条纹颜色数组。\n<br>索引0和1对应配置条纹间隔颜色。\n<br>注意，本属性需勾选启用行条纹\n<br> （rowStriped）才生效。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#TQWQp\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "★",
              "name": "stripeColors"
            },
            {
              "attr": "rowStriped",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否启用行条纹颜色配置。\n<br>启用后，会代替行背景色（﻿rowBackground﻿）\n<br>索引0配置的行默认背景色，采用行条纹色\n<br>（﻿stripeColors﻿）的配置。",
              "extraInfo": "★",
              "name": "rowStriped"
            },
            {
              "attr": "tableTextColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "black",
                "rgb(64,64,64)"
              ],
              "description": "文字颜色数组。\n<br>索引0：表格内容文字颜色，\n<br>索引1：表格标题文字颜色。",
              "name": "tableTextColor"
            },
            {
              "attr": "treeNodeTextColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "black",
                "black"
              ],
              "description": "树节点文字颜色。\n<br>● 索引0：末端节点（无下级）文字颜色。未\n<br>配置时，采用表格文字色（﻿tableTextColor﻿）\n<br>索引0颜色（即内容文字色）。\n<br>● 索引1：父节点文字颜色。未配置时，保持\n<br>跟索引0一致（即跟末端节点文字颜色相同）。",
              "extraInfo": "*",
              "name": "treeNodeTextColor"
            },
            {
              "attr": "linesColor",
              "valueType": "Color",
              "defaultValue": "rgb(247,247,247)",
              "description": "行列线背景色。",
              "extraInfo": "~",
              "name": "linesColor"
            },
            {
              "attr": "borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(235,235,235)",
                "rgb(235,235,235)",
                "rgb(235,235,235)"
              ],
              "description": "表格边框线、行列线等颜色。\n<br>索引0：表格外边框颜色（需边框属性大于0才可见）\n<br>索引1：表格头下划线颜色。\n<br>索引2：表格行列线颜色。\n<br>索引3：表格头列线颜色（如果未配置或者清空，\n<br>则采用索引2即行列线颜色）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#LQixp\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "name": "线条颜色"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 1,
              "description": "表格边框线宽度。\n<br>值为0时不可见。",
              "name": "borderWidth"
            },
            {
              "attr": "borderRadius",
              "valueType": "PositiveNumber",
              "defaultValue": 3,
              "extraInfo": "★",
              "description": "边框圆角。需要边框宽度大于0，\n<br>且边框颜色可见时，本属性设置才有效果。",
              "name": "borderRadius"
            },
            {
              "attr": "rowLineVisible",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "行之间边界线是否可见。",
              "name": "rowLineVisible"
            },
            {
              "attr": "columnLineVisible",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "列之间边界线是否可见。",
              "name": "columnLineVisible"
            },
            {
              "attr": "headerVisible",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "是否显示表格头。",
              "name": "headerVisible"
            },
            {
              "attr": "pagesBottomVisible",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否底部显示表格分页。",
              "name": "pagesBottomVisible"
            },
            {
              "attr": "pageButtonCount",
              "valueType": "PositiveNumber",
              "defaultValue": 3,
              "description": "页码按钮数。\n<br>高级属性，底部分页按钮数量。",
              "extraInfo": "★",
              "name": "pageButtonCount"
            },
            {
              "attr": "emptyDefaultIcon",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/common/empty2.json",
              "description": "表格数据为空时，\n<br>内容区域默认显示的图标。",
              "extraInfo": "*",
              "name": "emptyDefaultIcon"
            },
            {
              "attr": "emptyIconOpacity",
              "valueType": "Opacity",
              "defaultValue": 1,
              "description": "空图标的透明度（0~1）。",
              "extraInfo": "*",
              "name": "emptyIconOpacity"
            },
            {
              "attr": "emptyIconSizeScale",
              "valueType": "Percentage",
              "defaultValue": 0.6,
              "description": "空图标放大、缩小比例。",
              "extraInfo": "*",
              "name": "emptyIconSizeScale"
            },
            {
              "attr": "headerHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35,
              "description": "表格头部高度。",
              "name": "headerHeight"
            },
            {
              "attr": "rowHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 35,
              "description": "行高。",
              "name": "rowHeight"
            },
            {
              "attr": "showColumnIndex",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "展示列索引号。\n<br>勾选时，表头名称前面加上当前\n<br>列的索引数字，主要方便编辑时\n<br>配置。配置完毕后取消勾选。",
              "extraInfo": "★",
              "name": "showColumnIndex"
            },
            {
              "attr": "centerAlign",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "中心对齐。",
              "extraInfo": "★",
              "name": "centerAlign"
            },
            {
              "attr": "font",
              "valueType": "Font",
              "description": "字体。",
              "extraInfo": "★",
              "name": "font"
            },
            {
              "attr": "nodeExpandMode",
              "valueType": "ExpandMode",
              "description": "父节点的单击展开模式：\n<br>- 不响应展开（noExpand）、\n<br>- 展开直接下一级（expandFirstLayer）\n<br>- 展开所有下级（expandAll）。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#Ifi3F\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "defaultValue": "expandFirstLayer",
              "extraInfo": "*",
              "name": "nodeExpandMode"
            },
            {
              "attr": "copyTypeTextColor",
              "valueType": "Color",
              "defaultValue": "rgb(13,24,97)",
              "description": "复制类型文字颜色。<a href=\"https://www.yuque.com/liuhuo-nc809/uiotos/mttyppid7d9y7sqk#erRfb\" style=\"color:rgb(96,172,252)\" target=\"_blank\">详情</a>",
              "extraInfo": "*",
              "name": "copyTypeTextColor"
            },
            {
              "attr": "hoverTextIcon",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/icons/common/copy.json",
              "description": "悬停复制提示图标的设置路径。",
              "extraInfo": "*",
              "name": "hoverTextIcon"
            },
            {
              "attr": "hoverTextIconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                40,
                18
              ],
              "description": "悬停复制提示图标尺寸。\n<br>索引0、1分别为宽度和高度。",
              "extraInfo": "*",
              "name": "hoverTextIconSize"
            },
            {
              "attr": "hoverTextIconColor",
              "valueType": "Color",
              "defaultValue": "rgb(55,125,255)",
              "description": "悬停复制提示图标的颜色。",
              "extraInfo": "*",
              "name": "hoverTextIconColor"
            },
            {
              "attr": "hoverTextIconText",
              "valueType": "String",
              "defaultValue": "复制",
              "description": "悬停复制提示按钮文字。",
              "extraInfo": "*",
              "name": "hoverTextIconText"
            },
            {
              "attr": "hoverTextScale",
              "valueType": "Number",
              "defaultValue": 1,
              "description": "悬停复制提示按钮文字缩放。",
              "extraInfo": "*",
              "name": "hoverTextScale"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            },
            {
              "attr": "序号数字>4>Shape1>s:shape.border.width",
              "name": ".shape.border.width",
              "valueType": "Number",
              "defaultValue": 3,
              "extraInfo": null,
              "group": "序号数字>4>Shape1"
            },
            {
              "attr": "序号数字>4>Shape1>s:shape.border.color",
              "name": ".shape.border.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>4>Shape1"
            },
            {
              "attr": "序号数字>4>Text1>s:text.color",
              "name": ".text.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>4>Text1"
            },
            {
              "attr": "序号数字>4>Text1>s:text.font",
              "name": ".text.font",
              "valueType": "Font",
              "defaultValue": "12px arial, sans-serif",
              "extraInfo": null,
              "group": "序号数字>4>Text1"
            },
            {
              "attr": "序号数字>4>Text1>s:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "1",
              "extraInfo": null,
              "group": "序号数字>4>Text1"
            },
            {
              "attr": "序号数字>0>Shape1>s:shape.border.width",
              "name": ".shape.border.width",
              "valueType": "Number",
              "defaultValue": 3,
              "extraInfo": null,
              "group": "序号数字>0>Shape1"
            },
            {
              "attr": "序号数字>0>Shape1>s:shape.border.color",
              "name": ".shape.border.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>0>Shape1"
            },
            {
              "attr": "序号数字>0>Text1>s:text.color",
              "name": ".text.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>0>Text1"
            },
            {
              "attr": "序号数字>0>Text1>s:text.font",
              "name": ".text.font",
              "valueType": "Font",
              "defaultValue": "12px arial, sans-serif",
              "extraInfo": null,
              "group": "序号数字>0>Text1"
            },
            {
              "attr": "序号数字>0>Text1>s:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "1",
              "extraInfo": null,
              "group": "序号数字>0>Text1"
            },
            {
              "attr": "序号数字>1>Shape1>s:shape.border.width",
              "name": ".shape.border.width",
              "valueType": "Number",
              "defaultValue": 3,
              "extraInfo": null,
              "group": "序号数字>1>Shape1"
            },
            {
              "attr": "序号数字>1>Shape1>s:shape.border.color",
              "name": ".shape.border.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>1>Shape1"
            },
            {
              "attr": "序号数字>1>Text1>s:text.color",
              "name": ".text.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>1>Text1"
            },
            {
              "attr": "序号数字>1>Text1>s:text.font",
              "name": ".text.font",
              "valueType": "Font",
              "defaultValue": "12px arial, sans-serif",
              "extraInfo": null,
              "group": "序号数字>1>Text1"
            },
            {
              "attr": "序号数字>1>Text1>s:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "1",
              "extraInfo": null,
              "group": "序号数字>1>Text1"
            },
            {
              "attr": "序号数字>2>Shape1>s:shape.border.width",
              "name": ".shape.border.width",
              "valueType": "Number",
              "defaultValue": 3,
              "extraInfo": null,
              "group": "序号数字>2>Shape1"
            },
            {
              "attr": "序号数字>2>Shape1>s:shape.border.color",
              "name": ".shape.border.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>2>Shape1"
            },
            {
              "attr": "序号数字>2>Text1>s:text.color",
              "name": ".text.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>2>Text1"
            },
            {
              "attr": "序号数字>2>Text1>s:text.font",
              "name": ".text.font",
              "valueType": "Font",
              "defaultValue": "12px arial, sans-serif",
              "extraInfo": null,
              "group": "序号数字>2>Text1"
            },
            {
              "attr": "序号数字>2>Text1>s:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "1",
              "extraInfo": null,
              "group": "序号数字>2>Text1"
            },
            {
              "attr": "序号数字>3>Shape1>s:shape.border.width",
              "name": ".shape.border.width",
              "valueType": "Number",
              "defaultValue": 3,
              "extraInfo": null,
              "group": "序号数字>3>Shape1"
            },
            {
              "attr": "序号数字>3>Shape1>s:shape.border.color",
              "name": ".shape.border.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>3>Shape1"
            },
            {
              "attr": "序号数字>3>Text1>s:text.color",
              "name": ".text.color",
              "valueType": "Color",
              "defaultValue": "rgb(240,225,19)",
              "extraInfo": null,
              "group": "序号数字>3>Text1"
            },
            {
              "attr": "序号数字>3>Text1>s:text.font",
              "name": ".text.font",
              "valueType": "Font",
              "defaultValue": "12px arial, sans-serif",
              "extraInfo": null,
              "group": "序号数字>3>Text1"
            },
            {
              "attr": "序号数字>3>Text1>s:text",
              "name": ".文字",
              "valueType": "String",
              "defaultValue": "1",
              "extraInfo": null,
              "group": "序号数字>3>Text1"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/树表.json",
          "rotateAsClock": true,
          "renderHTML": "__ht__function(data, gv, cache) {return __treeTable_ui(data, gv, cache);}",
          "width": 775,
          "height": 347,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "comps": [],
          "uuid": "534C5857-4771-4E6D-8CB4-883C08A7ABD5"
        },
        "position": {
          "x": 718.65188,
          "y": 854.34855
        },
        "width": 266.53422,
        "height": 211.8571
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "leftright",
        "layout.v": "topbottom",
        "fullscreen": "fill",
        "fullscreen.gap": 0
      },
      "a": {
        "bindEvents": [
          "*",
          "onDatasLoaded",
          "onClick",
          "onDoubleClick",
          "onCheck",
          "onLastButtonClick",
          "onLastButtonSelected"
        ],
        "dataComboType": [
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 1,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 1
            },
            "children": []
          },
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 2,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 2
            },
            "children": []
          },
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 3,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 3
            },
            "children": []
          },
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 4,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 4
            },
            "children": []
          },
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 5,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 5
            },
            "children": []
          },
          {
            "name": {
              "type": "graphView",
              "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
            },
            "value": 6,
            "itemData": {
              "rowData": [
                {
                  "type": "graphView",
                  "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
                },
                "334N",
                "499N"
              ],
              "id": 6
            },
            "children": []
          }
        ],
        "allRowsIdGet": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "headerVisible": true,
        "pagesBottomVisible": false,
        "background": [
          null,
          "rgb(4,50,85)"
        ],
        "headerBackground": "rgb(4,50,85)",
        "rowStriped": true,
        "rowBackground": [
          null,
          null,
          "rgba(55,125,255,0.1)"
        ],
        "columnLineVisible": false,
        "linesColor": null,
        "borderColor": [
          null,
          null,
          "rgba(255,255,255)"
        ],
        "tableTextColor": [
          "rgb(247,247,247)",
          "#60ACFC"
        ],
        "columns": [
          {
            "displayName": "序号"
          },
          {
            "displayName": "人员姓名",
            "drawCell": {}
          },
          {
            "displayName": "靠车"
          },
          {
            "displayName": "压车"
          }
        ],
        "columnWidths": [
          20,
          -0.3,
          -0.35,
          -0.35
        ],
        "lastItems": [],
        "idColumnVisible": false,
        "datas": [
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 1
          },
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 2
          },
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 3
          },
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 4
          },
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 5
          },
          {
            "rowData": [
              {
                "type": "graphView",
                "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
              },
              "334N",
              "499N"
            ],
            "id": 6
          }
        ],
        "__loadingStatus": false,
        "symbol": "symbols/develop/uiotos/base/treeTable-ui.json",
        "stripeColors": [
          "rgba(84,170,255,0.05)",
          "rgba(0,14,61,0)"
        ],
        "bindControlsTag": [],
        "bindControlsAttr": [],
        "bindControlsVal": [],
        "paramControlTag": [],
        "paramControlAttr": [],
        "paramBindEvent": [],
        "paramsGenerator": "function paramsGenerator(data, val, index, node, oldVal, form) {\r\n    //绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\n    switch (index) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            break;\r\n        case 2:\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return val;\r\n}",
        "innerDisplays": [
          {
            "cellPos": {
              "rowId": 1,
              "colId": 1
            },
            "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
          },
          {
            "cellPos": {
              "rowId": 2,
              "colId": 1
            },
            "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
          },
          {
            "cellPos": {
              "rowId": 3,
              "colId": 1
            },
            "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
          },
          {
            "cellPos": {
              "rowId": 4,
              "colId": 1
            },
            "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
          },
          {
            "cellPos": {
              "rowId": 5,
              "colId": 1
            },
            "display": "displays/develop/user/进阶/杂项示例/数据大屏/河道监测/序号数字.json"
          }
        ],
        "treeLinedAttr2Id": {},
        "isLoadingGet": false,
        "checkCountGet": 0,
        "allRowCountGet": 6,
        "innerLayoutMode": "fullScreen",
        "序号数字>0>Shape1>s:shape.border.width": 3,
        "序号数字>0>Shape1>s:shape.border.color": "rgb(240,225,19)",
        "序号数字>0>Text1>s:text.color": "rgb(240,225,19)",
        "序号数字>0>Text1>s:text.font": "12px arial, sans-serif",
        "序号数字>0>Text1>s:text": "1",
        "序号数字>1>Shape1>s:shape.border.width": 3,
        "序号数字>1>Shape1>s:shape.border.color": "rgb(240,225,19)",
        "序号数字>1>Text1>s:text.color": "rgb(240,225,19)",
        "序号数字>1>Text1>s:text.font": "12px arial, sans-serif",
        "序号数字>1>Text1>s:text": "2",
        "序号数字>2>Shape1>s:shape.border.width": 3,
        "序号数字>2>Shape1>s:shape.border.color": "rgb(240,225,19)",
        "序号数字>2>Text1>s:text.color": "rgb(240,225,19)",
        "序号数字>2>Text1>s:text.font": "12px arial, sans-serif",
        "序号数字>2>Text1>s:text": "3",
        "序号数字>3>Shape1>s:shape.border.width": 3,
        "序号数字>3>Shape1>s:shape.border.color": "rgb(240,225,19)",
        "序号数字>3>Text1>s:text.color": "rgb(240,225,19)",
        "序号数字>3>Text1>s:text.font": "12px arial, sans-serif",
        "序号数字>3>Text1>s:text": "4",
        "序号数字>4>Shape1>s:shape.border.width": 3,
        "序号数字>4>Shape1>s:shape.border.color": "rgb(240,225,19)",
        "序号数字>4>Text1>s:text.color": "rgb(240,225,19)",
        "序号数字>4>Text1>s:text.font": "12px arial, sans-serif",
        "序号数字>4>Text1>s:text": "5"
      }
    }
  ],
  "modified": "Thu Aug 22 2024 15:42:43 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": 558.04297,
    "y": 748.42,
    "width": 293.87602,
    "height": 211.8571
  }
}