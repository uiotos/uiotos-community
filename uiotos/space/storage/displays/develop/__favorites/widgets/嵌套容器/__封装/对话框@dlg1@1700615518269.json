{
    "v": "7.7.2",
    "p": {
        "autoAdjustIndex": true,
        "hierarchicalRendering": false
    },
    "a": {
        "rotateAsClock": false,
        "gridBlockSize": 40,
        "gridThickLinesEvery": 10,
        "gridThickColor": "rgba(100,100,100,0.2)",
        "gridLightColor": "rgba(127,127,127,0.1)",
        "gridAngle": 1.5708,
        "gridRotation": 0,
        "gridZoomThreshold": 0.25,
        "connectActionType": null,
        "fitContent": false
    },
    "d": [{
            "c": "ht.Node",
            "i": 114394,
            "p": {
                "name": "dlg",
                "displayName": "对话框（dlg1）",
                "tag": "dlg1",
                "dataBindings": {
                    "a": {
                        "show": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "titleText": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "display": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onPageBinded": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOk": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onCancel": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onFinally": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "innerLayoutMode": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "内嵌页>0>Text1>s:text": {
                            "id": "iotos.formReset",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "内嵌页>0>_base>s:shape.background": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
                            "alias": ""
                        },
                        "内嵌页>0>Text1>s:text.font": {
                            "id": "iotos.formReset",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Thu Nov 16 2023 16:29:40 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "display",
                            "valueType": "URL"
                        },
                        {
                            "attr": "innerLayoutMode",
                            "valueType": "String",
                            "description": "内嵌页面的布局模式。\n<br>页面通常分为适配内容（fitContent）\n<br>和全屏填充（fullScreen）两种模式，\n<br>前者自适应缩放以保证所有内容窗口\n<br>范围内可见，后者则是指定某个图元\n<br>组件作为底板全屏填充，其他组件直\n<br>接或简接对于底板布局。\n<br>模式无（none）表示以上两种模式都\n<br>不是，既不缩放适配也不全屏铺满。\n<br>注意，本属性为读写，可以表示当前\n<br>页面的状态，也可以进行设置。其中\n<br>设置全屏填充时，自动选择最底层图\n<br>元组件作为底板。新建页面默认为基\n<br>于有底板的全屏填充布局，而非缩放。\n",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "fitContent",
                                        "fullScreen",
                                        "none"
                                    ]
                                }
                            }
                        },
                        {
                            "attr": "reset",
                            "valueType": "Level2",
                            "defaultValue": 0
                        },
                        {
                            "attr": "titleText",
                            "valueType": "String",
                            "defaultValue": "对话框"
                        },
                        {
                            "attr": "titleColor",
                            "valueType": "Color"
                        },
                        {
                            "attr": "titleFont",
                            "valueType": "Font",
                            "defaultValue": "12px sans-serif, Arial"
                        },
                        {
                            "attr": "footerBackground",
                            "valueType": "Color"
                        },
                        {
                            "attr": "backgroundImage",
                            "valueType": "Image",
                            "defaultValue": "symbols/develop/uiotos/icons/common/borderRectange.json"
                        },
                        {
                            "attr": "backgroundColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)",
                            "description": "对话框整体背景色。\n<br>包括对话框默认的标题头和底部。注意，该颜色在内容背景色（innerBackground）\n<br>的下层，因此会被遮盖掉，要显示的话首先需要设置内容背景色透明度为0或清掉。"
                        },
                        {
                            "attr": "innerBackground",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)",
                            "description": "对话框内容页背景色。\n<br>不包括对话框默认的标题头和底部。注意，如果要设置对话框统一背景色，\n<br>或者设置透明、半透明，需要先将该属性设置透明度为0或者删除设定值，\n<br>随后设置对话框背景色属性（backgoundColor）。"
                        },
                        {
                            "attr": "maskBackground",
                            "valueType": "Color",
                            "defaultValue": "rgba(0,0,0,0.30)",
                            "description": "遮盖层背景色。\n<br>模态对话框弹出时，通常出现在页面上半透明阴影的遮盖颜色。注意，如果需要\n<br>设置对话框全透明，除了对话框整体背景色（backgroundColor）和内容区域背景\n<br>色（innerBackground）颜色为透明或清理掉，也需要将当前的遮盖曾颜色设置为\n<br>透明或者清理掉。"
                        },
                        {
                            "attr": "modal",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "borderRadius",
                            "valueType": "PositiveNumber",
                            "defaultValue": 10
                        },
                        {
                            "attr": "boxShadow",
                            "valueType": "String",
                            "defaultValue": "0px 8px 22px rgba(0,0,0,0.1)"
                        },
                        {
                            "attr": "padding",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0
                        },
                        {
                            "attr": "useOriginSize",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "embedded",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "勾选后，对话框弹窗显示位置不再是屏幕居中，\n而是按照布局设置动态确定的位置上显示。注意，\n拖放将对话框拖放到页面区域（底板矩形）外，\n并且设置了自动布局，那么运行时会自动靠边对其\n显示，避免编辑时覆盖页面内容区域。"
                        },
                        {
                            "attr": "show",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "hide",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "debugOccupied",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "displaySaving",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "enableLoading",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "isLoadingGet",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "是否正在加载。\n<br>只读，当正在通过display属性逐层加载内嵌页直到完全加载完毕前，\n<br>该属性值为1，加载完毕后，复位为0."
                        },
                        {
                            "attr": "reloadWhenOpen",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "该属性不要默认勾选，会导致编辑器属性弹窗初始化内容被清空"
                        },
                        {
                            "attr": "onDisplayLoaded",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache"
                                ]
                            }
                        },
                        {
                            "attr": "onOk",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form"
                                ]
                            }
                        },
                        {
                            "attr": "onCancel",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form"
                                ]
                            }
                        },
                        {
                            "attr": "onFinally",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "form",
                                    "isOk"
                                ]
                            }
                        },
                        {
                            "attr": "onPageBinded",
                            "valueType": "Object"
                        },
                        {
                            "attr": "headerHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 35
                        },
                        {
                            "attr": "footerHeight",
                            "valueType": "PositiveNumber",
                            "defaultValue": 60,
                            "group": "footer&header"
                        },
                        {
                            "attr": "headerVisible",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "footerVisible",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "closeButtonOnly",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "footerButtonGap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 20
                        },
                        {
                            "attr": "oneButton",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "cancelDefault",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "footerButtonsText",
                            "valueType": "StringArray",
                            "defaultValue": [
                                "取消",
                                "确定"
                            ],
                            "description": "取消和确定按钮文字。\n<br>数组类型，其中索引0为“取消”功能\n<br>按钮对应的显示文字，索引1为“确定”\n<br>功能按钮对应的显示文字。可以按照\n<br>实际情况给两个功能得按钮赋予其他\n<br>显示文字。\n<br>其中，取消时，对话框不对外触发连\n<br>线操作；确定时，对话框执行对外连\n<br>线操作。\n<br>注意，“确定”对应onOk事件，“取消”\n<br>对应onCancel事件，因此如果想要取\n<br>消点击时触发下一步连线执行，可以\n<br>通过关联onCancel事件。点击确定时，\n<br>对外可省去对onOk事件的关联，”取\n<br>消”对onCancel事件的关联则不能省。"
                        },
                        {
                            "attr": "bt0-backgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt0-selectBackgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt0-activeBackgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt0-textColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(255,255,255)"
                            ]
                        },
                        {
                            "attr": "bt0-selectTextColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(255,255,255)"
                            ]
                        },
                        {
                            "attr": "bt0-activeTextColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(255,255,255)"
                            ]
                        },
                        {
                            "attr": "bt0-borderWidths",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                1,
                                0,
                                0
                            ]
                        },
                        {
                            "attr": "bt0-borderColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(55,125,255)",
                                "rgb(55,125,255)"
                            ]
                        },
                        {
                            "attr": "bt0-borderRadius",
                            "valueType": "PositiveNumber",
                            "defaultValue": 3
                        },
                        {
                            "attr": "bt1-backgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(247,247,247)"
                            ]
                        },
                        {
                            "attr": "bt1-selectBackgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(247,247,247)"
                            ]
                        },
                        {
                            "attr": "bt1-activeBackgrounds",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(247,247,247)"
                            ]
                        },
                        {
                            "attr": "bt1-textColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt1-selectTextColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt1-activeTextColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt1-borderWidths",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                1,
                                0,
                                0
                            ]
                        },
                        {
                            "attr": "bt1-borderColors",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgb(51,153,255)",
                                "rgb(51,153,255)"
                            ]
                        },
                        {
                            "attr": "bt1-borderRadius",
                            "valueType": "PositiveNumber",
                            "defaultValue": 3
                        },
                        {
                            "attr": "footerButtonSize",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                75,
                                35
                            ]
                        },
                        {
                            "attr": "titleFont",
                            "valueType": "Font"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type"
                                ]
                            }
                        },
                        {
                            "attr": "useInnerEventsAll",
                            "valueType": "Boolean",
                            "description": "是否允许内嵌事件通过。\n<br>若勾选，内嵌图元表单类型的事件函数属性，都将派发到上层容器图元对外触发连线操作。\n<br>默认不勾选，上层容器图元对外连线反向关联需要指定内嵌图元的具体事件函数属性才能\n<br>触发，否则忽略内嵌图元的事件触发，不会传递给上层容器图元对外连线操作。"
                        },
                        {
                            "attr": "pureFormValues",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "纯表单数据。\n<br>限定iotos.formValue类型的绑定，不包括form/formReset。"
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "内嵌页>0>_base>s:shape.background",
                            "valueType": "Color",
                            "defaultValue": "rgb(61,61,61)",
                            "extraInfo": null,
                            "description": null,
                            "group": "内嵌页>0>_base"
                        },
                        {
                            "attr": "内嵌页>0>Text1>s:text",
                            "valueType": "String",
                            "defaultValue": "文字",
                            "extraInfo": null,
                            "description": null,
                            "group": "内嵌页>0>Text1"
                        },
                        {
                            "attr": "内嵌页>0>Text1>s:text.font",
                            "valueType": "Font",
                            "defaultValue": "12px arial, sans-serif",
                            "extraInfo": null,
                            "description": null,
                            "group": "内嵌页>0>Text1"
                        }
                    ],
                    "snapshotURL": "icon.base.dialog-ui",
                    "renderHTML": "__ht__function(data, gv, cache) {return __dialog_ui(data,gv,cache);}",
                    "width": 600,
                    "height": 400,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "3222C29D-3167-4F9D-9134-B0482855A841"
                },
                "position": {
                    "x": -176.38601,
                    "y": 74.00788
                },
                "width": 500.90088,
                "height": 324.11233
            },
            "s": {
                "label.opacity": 1,
                "label.position": 2,
                "label.offset.y": -8,
                "label.color": "rgb(125,195,125)",
                "interactive": true,
                "image.stretch": "uniform",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "label": "4）对话框完成对嵌套1中创建页面的嵌套。",
                "label.font": "26px arial, sans-serif",
                "label.align": "left",
                "fullscreen.gap": 0,
                "2d.movable": false,
                "fullscreen": "fill"
            },
            "a": {
                "__loadingStatus": false,
                "show": false,
                "symbol": "symbols/develop/uiotos/base/dialog-ui.json",
                "display": "./3-示例体验/内嵌页.json",
                "isLoadingGet": false,
                "innerLayoutMode": "fullScreen",
                "内嵌页>0>Text1>s:text": "文字",
                "内嵌页>0>_base>s:shape.background": "rgb(124,145,155)",
                "内嵌页>0>Text1>s:text.font": "12px arial, sans-serif"
            }
        },
        {
            "c": "ht.Node",
            "i": 114395,
            "p": {
                "name": "bt",
                "displayName": "普通按钮 v2（bt1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "bt1",
                "dataBindings": {
                    "a": {
                        "text": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onFormClick": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_1": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Sun Sep 03 2023 13:21:53 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "shadowBorder",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                0,
                                0,
                                8
                            ],
                            "group": "功能（关键）",
                            "description": ""
                        },
                        {
                            "attr": "shadowColor",
                            "valueType": "Color",
                            "defaultValue": "rgba(102,102,102,0.2)"
                        },
                        {
                            "attr": "shadowEnabled",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "text",
                            "valueType": "String",
                            "defaultValue": "Button"
                        },
                        {
                            "attr": "background",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(55,125,255)",
                                "rgba(55,125,255,0.9)"
                            ]
                        },
                        {
                            "attr": "activeBackground",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(50,99,250)",
                                "rgba(55,125,255,0.9)"
                            ]
                        },
                        {
                            "attr": "textColor",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "rgb(255,255,255)",
                                "rgb(255,255,255)"
                            ]
                        },
                        {
                            "attr": "activeTextColor",
                            "valueType": "ColorArray",
                            "defaultValue": [
                                "white",
                                "white"
                            ]
                        },
                        {
                            "attr": "textFont",
                            "valueType": "Font",
                            "defaultValue": "12px sans-serif, Arial"
                        },
                        {
                            "attr": "radius",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                3,
                                3,
                                3,
                                3
                            ]
                        },
                        {
                            "attr": "borderWidth",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0.5
                        },
                        {
                            "attr": "bindTabview",
                            "valueType": "String",
                            "defaultValue": "tabView"
                        },
                        {
                            "attr": "darkStyle",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "onFormClick",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "_bindEvents_1",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "snapshotURL": "symbols/develop/uiotos/base/button.png",
                    "renderHTML": "__ht__function(data, gv, cache) {return __button_ui(data,gv,cache);}",
                    "width": 75,
                    "height": 35,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "13A04250-FC27-495D-8FC0-9A4AC03334F7"
                },
                "position": {
                    "x": 278.57874,
                    "y": 74.00788
                },
                "width": 101.99339,
                "height": 43.06388
            },
            "s": {
                "label.opacity": 0,
                "label.position": 14,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(61,61,61)",
                "interactive": true,
                "image.stretch": "uniform",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "是否忘记对组件普通按钮 v2（bt1）布局？当页面存在底板时为弹性布局模式，此时基本上所有组件都要求做布局。",
                "layout.h": "center",
                "layout.v": "center",
                "fullscreen.gap": 0
            },
            "a": {
                "icon-background": "rgb(255,255,255)",
                "paramControlTag": [
                    null,
                    null
                ],
                "paramControlAttr": [
                    null,
                    null
                ],
                "bindControlsTag": [
                    "dlg1",
                    "func1"
                ],
                "bindControlsAttr": [
                    "show",
                    "exec"
                ],
                "bindControlsVal": [
                    null,
                    null
                ],
                "symbol": "symbols/develop/uiotos/base/button-ui.json",
                "oldDynamicAttrs": [{
                        "attr": "_bindEvents_0",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_bindEvents_1",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    }
                ],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 114396,
            "p": {
                "name": "edge",
                "displayName": "0（edge1）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                            关联绑定信息：<br>\n                                            <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">静态赋值：null</li>\n                                            </div>",
                "parent": {
                    "__i": 114395
                },
                "tag": "edge1",
                "source": {
                    "__i": 114395
                },
                "target": {
                    "__i": 114394
                }
            },
            "s": {
                "label": "",
                "edge.color": "#8DBE48",
                "edge.type": "flex",
                "edge.gap": 16,
                "edge.width.absolute": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#8DBE48",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "interactive": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                            关联绑定信息：<br>\n                                            <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共2条</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：show@dlg1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：false</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">静态赋值：null</li>\n                                            </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 114397,
            "p": {
                "name": "func",
                "displayName": "工具函数（func1）",
                "toolTip": "获取组件属性值<br>formValues",
                "tag": "func1",
                "dataBindings": {
                    "a": {
                        "userData": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "output": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "inputs": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "exec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "arrExec": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_rawForm": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onOutput": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_1": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Thu Sep 07 2023 15:54:14 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "symbol",
                            "valueType": "Image",
                            "name": "组件地址"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color",
                            "defaultValue": "rgb(55,125,255)",
                            "description": "图标颜色。\n<br>包括显示文字。",
                            "group": "功能（关键）",
                            "name": "图标颜色"
                        },
                        {
                            "attr": "function",
                            "valueType": "ToolFunction",
                            "defaultValue": "transfer",
                            "name": "功能选项",
                            "description": "函数选择 → 获取组件表单属性（formValue）。                                                            <br>通过连线操作，可以获取其他一个或多个组件的指定属性值。                                                            <br>连线方式跟常规的没有任何区别：反向关联属性时，是获取                                                            <br>指定属性的值；没有选择反向关联是获取表单对象；有设置                                                            <br>数组索引时，是获取到属性值填充到数组指定索引位置。                                                            <br>主要用于多层嵌套或者不带事件连线的图形组件（比如矩形、                                                            <br>不规则图形等），对嵌套的容器获取其暴露过来的属性值。"
                        },
                        {
                            "attr": "exeWhenInput",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输入赋值时执行"
                        },
                        {
                            "attr": "resetAfterInput",
                            "valueType": "Boolean",
                            "name": "输入赋值后清空",
                            "description": "勾选后，每次输入值有更新，在触发下一步（如果有勾选输入时执行）后，同时复位清空输入属性\n的值，确保下一次再输入同样内容时也能按照变化处理触发执行。注意，再多条连线操作inputs输入\n的不同索引index时，该属性不能勾选，否则无法实现多个值连线（异步先后）赋值传入。",
                            "defaultValue": false
                        },
                        {
                            "attr": "inputsArrToObj",
                            "valueType": "Boolean",
                            "name": "输入数组转对象",
                            "description": "是否切换成对象格式。\n<br>输入组（inputs）默认为数组格式，当前属性勾选时\n<br>会将输入组切换成非数组的对象格式，再次取消勾选\n<br>时，会恢复成数组格式。\n<br>\n切换成对象，主要是为了连线操作时，能对初始的非\n<br>数组属性值进行操作，这对于数组取自身索引值对外\n<br>赋值时有用，否则会因为操作数组类型属性值，导致\n<br>被识别为操作目标数组的索引进行赋值。"
                        },
                        {
                            "attr": "exeWhenLoad",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "组件加载时执行"
                        },
                        {
                            "attr": "oldValueMerge",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "输出合并非覆盖",
                            "description": "对被操作的属性值做追加而不是覆盖替换。\n<br>被操作属性值作为旧值，按照值类型（数值、字符串、数组、对象等）追加分为以下\n<br>情况：\n<br>1）如果被赋值的（要操作的旧值）为数组类型，通常会将当前值追加过去而不是覆盖；\n<br>工具函数的输入组（inputs）属性例外，在旧值为空数组或者长度为1的数组时，会被当\n<br>做空值或者以唯一哪个元素的值作为当前的旧值，不当做数组类型的操作来追加。\n<br>2）被赋值的为空（注意，并非0、空字符串等\"空\"值）时，输入（组）中一个或多个输\n<br>入项，会合并成一个值输出。其中，合并取决于输入组的类型（输入组多个值中类型数\n<br>量最多的被认为是当前输入组的值类型），具体如下:\n<br>    ■ 数字：输入组各项强制转换成数值并相加，将结果输出；\n<br>    ■ 字符串：输入组各项转成字符串依次拼接形成新的字符串输出；\n<br>    ■ 布尔型：输入组的各项转换成布尔然后做并集（或）后逻辑结果输出；\n<br>    ■ 对象：输入组各项被当成对象，然后字段合并成新对象后输出；\n<br>强制转换这里需注意：\n<br>    ■ 非空字符串转数值时，除了\"true\"（大小写均可）会作为1，其他字符串会作为0；\n<br>3）被赋值的不为空，有具体类型时，比如数字、字符串、布尔、对象类型，此时输入\n<br>组各项值，不再按照类型的多数（如果存在多个输入项）来强制转换少数输入项，而是\n<br>统一按照操作赋值的旧值类型，来转换输入的各项，并且按照类型类自动选择合适的合\n<br>并方式（如上），生成结果来赋值。\n<br>    ○ 注意1：多项输入和旧值会参与一起做合并操作，并非仅仅输入组的各项之间进行。\n<br>    ○ 注意2：如果输入值并非数组，会作当成输入组且元素个数为1的情况来处理。"
                        },
                        {
                            "attr": "inputs",
                            "valueType": "ObjectArray",
                            "name": "输入（组）",
                            "defaultValue": [],
                            "description": "用于接收函数参数输入，默认为数组格式，可以设置多个入参。\n<br>外部可以多条连线操作该属性，利用数组操作特性，在各自的连线操作\n<br>中bindControlsVal中设置对应的索引值，用来指定传入输入数组中指定\n<br>值，实现多参数传入。\n<br>\n注意，对于透明传递不做任何业务逻辑处理时，默认会将输入组的值直接输\n<br>出，默认以空（undefined）对外操作赋值，通常用于对外清空值。\n<br>此外，输入组长度为1时，将去掉数组后以元素本身值对外输出，比如\n<br>[1]、['hello']、[true]，['']会被当做1、'hello'、true、''输出。长度大于1的\n<br>输入组，对外输出则是正常的数组值。"
                        },
                        {
                            "attr": "_rawForm",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "description": "原始属性表单。                    <br>包含所有做了form、formReset、formValue绑定的属性。",
                            "dynamicCreate": true
                        },
                        {
                            "attr": "delay",
                            "valueType": "PositiveNumber",
                            "defaultValue": 0,
                            "name": "延时执行毫秒"
                        },
                        {
                            "attr": "exec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "执行"
                        },
                        {
                            "attr": "arrExec",
                            "valueType": "Boolean",
                            "defaultValue": false,
                            "name": "遍历执行",
                            "description": "准输出值如果是数组时，自动拆成多个元素，依次对外触发。\n<br>相当于在连线静态值bindControlsVal中依次填入从0到n-1后，\n<br>再点击常规“执行”。\n<br>对于透明传递而言，通常输出就等于输入，因此也相当于将\n<br>输入的多个参数（数组元素），依次填入再触发执行。\n<br>"
                        },
                        {
                            "attr": "whenOutputing",
                            "valueType": "MultiComboBox",
                            "name": "whenOutputing"
                        },
                        {
                            "attr": "changeOutputTo",
                            "valueType": "MultiComboBox",
                            "extraInfo": {
                                "enum": {
                                    "values": [
                                        "不转换",
                                        "空对象（null）",
                                        "未定义（undefined）",
                                        "空字符串（\"\"）",
                                        "否（false）",
                                        "等于零（0）"
                                    ]
                                }
                            },
                            "defaultValue": "不转换",
                            "name": "changeOutputTo"
                        },
                        {
                            "attr": "output",
                            "valueType": "Object",
                            "name": "输出"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        }
                    ],
                    "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
                    "width": 45,
                    "height": 45,
                    "comps": [{
                        "type": "image",
                        "color": {
                            "func": "__ht__function(data, view) {\nlet color = data.ca('color');\r\ndata.s('label.color',color);\r\nreturn color;\n}",
                            "value": "rgb(51,153,255)"
                        },
                        "name": "symbols/develop/uiotos/icons/editroToolBar/function.json",
                        "shadowColor": "rgb(61,61,61)",
                        "displayName": "node_image",
                        "rect": [
                            0.53882,
                            1.04528,
                            43.92236,
                            42.90945
                        ]
                    }],
                    "uuid": "9A52DC14-DBFA-49B3-9458-66AD411345BF"
                },
                "position": {
                    "x": 278.57874,
                    "y": -27.42052
                }
            },
            "s": {
                "label.position": 25,
                "label.offset.y": 0,
                "interactive": true,
                "image.stretch": "uniform",
                "2d.editable": false,
                "select.width": 0.5,
                "select.type": "roundRect",
                "select.color": "rgb(124,145,155)",
                "label": "获取组件属性值",
                "label.font": "26px Microsoft YaHei",
                "label.color": "rgb(55,125,255)",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "索引为0的连线操作组件dlg1，属性不存在：新手必读_内嵌页>0>Text1>s:text",
                "fullscreen.gap": 0
            },
            "a": {
                "toolTipRaw": "获取组件属性值<br>formValues",
                "输出遇到空值": "全部（*）",
                "输出遇到空值-list": [
                    "全部（*）",
                    "空对象（null）",
                    "未定义（undefined）",
                    "空字符串（\"\"）",
                    "否（false）",
                    "等于零（0）",
                    "小于零（<0）",
                    "NaN"
                ],
                "arrExec": false,
                "function": "formValues",
                "symbol": "symbols/develop/uiotos/base/__convertor.json",
                "oldDynamicAttrs": [{
                        "attr": "_bindEvents_1",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[1]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_bindEvents_0",
                        "valueType": "MultiComboBox",
                        "defaultValue": "*",
                        "group": "bindEvents",
                        "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                        "dynamicCreate": true
                    },
                    {
                        "attr": "_rawForm",
                        "valueType": "Boolean",
                        "defaultValue": false,
                        "description": "原始属性表单。                    <br>包含所有做了form、formReset、formValue绑定的属性。",
                        "dynamicCreate": true
                    }
                ],
                "inputs": "hello uiotos",
                "exec": false,
                "output": "hello uiotos",
                "bindEvents": [
                    "*",
                    "onOutput"
                ],
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    "output"
                ],
                "bindControlsTag": [
                    "dlg1"
                ],
                "bindControlsAttr": [
                    "内嵌页>0>Text1>s:text"
                ],
                "bindControlsVal": [
                    null
                ],
                "noteTips": "获取组件属性值",
                "_bindEvents_1-list": [
                    "*",
                    "onOutput"
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onOutput"
                ]
            }
        },
        {
            "c": "ht.Edge",
            "i": 114398,
            "p": {
                "name": "edge",
                "displayName": "0（edge2）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：内嵌页&gt;0&gt;Text1&gt;s:text@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：文字</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：hello uiotos</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>",
                "parent": {
                    "__i": 114397
                },
                "tag": "edge2",
                "source": {
                    "__i": 114397
                },
                "target": {
                    "__i": 114394
                }
            },
            "s": {
                "label": "",
                "edge.color": "#9A4305",
                "edge.type": "ortho",
                "edge.gap": 16,
                "edge.width.absolute": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#9A4305",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "label.position": 3,
                "edge.ripple.size": 2,
                "edge.ripple.length": 0,
                "edge.ripple.elevation": 100,
                "edge.ripple.both": true,
                "interactive": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        关联绑定信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：内嵌页&gt;0&gt;Text1&gt;s:text@dlg1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：文字</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：output@func1</li>\n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：hello uiotos</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                    </div>"
            }
        },
        {
            "c": "ht.Node",
            "i": 114399,
            "p": {
                "name": "txt",
                "displayName": "文本框（txt1）",
                "toolTip": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>",
                "tag": "txt1",
                "dataBindings": {
                    "a": {
                        "value": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "instantTrigger": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "htmlContent": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "readOnly": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "onChange": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        },
                        "_bindEvents_0": {
                            "id": "iotos.form",
                            "idinfo": "",
                            "isTplBinded": false,
                            "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
                        }
                    }
                },
                "image": {
                    "modified": "Sun Sep 03 2023 13:24:36 GMT+0800 (中国标准时间)",
                    "background": "rgb(32,37,46)",
                    "dataBindings": [{
                            "attr": "shadowBorder",
                            "valueType": "NumberArray",
                            "defaultValue": [
                                0,
                                0,
                                8
                            ],
                            "group": "功能（关键）"
                        },
                        {
                            "attr": "shadowColor",
                            "valueType": "Color",
                            "defaultValue": "rgba(55,125,255,0.50)"
                        },
                        {
                            "attr": "shadowEnabled",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "instantTrigger",
                            "valueType": "Boolean",
                            "defaultValue": true
                        },
                        {
                            "attr": "value",
                            "valueType": "Multiline",
                            "defaultValue": ""
                        },
                        {
                            "attr": "htmlContent",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "activeBorderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(51,153,255)"
                        },
                        {
                            "attr": "background",
                            "valueType": "Color",
                            "defaultValue": "rgb(255,255,255)"
                        },
                        {
                            "attr": "activeReadOnlyBackground",
                            "valueType": "Color"
                        },
                        {
                            "attr": "hoverReadOnlyBackground",
                            "valueType": "Color"
                        },
                        {
                            "attr": "hoverIcon",
                            "valueType": "Color"
                        },
                        {
                            "attr": "color",
                            "valueType": "Color"
                        },
                        {
                            "attr": "borderRadius",
                            "valueType": "Number",
                            "defaultValue": 3
                        },
                        {
                            "attr": "borderWidth",
                            "valueType": "Number",
                            "defaultValue": 1
                        },
                        {
                            "attr": "borderColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(213,213,213)"
                        },
                        {
                            "attr": "font",
                            "valueType": "Font"
                        },
                        {
                            "attr": "readOnly",
                            "valueType": "Boolean"
                        },
                        {
                            "attr": "placeholder",
                            "valueType": "String",
                            "defaultValue": "请输入"
                        },
                        {
                            "attr": "labelColor",
                            "valueType": "Color",
                            "defaultValue": "rgb(0,0,0)"
                        },
                        {
                            "attr": "labelText",
                            "valueType": "String",
                            "defaultValue": "标签"
                        },
                        {
                            "attr": "gap",
                            "valueType": "PositiveNumber",
                            "defaultValue": 10
                        },
                        {
                            "attr": "layoutVertical",
                            "valueType": "Boolean",
                            "defaultValue": false
                        },
                        {
                            "attr": "labelEmbeded",
                            "valueType": "Boolean"
                        },
                        {
                            "attr": "bindControlsTag",
                            "valueType": "StringArray",
                            "group": "bindControls"
                        },
                        {
                            "attr": "bindControlsAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "bindControlsVal",
                            "valueType": "ObjectArray",
                            "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
                        },
                        {
                            "attr": "paramControlTag",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramControlAttr",
                            "valueType": "StringArray"
                        },
                        {
                            "attr": "paramsGenerator",
                            "valueType": "Function",
                            "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "val",
                                    "index",
                                    "node",
                                    "oldVal",
                                    "form",
                                    "type",
                                    "inner"
                                ]
                            }
                        },
                        {
                            "attr": "userData",
                            "valueType": "ObjectArray"
                        },
                        {
                            "attr": "onChange",
                            "valueType": "Function",
                            "extraInfo": {
                                "arguments": [
                                    "data",
                                    "gv",
                                    "cache",
                                    "value",
                                    "extra"
                                ]
                            }
                        },
                        {
                            "attr": "_bindEvents_0",
                            "valueType": "MultiComboBox",
                            "defaultValue": "*",
                            "group": "bindEvents",
                            "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                            "dynamicCreate": true
                        }
                    ],
                    "snapshotURL": "icon.base.textarea",
                    "renderHTML": "__ht__function(data, gv, cache) {return __textArea_ui(data,gv,cache);}",
                    "width": 300,
                    "height": 100,
                    "scrollable": true,
                    "interactive": true,
                    "pixelPerfect": false,
                    "comps": [],
                    "uuid": "26FFA43F-A75F-41C3-ADE6-C5EB78FC8514"
                },
                "position": {
                    "x": 278.57874,
                    "y": -169.00238
                },
                "width": 276.51542,
                "height": 154.12335
            },
            "s": {
                "label.opacity": 1,
                "label": "6）文本框用于输入文字，\n内容将给对话框显示。",
                "label.position": 2,
                "label.offset.x": -10,
                "label.offset.y": 0,
                "label.color": "rgb(125,195,125)",
                "interactive": true,
                "image.stretch": "uniform",
                "note.font": "22px arial, sans-serif",
                "note.color": "rgb(212,0,0)",
                "note.background": "rgb(255,235,195)",
                "note.position": 3,
                "note.offset.x": 0,
                "note.offset.y": -5,
                "note.border.width": 10,
                "note.border.color": "rgb(255,235,195)",
                "note.opacity": 0,
                "note.align": "left",
                "note": "是否忘记对组件文本框（txt1）布局？当页面存在底板时为弹性布局模式，此时基本上所有组件都要求做布局。",
                "label.font": "26px arial, sans-serif",
                "layout.h": "leftright",
                "layout.v": "top",
                "fullscreen.gap": 0
            },
            "a": {
                "value": "hello uiotos",
                "bindEvents": [
                    "*",
                    "onChange"
                ],
                "labelText": "标签",
                "gap": 0,
                "paramControlTag": [
                    null
                ],
                "paramControlAttr": [
                    "value"
                ],
                "bindControlsTag": [
                    "func1"
                ],
                "bindControlsAttr": [
                    "inputs"
                ],
                "bindControlsVal": [
                    null
                ],
                "_bindEvents_0-list": [
                    "*",
                    "onChange"
                ],
                "symbol": "symbols/develop/uiotos/base/textArea-ui.json",
                "oldDynamicAttrs": [{
                    "attr": "_bindEvents_0",
                    "valueType": "MultiComboBox",
                    "defaultValue": "*",
                    "group": "bindEvents",
                    "description": "连线索引[0]的触发事件过滤器，默认全部通过",
                    "dynamicCreate": true
                }],
                "toolTipRaw": "<p style='color:rgb(242,83,75);margin:0px;font-weight:bold'>已被布局，不允许拖动<p>"
            }
        },
        {
            "c": "ht.Edge",
            "i": 114400,
            "p": {
                "name": "edge",
                "displayName": "0（edge3）",
                "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                            关联绑定信息：<br>\n                                            <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@txt1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：hello uiotos</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">静态赋值：null</li>\n                                            </div>",
                "parent": {
                    "__i": 114399
                },
                "tag": "edge3",
                "source": {
                    "__i": 114399
                },
                "target": {
                    "__i": 114397
                }
            },
            "s": {
                "label": "",
                "edge.color": "#262A8B",
                "edge.type": "flex",
                "edge.gap": 16,
                "edge.width.absolute": true,
                "note.border.width": 0,
                "note.position": 7,
                "note.opacity": 0.85,
                "note.background": "#262A8B",
                "note.offset.x": 0,
                "note.offset.y": 0,
                "icons": {
                    "symbols/demo/extra/basic/fromArrow2.json": {
                        "position": 15,
                        "keepOrien": true,
                        "names": [
                            "symbols/demo/extra/basic/fromArrow2.json"
                        ]
                    },
                    "symbols/demo/extra/basic/toArrow.json": {
                        "position": 19,
                        "keepOrien": true,
                        "width": 50,
                        "height": 20,
                        "names": [
                            "symbols/demo/extra/basic/toArrow.json"
                        ]
                    }
                },
                "note": 0,
                "interactive": true
            },
            "a": {
                "index": 0,
                "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                            关联绑定信息：<br>\n                                            <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：inputs@func1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：[object Object]</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold\">关联属性：value@txt1</li>\n                                            <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：hello uiotos</li>\n                                            <li style=\"list-style-type:disc;font-weight:bold;\">静态赋值：null</li>\n                                            </div>"
            }
        }
    ]
}