{
  "modified": "Thu Aug 08 2024 12:56:24 GMT+0800 (中国标准时间)",
  "background": "rgb(32,37,46)",
  "dataBindings": [
    {
      "attr": "symbol",
      "valueType": "Image"
    },
    {
      "attr": "interval",
      "valueType": "PositiveNumber",
      "group": "功能（关键）",
      "description": "定时器周期触发的时间间隔，单位为毫秒。",
      "defaultValue": 200
    },
    {
      "attr": "start",
      "valueType": "Boolean",
      "description": "启动或停止周期触发器。"
    },
    {
      "attr": "output",
      "valueType": "Object",
      "defaultValue": true,
      "description": "当前触发输出的值。注意，可以写固定值，也支持在属性旁链接符号中，\n通过选择iotos.form绑定后，在函数体中通过代码逻辑生成新的值return返回，\n作为属性的实际值。其中输入参数rawData为属性初始设定的固定值，node\n为组件图元对象。默认不做任何逻辑处理，将固定值输出。比如return rawData + 1\n那么表示在默认值基础上，按照时间间隔定时自增1。"
    },
    {
      "attr": "bindControlsTag",
      "valueType": "StringArray",
      "group": "bindControls"
    },
    {
      "attr": "bindControlsAttr",
      "valueType": "StringArray"
    },
    {
      "attr": "bindControlsVal",
      "valueType": "ObjectArray",
      "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。"
    },
    {
      "attr": "paramControlTag",
      "valueType": "StringArray"
    },
    {
      "attr": "paramControlAttr",
      "valueType": "StringArray"
    },
    {
      "attr": "paramsGenerator",
      "valueType": "Function",
      "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
      "extraInfo": {
        "arguments": [
          "data",
          "val",
          "index",
          "node",
          "oldVal",
          "form",
          "type",
          "inner"
        ]
      }
    },
    {
      "attr": "onEvent",
      "valueType": "Function",
      "extraInfo": {
        "arguments": [
          "data",
          "gv",
          "cache",
          "form",
          "extra"
        ]
      },
      "defaultValue": "__ht__function(data, gv, cache, param) {}"
    }
  ],
  "renderHTML": "__ht__function(data, gv, cache) {return __timerInterval(data,gv,cache);}",
  "width": 100,
  "height": 100,
  "visible": {
    "func": "attr@visible",
    "value": true
  },
  "comps": [
    {
      "type": "rect",
      "background": "rgba(33,33,33,0.01)",
      "borderColor": "#979797",
      "displayName": "矩形（矩形1）",
      "rect": [
        0,
        0,
        100,
        100
      ]
    },
    {
      "type": "shape",
      "background": {
        "func": "attr@icon-background",
        "value": "rgb(124,145,155)"
      },
      "borderWidth": {
        "func": "attr@icon-borderWidth",
        "value": 0
      },
      "borderColor": {
        "func": "attr@icon-borderColor",
        "value": null
      },
      "scaleX": 4.5,
      "scaleY": 4.5,
      "points": [
        55.33829,
        43.4056,
        55.60505,
        43.4056,
        55.82158,
        43.64959,
        55.82351,
        43.95292,
        55.82507,
        44.25331,
        55.61217,
        44.49849,
        55.34801,
        44.50026,
        54.37189,
        44.50026,
        54.37189,
        46.0038,
        54.37189,
        47.75239,
        53.40535,
        49.24828,
        52.00385,
        50,
        53.40535,
        50.74402,
        54.37189,
        52.24759,
        54.37189,
        53.99617,
        54.37189,
        55.49973,
        55.33843,
        55.49973,
        55.60428,
        55.49973,
        55.81976,
        55.74477,
        55.81976,
        56.04707,
        55.81976,
        56.34937,
        55.60428,
        56.5944,
        55.33843,
        56.5944,
        44.7043,
        56.5944,
        44.61727,
        56.58556,
        44.35506,
        56.5399,
        44.17493,
        56.26116,
        44.21508,
        55.96299,
        44.25185,
        55.68939,
        44.46292,
        55.49032,
        44.70625,
        55.49959,
        45.68054,
        55.49959,
        45.68054,
        53.99635,
        45.68054,
        52.24775,
        46.64618,
        50.75185,
        48.04859,
        50.00014,
        46.64618,
        49.2561,
        45.68054,
        47.75254,
        45.68054,
        46.00395,
        45.68054,
        44.50026,
        44.70625,
        44.50026,
        44.44042,
        44.50026,
        44.22491,
        44.25524,
        44.22491,
        43.95292,
        44.22491,
        43.65063,
        44.44042,
        43.4056,
        44.70625,
        43.4056,
        55.33829,
        43.4056,
        53.40509,
        44.50026,
        46.64411,
        44.50026,
        46.64411,
        45.99615,
        46.64411,
        47.29858,
        47.36618,
        48.49658,
        48.47762,
        49.09884,
        48.81404,
        49.29998,
        49.00634,
        49.65057,
        49.00634,
        50.00014,
        49.01605,
        50.39772,
        48.80407,
        50.75892,
        48.47762,
        50.90145,
        47.3729,
        51.50369,
        46.64411,
        52.70172,
        46.64504,
        54.00412,
        46.64504,
        55.51433,
        47.18332,
        55.51433,
        47.18332,
        54.87687,
        47.18332,
        53.70081,
        47.56417,
        52.41163,
        48.74526,
        51.62798,
        48.9386,
        51.50811,
        49.37942,
        51.29167,
        49.74082,
        50.83327,
        50.02208,
        50.1343,
        50.24442,
        50.7816,
        50.62138,
        51.23998,
        51.15489,
        51.50811,
        52.60469,
        52.35995,
        52.83377,
        53.64028,
        52.83377,
        54.87674,
        52.83377,
        55.51417,
        53.40497,
        55.51417,
        53.40497,
        54.01163,
        53.40497,
        52.70924,
        52.68395,
        51.51121,
        51.57238,
        50.90779,
        51.23609,
        50.70664,
        51.04364,
        50.35707,
        51.04364,
        50.00645,
        51.04364,
        49.60537,
        51.23596,
        49.2558,
        51.57238,
        49.10633,
        52.67707,
        48.50512,
        53.40497,
        47.30711,
        53.40497,
        46.00365,
        53.40497,
        44.50026,
        52.73342,
        46.7028,
        52.73342,
        47.41724,
        51.96021,
        48.2174,
        51.2392,
        48.55696,
        50.80812,
        48.76031,
        50.40214,
        49.14272,
        50.02234,
        49.70446,
        49.66274,
        49.14286,
        49.26842,
        48.76031,
        48.84212,
        48.55709,
        48.07177,
        48.19001,
        47.41266,
        47.45479,
        47.41266,
        46.70294,
        52.73342,
        46.70294
      ],
      "segments": [
        1,
        4,
        4,
        2,
        2,
        4,
        4,
        2,
        2,
        4,
        4,
        2,
        2,
        4,
        4,
        2,
        2,
        4,
        4,
        2,
        2,
        4,
        4,
        2,
        5,
        1,
        2,
        2,
        4,
        4,
        4,
        4,
        2,
        2,
        2,
        4,
        2,
        4,
        4,
        4,
        2,
        2,
        2,
        4,
        4,
        4,
        4,
        2,
        5,
        1,
        4,
        4,
        4,
        4,
        2,
        5
      ]
    }
  ]
}